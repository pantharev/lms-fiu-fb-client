{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/helpers/auth.guard.ts","./src/app/core/helpers/error.interceptor.ts","./src/app/core/helpers/jwt.interceptor.ts","./src/app/core/services/auth.service.ts","./src/app/core/services/authentication.service.ts","./src/app/core/services/course.service.ts","./src/app/core/services/global-announcement.service.ts","./src/app/core/services/student-course.service.ts","./src/app/core/services/student.service.ts","./src/app/modules/home/home-routing.module.ts","./src/app/modules/home/home.module.ts","./src/app/modules/home/pages/announcementsManager/create-announcement/create-announcement.component.ts","./src/app/modules/home/pages/announcementsManager/create-announcement/create-announcement.component.html","./src/app/modules/home/pages/announcementsManager/edit-announcement/edit-announcement.component.ts","./src/app/modules/home/pages/announcementsManager/edit-announcement/edit-announcement.component.html","./src/app/modules/home/pages/course-browser/course-browser.component.ts","./src/app/modules/home/pages/course-browser/course-browser.component.html","./src/app/modules/home/pages/home/home.component.ts","./src/app/modules/home/pages/home/home.component.html","./src/app/modules/home/pages/login/login.component.ts","./src/app/modules/home/pages/login/login.component.html","./src/app/modules/home/pages/profile/profile.component.ts","./src/app/modules/home/pages/profile/profile.component.html","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { AuthGuard } from './core/helpers/auth.guard';\n\n\nconst routes: Routes = [\n  { path: 'home', loadChildren: () => import('./modules/home/home.module').then(m => m.HomeModule), canActivate: [AuthGuard] },\n  { path: 'admin', loadChildren: () => import('./modules/admin/admin.module').then(m => m.AdminModule)},\n  { path: 'courses', loadChildren: () => import('./modules/course/course.module').then(m => m.CourseModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './core/services/authentication.service';\nimport { User } from './core/models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { \n  currentUser: User;\n  title = 'LMS-FIU'; \n\n  constructor(private router: Router, private authenticationService: AuthenticationService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<!--\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n-->\n\n<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { JwtInterceptor } from './core/helpers/jwt.interceptor';\nimport { ErrorInterceptor } from './core/helpers/error.interceptor';\nimport { HomeModule } from './modules/home/home.module';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\n\n\nimport { fromEventPattern } from 'rxjs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { Local } from 'protractor/built/driverProviders';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HomeModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    BrowserAnimationsModule\n  ],\n  providers: [ \n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  FBLogin() {\n    return this.http.get(`${environment.apiURL}/auth/login`);\n  }\n\n  FBLogin2(){\n    return this.http.get(`${environment.frontendURL}/userdata`);\n  }\n\n  FBLogOut(){\n    return this.http.get(`${environment.apiURL}/auth/logout`);\n  }\n\n  FBFacebook(){\n    \n    return this.http.get(`${environment.apiURL}/auth/facebook`);\n  }\n\n  getProfile() {\n    //let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(`${environment.apiURL}/profile`);\n  }\n\n  getTest() {\n    return this.http.get(`${environment.apiURL}/test`);\n  }\n\n  localLogin() {\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport decode from 'jwt-decode';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/core/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService implements CanActivate {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient, public router: Router) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('FB_user')));\n    this.currentUser = this.currentUserSubject.asObservable();\n   }\n\n   public get currentUserValue(): User {\n     return this.currentUserSubject.value;\n   }\n\n   login(email: string, password: string) {\n     return this.http.post<any>(`${environment.apiURL}/auth/login`, { email, password })\n            .pipe(map(user => {\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\n              localStorage.setItem('currentUser', JSON.stringify(user));\n              this.currentUserSubject.next(user);\n              return user;\n            }));\n   }\n\n   loginWithFB(user){\n     this.currentUserSubject.next(user);\n   }\n\n   logout() {\n     // remove user from local storage to log user out\n     return this.http.get(`${environment.apiURL}/auth/logout`).pipe(map(user => {\n      localStorage.removeItem('currentUser');\n      this.currentUserSubject.next(null);\n     }));\n     localStorage.removeItem('currentUser');\n     this.currentUserSubject.next(null);\n   }\n\n   logoutFromFB(){\n     localStorage.removeItem('FB_user');\n     this.currentUserSubject.next(null);\n   }\n\n   canActivate(route: ActivatedRouteSnapshot): boolean {\n     if(!this.currentUserValue){\n       return;\n     }\n\n    const expectedRole = route.data.expectedRole;\n\n    if(!expectedRole){\n      return true;\n    }\n\n    //const tokenPayload: User = decode(this.currentUserValue.token);\n\n    /*if(tokenPayload.role === \"admin\"){\n      return true;\n    }*/\n\n    if(this.currentUserValue.role === \"admin\"){\n      return true;\n    }\n\n    if(this.currentUserValue.role !== expectedRole){\n      console.log(\"Not \" + expectedRole);\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    /*if (tokenPayload.role !== expectedRole) {\n      console.log(\"Not \" + expectedRole);\n      this.router.navigate(['/']);\n      return false;\n    }*/\n    \n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  constructor(private http: HttpClient) { }\n\n  getCourses(pageNo, npp) {\n    let params = new HttpParams().set(\"page\", pageNo).set(\"npp\", npp);\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(`${environment.apiURL}/courses`, {headers: headers, params: params});\n  }\n\n  getCourseById(id) {\n    return this.http.get(`${environment.apiURL}/courses/${id}`);\n  }\n\n  addCourse(name, description, seats, start_date, end_date) {\n    const course = {\n      name: name,\n      description: description,\n      seats: seats,\n      start_date: start_date,\n      end_date: end_date\n    };\n    return this.http.post(`${environment.apiURL}/courses`, course);\n  }\n\n  updateCourse(id, name, description, seats, start_date, end_date) {\n    const course = {\n      name: name,\n      description: description,\n      seats: seats,\n      start_date: start_date,\n      end_date: end_date\n    };\n    return this.http.put(`${environment.apiURL}/courses/${id}`, course); //post\n  }\n\n  updateCourseSeats(id, seats){\n    const seatObject = {\n      seats: seats\n    };\n    return this.http.put(`${environment.apiURL}/courses/s/${id}`, seatObject);\n  }\n\n  deleteCourse(id) {\n    return this.http.delete(`${environment.apiURL}/courses/${id}`); //get\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalAnnouncementService {\n\n  constructor(private http: HttpClient) { }\n\n  createGlobalAnnouncement(user, content, created, changed, user_id){\n    let globalAnnouncement = {\n      user: user,\n      content: content,\n      created: created,\n      changed: changed,\n      user_id: user_id\n    };\n    return this.http.post(`${environment.apiURL}/globalAnnouncements`, globalAnnouncement);\n  }\n\n  fetchGlobalAnnouncements(){\n    return this.http.get(`${environment.apiURL}/globalAnnouncements`);\n  }\n\n  fetchGlobalAnnouncementById(id){\n    return this.http.get(`${environment.apiURL}/globalAnnouncements/${id}`);\n  }\n\n  updateGlobalAnnouncement(id, content, changed){\n    let globalAnnouncement = {\n      content: content,\n      changed: changed\n    };\n    return this.http.put(`${environment.apiURL}/globalAnnouncements/${id}`, globalAnnouncement);\n  }\n\n  deleteGlobalAnnouncement(id){\n    return this.http.delete(`${environment.apiURL}/globalAnnouncements/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentCourseService {\n\n  constructor(private http: HttpClient) { }\n  \n  getStudentsByCourseId(id) {\n    return this.http.get(`${environment.apiURL}/student-courses/c/${id}`);\n  }\n\n  getCoursesByStudentId(id) {\n    return this.http.get(`${environment.apiURL}/student-courses/s/${id}`);\n  }\n\n  getAvgStudentPoints(courseId, studentId){\n    return this.http.get(`${environment.apiURL}/student-courses/p/${courseId}/${studentId}`);\n  }\n\n  enrollStudentToCourse(student_email, course_id, enrollment_status) {\n    const student_course = {\n      student_email: student_email,\n      course_id: course_id,\n      enrollment_status: enrollment_status\n    }\n    return this.http.post(`${environment.apiURL}/student-courses`, student_course);\n  }\n\n  acceptStudentEnrollment(student_email, course_id, enrollment_status) {\n    const student_course = {\n      student_email: student_email,\n      course_id: course_id,\n      enrollment_status: enrollment_status\n    };\n    console.log(student_course);\n    return this.http.put(`${environment.apiURL}/student-courses/${student_email}`, student_course);\n  }\n\n  declineStudentEnrollment(student_id, course_id) {\n    return this.http.delete(`${environment.apiURL}/student-courses/${student_id}/${course_id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(private http: HttpClient) { }\n\n  getStudents() {\n    return this.http.get(`${environment.apiURL}/students`);\n  }\n\n  addStudent(student) {\n    return this.http.post(`${environment.apiURL}/students`, student);\n  }\n\n  updateStudent(email, student) {\n    return this.http.put(`${environment.apiURL}/students/`, student);\n  }\n\n  getStudentByEmail(studentEmail){\n    console.log(\"Called getStudentByEmail\");\n    console.log(studentEmail);\n    return this.http.get(`${environment.apiURL}/students/${studentEmail}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { CourseBrowserComponent } from './pages/course-browser/course-browser.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { CreateAnnouncementComponent } from './pages/announcementsManager/create-announcement/create-announcement.component';\n\nimport { AuthenticationService as AuthGuard } from '@app/core/services/authentication.service';\nimport { EditAnnouncementComponent } from './pages/announcementsManager/edit-announcement/edit-announcement.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'course-library', component: CourseBrowserComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'create-announcement', component: CreateAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'} },\n  { path: 'edit-announcement/:id', component: EditAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'} }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { CourseBrowserComponent } from './pages/course-browser/course-browser.component';\n\n\nimport { CourseService } from '../../core/services/course.service';\nimport { LoginComponent } from './pages/login/login.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { CreateAnnouncementComponent } from './pages/announcementsManager/create-announcement/create-announcement.component';\nimport { EditAnnouncementComponent } from './pages/announcementsManager/edit-announcement/edit-announcement.component';\n\nimport { FacebookModule } from '@greg-md/ng-facebook';\nimport { SocialLoginModule, AuthServiceConfig, FacebookLoginProvider } from 'angularx-social-login';\n\nconst config = new AuthServiceConfig([\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider('903187940138780')\n  }\n\n]);\n\nexport function provideConfig(){\n  return config;\n}\n\n@NgModule({\n  declarations: [HomeComponent, CourseBrowserComponent, LoginComponent, ProfileComponent, CreateAnnouncementComponent, EditAnnouncementComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    SocialLoginModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatOptionModule,\n    MatAutocompleteModule,\n    CKEditorModule,\n    FacebookModule\n  ],\n  providers: [\n    CourseService,\n    {\n    provide: AuthServiceConfig, \n    useFactory: provideConfig \n    }]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { Router } from '@angular/router';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-create-announcement',\n  templateUrl: './create-announcement.component.html',\n  styleUrls: ['./create-announcement.component.scss']\n})\nexport class CreateAnnouncementComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData = \"\";\n  currentUser;\n  userPayload: User;\n  isCleared;\n\n  constructor(private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private router: Router) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit(): void {\n    this.userPayload = decode(this.currentUser.token);\n    console.log(this.userPayload.f_name);\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  createAnnouncement(){\n    let userName = this.userPayload.f_name + \" \" + this.userPayload.l_name;\n    let today = new Date();\n    this.globalAnnouncementService.createGlobalAnnouncement(userName, this.editorData, today, today, this.userPayload.id).subscribe(() => {\n      //alert(\"Created announcement\");\n      this.router.navigate(['/']);\n    })\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px\">\n    <!--<ng-container *ngIf=\"courseContent | async as content\">-->\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n        <span>\n            <button (click)=\"createAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n    <!--</ng-container>-->\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-edit-announcement',\n  templateUrl: './edit-announcement.component.html',\n  styleUrls: ['./edit-announcement.component.scss']\n})\nexport class EditAnnouncementComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData;\n  currentUser;\n  userPayload: User;\n  isCleared;\n  id;\n  public globalAnnouncement;\n  globalAnnouncementDetails;\n\n  constructor(private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private router: Router, private route: ActivatedRoute) { \n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit(): void {\n    this.userPayload = decode(this.currentUser.token);\n    this.route.params.subscribe((params) => {\n      this.id = params.id;\n    })\n    this.globalAnnouncement = this.globalAnnouncementService.fetchGlobalAnnouncementById(this.id);\n    //this.fetchAnnouncementById(this.id);\n    console.log(this.userPayload.f_name);\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  editAnnouncement(){\n    let today = new Date();\n    this.globalAnnouncementService.updateGlobalAnnouncement(this.id, this.editorData, today,).subscribe(() => {\n      //alert(\"Created announcement\");\n      this.router.navigate(['/']);\n    })\n  }\n\n  fetchAnnouncementById(id){\n    this.globalAnnouncementService.fetchGlobalAnnouncementById(id).subscribe((globalAnnouncementData) => {\n      this.globalAnnouncementDetails = globalAnnouncementData;\n      console.log(globalAnnouncementData);\n    })\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px\">\n    <ng-container *ngIf=\"globalAnnouncement | async as announcement\">\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData ? editorData : announcement.content\" (change)=\"onChange($event)\"></ckeditor>\n        <span>\n            <button (click)=\"editAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData ? editorData : announcement.content\" style=\"margin-top: 30px;\" class=\"custom-font\"></div>\n    </ng-container>\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpParams } from '@angular/common/http';\n\nimport { Course } from '../../../../core/models/course.model';\nimport { User } from '@app/core/models/user';\nimport { CourseService } from '../../../../core/services/course.service';\nimport { StudentCourseService } from '@app/core/services/student-course.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { environment } from 'src/environments/environment';\n\nimport io from \"socket.io-client\";\nimport decode from 'jwt-decode';\nimport { throwToolbarMixedModesError } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-course-browser',\n  templateUrl: './course-browser.component.html',\n  styleUrls: ['./course-browser.component.scss']\n})\nexport class CourseBrowserComponent implements OnInit {\n\n  //courses: Course[];\n  courses: any = {};\n  coursesUnavailable: Boolean[] = [];\n  pages: any = [];\n  searchedCourses: any = [];\n  displayedColumns = ['id', 'name', 'description', 'seats', 'start_date', 'end_date', 'Enrollment'];\n  page = 0;\n  currentPage;\n  maxPages;\n  maxPagesArray;\n  socket;\n  searchValue;\n  searchedCourse;\n  searchedCourseObject;\n  searchedCoursesArray;\n  foundCourse = false;\n  foundCourses = false;\n  foundCoursesN: number = 0;\n  duplicateCourse = false;\n  num = 0;\n  numberPerPage = 5;\n  currentUser: User;\n  tokenUser: User;\n  studentId;\n  studentEmail\n\n  constructor(private courseService: CourseService, private studentCourseService: StudentCourseService, private authService: AuthenticationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    let page = this.route.snapshot.paramMap.get('page') || this.page;\n    this.fetchCourses(page);\n    this.socket = io.connect(environment.apiURL);\n    this.studentEmail = JSON.parse(localStorage.getItem(\"FB_user\")).email;\n    /*\n    if(this.authService.currentUserValue){\n      this.currentUser = this.authService.currentUserValue;\n      this.tokenUser = decode(this.currentUser.token);\n      if(this.currentUser)\n        this.studentId = this.tokenUser.id;\n    }\n    */\n    //console.log(\"Init page: \" + page);\n  }\n\n  fetchCourses(page) {\n    this.courseService.getCourses(page, this.numberPerPage)\n      .subscribe((data: {}) => {\n        this.courses = data;\n        this.page = page;\n        this.currentPage = this.courses.pagination.current;\n        this.maxPages = this.courses.pagination.maxPages;\n        this.maxPagesArray = new Array(this.maxPages);\n        this.pages = Object.values(this.courses.pagination);\n        //console.log(this.pages);\n        console.log('Data requested...');\n        //console.log(this.courses.res);\n        this.courses.res.forEach((course: Course, index, arr) => {\n          let start_date = new Date(arr[index].start_date.toString());\n          let end_date = new Date(arr[index].end_date.toString());\n\n          arr[index].start_date = start_date.toLocaleDateString();\n          arr[index].end_date = end_date.toLocaleDateString();\n          this.coursesUnavailable[index] = false;\n          if(course.seats < 1){\n            this.coursesUnavailable[index] = true;\n          }\n      });\n        //console.log('Data requested...');\n        //console.log(this.courses);\n        this.router.navigate(['/course-library', { page: page}]);\n      });\n  }\n\n  fetchPageCourses(pageNo) {\n    console.log(\"pageNo: \" + pageNo);\n    if(pageNo < 0) {\n      return;\n    }\n    this.courseService.getCourses(pageNo, this.numberPerPage)\n      .subscribe((data: any = {}) => {\n        this.courses = data;\n        this.page = pageNo;\n        this.currentPage = this.courses.pagination.current;\n        this.maxPages = this.courses.pagination.maxPages;\n        this.courses.res.forEach((course: Course, index, arr) => {\n            let start_date = new Date(arr[index].start_date.toString());\n            let end_date = new Date(arr[index].end_date.toString());\n\n            arr[index].start_date = start_date.toLocaleDateString();\n            arr[index].end_date = end_date.toLocaleDateString();\n            this.coursesUnavailable[index] = false;\n            if(course.seats < 1){\n              this.coursesUnavailable[index] = true;\n            }\n        });\n        console.log('Data requested...' + pageNo);\n        //console.log(this.courses);\n        //console.log(\"Current page: \" + this.courses.pagination.current);\n        this.router.navigate(['/course-library', { page: this.courses.pagination.current}]);\n      });\n  }\n\n  studentEnroll(studentEmail, courseId, course_name, enrollment_status) {\n    // Add student to students_courses table with pending enrollment\n    this.courseService.getCourseById(courseId).subscribe((course: Course) => {\n      if(course.seats > 0){\n        this.studentCourseService.enrollStudentToCourse(studentEmail, courseId, enrollment_status).subscribe(() => {\n          alert(\"Enrolled for course: \" + course_name);\n        });\n        console.log(\"StudentEmail: \" + studentEmail);\n        console.log(`Enrollment pending for courseId: ${courseId}`);\n      }\n    })\n  } \n\n\n  searchCourse(searchTerm) {\n    if(searchTerm == \"\"){\n      this.foundCoursesN = 0;\n      return;\n    }\n\n    //console.log(\"socketid: \" + this.socket.id);\n    this.socket.emit('search', searchTerm);\n\n    this.socket.on('search-data', (course) => {\n        this.searchedCourses.length = 0;\n        this.num++;\n        //console.log(course);\n        course.forEach((val, i, arr) => {\n            this.searchedCourses.push(arr[i]);\n        });\n        this.searchCourseFnAll(course);\n      });\n    }\n\n  searchedCourseFn(course) {\n    this.foundCoursesN = 1;\n\n    let start_date = new Date(course.start_date.toString());\n    let end_date = new Date(course.end_date.toString());\n\n    course.start_date = start_date.toLocaleDateString();\n    course.end_date = end_date.toLocaleDateString();\n\n    this.searchedCourseObject = course;\n    //console.log(\"searched course: \" + JSON.stringify(this.searchedCourseObject));\n  }\n\n  searchCourseFnAll(courses){\n    this.foundCoursesN = 2;\n\n    courses.forEach((course) => {\n      let start_date = new Date(course.start_date.toString());\n      let end_date = new Date(course.end_date.toString());\n\n      course.start_date = start_date.toLocaleDateString();\n      course.end_date = end_date.toLocaleDateString();\n    })\n\n    this.searchedCoursesArray = courses;\n    //console.log(\"searched courses: \" + JSON.stringify(this.searchedCoursesArray));\n\n  }\n}\n","<div class=\"center-form\">\n    <h2>Courses</h2>\n\n        <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <h2>Search for course</h2>\n            <input #search type=\"search\" name=\"search\" id=\"search\" placeholder=\"search course here....\" (keyup)=\"searchCourse(search.value)\" matInput [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let searchedCourse of searchedCourses\" [value]=\"searchedCourse.name\" (click)=\"searchedCourseFn(searchedCourse)\">\n                    {{searchedCourse.name}}\n                </mat-option>\n            </mat-autocomplete>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"foundCoursesN = 0\">Show all</button>\n        </div>           \n        </div>\n</div>\n\n<div [ngSwitch]=\"foundCoursesN\">\n    <div *ngSwitchCase=\"1\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"searchedCourseObject as course\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser\"><button type=\"submit\" (click)=\"studentEnroll(studentId, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngSwitchCase=\"2\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let course of searchedCoursesArray\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser\"><button type=\"submit\" (click)=\"studentEnroll(studentId, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngSwitchDefault>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let course of courses.res; let index = index\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser && !coursesUnavailable[index]; else elseBlock\"><button type=\"submit\" (click)=\"studentEnroll(studentId, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                    <ng-template #elseBlock>\n                        <td *ngIf=\"currentUser\"><button class=\"btn btn-danger\" style=\"cursor: not-allowed\" disabled>Full</button></td>\n                    </ng-template>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<div class=\"center-form\">\n    <nav aria-label=\"Page navigation course-library\">\n        <ul class=\"pagination\">\n\n            <ng-container *ngIf=\"page == 0; else elseBlock\">\n                <li class=\"page-item disabled\"><button class=\"page-link\" (click)=\"fetchPageCourses(page-1)\">Previous</button></li>\n            </ng-container>\n            <ng-template #elseBlock>\n                <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page-1)\">Previous</button></li>\n            </ng-template>\n\n            <ng-container *ngFor=\"let maxPages of maxPagesArray; let i = index\">\n            <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(i)\">{{i}}</button></li>\n            </ng-container>\n\n            <ng-container *ngIf=\"page == maxPages - 1; else elseBlock2\">\n                <li class=\"page-item disabled\"><button class=\"page-link\" (click)=\"fetchPageCourses(page+1)\">Next</button></li>\n            </ng-container>\n            <ng-template #elseBlock2>\n                <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page+1)\">Next</button></li>\n            </ng-template>\n            \n        </ul>\n    </nav>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HeaderComponent } from '@app/shared/header/header.component';\n//import { AuthService } from '@app/core/services/auth.service';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\nimport { StudentService } from '@app/core/services/student.service';\nimport { isEmpty } from 'lodash';\n\nimport { User } from '@app/core/models/user';\nimport decode from 'jwt-decode';\nimport { timeout } from 'rxjs/operators';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  private userData;\n  globalAnnouncements = [];\n  currentUser;\n  userPayload: User;\n\n  FB_id;\n  FB_fname: string;\n  FB_lname: string;\n  FB_email: string;\n  FB_role: string;\n  FB_User = {\n    f_name: '',\n    l_name: '',\n    email: '',\n    role: '',\n    user_id: '',\n    id: 0\n  }\n  loggedIn = false;\n  fbInitiated = false;\n  FB_settings = {\n    appId: '903187940138780',\n    version: 'v6.0'\n  };\n  timeoutVar: any;\n\n  @ViewChild('header') private myHeader: HeaderComponent;\n\n  constructor(private cookieService: CookieService, private authFB: AuthService, private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private studentService: StudentService, private FB: FacebookService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  getCookie(key: string) {\n    return this.cookieService.get(key);\n  }\n\n  ngOnInit() {\n\n    console.log(this.currentUser);\n    /*\n    Promise.resolve(decode(this.currentUser.token)).then((user) => {\n      this.userPayload = user;\n    });\n\n    var userCookie = this.getCookie('user');\n    this.globalAnnouncementService.fetchGlobalAnnouncements().subscribe((globalAnnouncementsData: any[]) => {\n      this.globalAnnouncements = globalAnnouncementsData;\n    })\n    //console.log(\"The user cookie is: \" + this.getCookie('user'));\n\n    if (localStorage.getItem('user') == '')\n      localStorage.setItem('user', userCookie);\n    this.cookieService.delete('user');\n    */\n    if (!this.currentUser) {\n      this.waitingForFBLogin();\n    } else{\n      return;\n    }\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.timeoutVar);\n    localStorage.clear();\n  }\n\n  deleteAnnouncement(id) {\n    let r = confirm(\"Delete announcement: Are you sure?\");\n    if (r) {\n      this.globalAnnouncementService.deleteGlobalAnnouncement(id).subscribe(() => {\n        alert(\"Deleted announcement\");\n      })\n    }\n  }\n\n  waitingForFBLogin() {\n    if (!(this.fbInitiated && this.loggedIn)) {\n      // FB Initialization\n      if (this.fbInitiated) {\n        this.FB.init(this.FB_settings).subscribe(() => {\n          console.log(\"fb initiated\");\n          this.fbInitiated = true;\n        });\n      }\n\n      this.FBLogin();\n    }\n    else {\n      this.timeoutVar = setTimeout(() => {\n        this.waitingForFBLogin();\n      }, 1000)\n      clearTimeout(this.timeoutVar);\n      return;\n    }\n  }\n\n\n  FBLogin() {\n    console.log(\"FBlogin\");\n    this.authFB.signIn(FacebookLoginProvider.PROVIDER_ID).then(() => {\n      this.authFB.authState.subscribe((user) => {\n        this.FB_User.user_id = user.id;\n        this.FB_User.email = user.email;\n        this.FB_User.f_name = user.firstName;\n        this.FB_User.l_name = user.lastName;\n\n        this.loggedIn = (user != null);\n        if (this.loggedIn) {\n          console.log(\"login successful.\");\n          // Check if user is in DB\n          console.log(this.FB_User.email);\n          let isNewStudent: Promise<Boolean>|null = null;\n          this.studentService.getStudentByEmail(this.FB_User.email).subscribe((user: any) => {\n            // In DB\n            console.log(user);\n            this.FB_User.role = user.role;\n            this.FB_User.id = user.id;\n            console.log(this.FB_User);\n            this.inStudentDB(this.FB_User);\n          }, (error) => {\n            // Not in DB\n            this.FB_User.role = 'student';\n            this.notInStudentDB(this.FB_User);\n          });\n        }\n      });\n    });\n  }\n\n  inStudentDB(FBUser: any) {\n    const userData: JSON = <JSON><any>{\n      \"email\": FBUser.email,\n      \"f_name\": FBUser.f_name,\n      \"l_name\": FBUser.l_name,\n      \"role\": FBUser.role,\n      \"user_id\": FBUser.user_id,\n      \"id\": FBUser.id\n    };\n\n    this.authenticationService.loginWithFB(userData);\n\n    console.log(\"Student found in DB, updating info\");\n    this.studentService.updateStudent(this.FB_email, userData).subscribe(() => {\n      console.log(\"updated student\");\n    });\n    localStorage.setItem(\"FB_user\", JSON.stringify(userData));\n    console.log(JSON.stringify(userData));\n  }\n\n  notInStudentDB(FBUser: any){\n    const userData: JSON = <JSON><any>{\n      \"email\": FBUser.email,\n      \"f_name\": FBUser.f_name,\n      \"l_name\": FBUser.l_name,\n      \"user_id\": FBUser.user_id,\n      \"id\": FBUser.id,\n      \"role\": FBUser.role\n    };\n\n    this.authenticationService.loginWithFB(userData);\n\n    console.log(\"Student not found in DB, adding\");\n    this.studentService.addStudent(userData).subscribe(() => {\n      console.log(\"added to db\");\n    });\n    localStorage.setItem(\"FB_user\", JSON.stringify(userData));\n    console.log(JSON.stringify(userData));\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-4 center-form\">\n            <h2>Welcome to LMS FIU</h2>\n            <img src=\"../../../../../assets/images/FIU_Panther_Logo.png\" alt=\"FIU_Panther_Logo\" width=\"400\"\n                height=\"400\">\n            <a routerLink=\"/course-library\" class=\"btn btn-primary\">Browse Courses</a>\n        </div>\n    </div>\n    <div class=\"row justify-content-center\">\n        <div class=\"col-4 center-form\">\n            <ng-container *ngIf=\"userPayload\">\n                <a *ngIf=\"userPayload.role == 'admin'\" routerLink=\"/create-announcement\" class=\"btn btn-primary\"\n                    style=\"margin-top:30px\">Create Announcement</a>\n            </ng-container>\n            <h2>Announcements:</h2>\n            <div *ngFor=\"let announcement of globalAnnouncements\" class=\"announcement\">\n                <p>{{announcement.user}} | {{announcement.created >= announcement.changed ? (announcement.created | date:'short') : (announcement.changed | date:'short')}}</p>\n                <div [innerHTML]=\"announcement.content\" class=\"custom-font\"></div>\n                <div *ngIf=\"userPayload.role == 'admin'\">\n                    <a routerLink=\"/edit-announcement/{{announcement.id}}\" class=\"btn btn-success\">Edit</a>\n                    <button type=\"button\" (click)=\"deleteAnnouncement(announcement.id)\"\n                        class=\"btn btn-danger\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\nimport { StudentService } from '@app/core/services/student.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n\n  FB_id;\n  FB_fname: string;\n  FB_lname: string;\n  FB_email: string;\n  FB_role: string;\n  loggedIn = false;\n  fbInitiated = false;\n  FB_settings = {\n    appId: '903187940138780',\n    version: 'v6.0'\n  };\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService, private FB: FacebookService, private authFB: AuthService, private studentService: StudentService) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    //console.log(this.returnUrl);\n    if (!this.fbInitiated) {\n      this.FB.init(this.FB_settings).subscribe();\n      console.log(\"fb initiated\");\n      this.fbInitiated = true;\n    }\n\n    if (!this.loggedIn) {\n      this.FBLogin();\n      setTimeout(() => {\n        console.log(\"loggedIn: \" + this.loggedIn);\n        if (this.loggedIn) {\n          console.log(\"login successful.\");\n          var userData: JSON = <JSON><any>{\n            \"email\": this.FB_email,\n            \"f_name\": this.FB_fname,\n            \"l_name\": this.FB_lname,\n            \"user_id\": this.FB_id,\n            \"role\": this.FB_role\n          };\n          console.log(JSON.stringify(userData));\n          localStorage.setItem(\"FB_user\", JSON.stringify(userData));\n          console.log(\"user data stored. Info:\")\n          console.log(\"full: \" + JSON.parse(localStorage.getItem(\"FB_user\")));\n          console.log(\"name: \" + JSON.parse(localStorage.getItem(\"FB_user\")).f_name + \" \" + JSON.parse(localStorage.getItem(\"FB_user\")).l_name);\n          // Database functions\n          // Student is added (returns error if email already exists, code continues)\n          this.studentService.addStudent(userData).subscribe();\n          // Data is updated (in case email already existed but user data is different)\n          this.studentService.updateStudent(this.FB_email, userData).subscribe();\n        }\n      }, 1000);\n    }\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit(email, password) {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    //this.loading = true;\n    this.authenticationService.login(email, password)// this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          console.log(data);\n          //this.loading = false;\n          this.router.navigate([this.returnUrl]);\n        },\n        (error) => {\n          this.error = error;\n        }\n      );\n  }\n\n  FBLogin() {\n    console.log(\"FBlogin\");\n    this.authFB.signIn(FacebookLoginProvider.PROVIDER_ID);\n    this.authFB.authState.subscribe((user) => {\n      this.FB_id = user.id;\n      this.FB_email = user.email;\n      this.FB_fname = user.firstName;\n      this.FB_lname = user.lastName;\n      this.loggedIn = (user != null);\n    });\n    console.log(this.FB_id);\n    console.log(this.FB_email);\n    //localStorage.setItem(\"FB_email\", this.FB_email);\n    //localStorage.setItem(\"FB_id\", this.FB_id);\n    //localStorage.setItem(\"FB_name\", this.FB_name);\n  }\n}\n","<!--<button type=\"button\" (click)=\"signInWithFB()\" class=\"btn btn-primary\"><i class=\"fab fa-facebook\"></i>Login</button>\n<a href=\"https://localhost:3000/auth/login\" class=\"btn btn-primary\"><i class=\"fab fa-facebook\"></i>Login For Real</a>\n<a href=\"https://localhost:3000/auth/logout\" class=\"btn btn-primary\"><i class=\"fab fa-facebook\"></i>Logout</a>-->\n\n<div class=\"col-md-6 offset-md-3 mt-5\">\n    <div class=\"row justify-content-center\">\n        <div class=\"alert alert-info\">\n            <h4 style=\"color: red\">Admin</h4>\n            email: doe@mail.com<br />\n            Password: pass\n        </div>\n        <div class=\"alert alert-info\">\n            <h4 style=\"color: green\">Instructor</h4>\n            email: mail2@mail.edu<br />\n            Password: pass\n        </div>\n        <div class=\"alert alert-info\">\n            <h4 style=\"color: blue\">Student</h4>\n            email: mail3@mail.edu<br />\n            Password: pass\n        </div>\n    </div>\n    <div class=\"card\">\n        <h4 class=\"card-header\">Login to LMS-FIU</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(email.value, password.value)\">\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" #email />\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" #password />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  profileData;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((data) => {\n      this.profileData = data;\n      console.log(this.profileData);\n      console.log(\"The profile data is: \" + JSON.stringify(data));\n    })\n\n    /*this.authService.getTest().subscribe((data) => {\n      this.testData = data;\n      console.log(JSON.stringify(this.testData));\n    })*/\n  }\n\n}\n","<p>Your Profile</p>\n<ul *ngIf=\"profileData as user\" style=\"list-style-type: none\">\n        <li>{{user.role}}</li>\n        <li>{{user.email}}</li>\n        <li>{{user.f_name}}</li>\n        <li>{{user.l_name}}</li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  today: number = Date.now();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer>\n    <hr>\n    <div class=\"center-footer\">\n        <span style=\"margin-right: 5px\">&copy; {{ today | date: 'yyyy' }}</span>\n        <a class=\"logo-font\" routerLink=\"/\">LMSFIU</a>\n        <span class=\"attribution\" style=\"margin-left: 5px\">\n            An interactive online course system from FIU.\n        </span>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\nimport { User } from '@app/core/models/user';\nimport decode from 'jwt-decode';\nimport { identifierModuleUrl } from '@angular/compiler';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  currentUser: Promise<User>;\n  currentUserAsync;\n  FB_user: any;\n  isAdmin: boolean;\n  tokenPayload: Promise<void | User>;\n\n  constructor(private router: Router, private authenticationService: AuthenticationService, private FB: FacebookService, private authFB: AuthService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = Promise.resolve(x));\n  }\n\n  ngOnInit() {\n    console.log(\"header OnInit\");\n    this.currentUser.then((user) => {\n      console.log(\"ngOnInit\");\n      console.log(user);\n      this.isAdmin = true;\n    })\n    this.currentUserAsync = this.authenticationService.currentUser.subscribe();\n  }\n\n  ngOnChanges(){\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = Promise.resolve(x));\n    this.currentUser.then((user) => {\n      console.log(\"ngOnChanges\");\n      console.log(user);\n      this.isAdmin = true;\n    })\n    this.currentUserAsync = this.authenticationService.currentUser.subscribe();\n  }\n\n  ngAfterViewInit() {\n    this.FB_user = JSON.parse(localStorage.getItem(\"FB_user\"));\n    if (this.FB_user) {\n      if (this.FB_user.role == \"admin\") {\n        this.isAdmin = true;\n      }\n    }\n  }\n\n\n  /*reInit(){\n    this.authenticationService.currentUser.subscribe(x => {\n      this.currentUser = x;\n      //this.tokenPayload = decode(this.currentUser.token);\n    });\n    //console.log(\"CurrentUser: \" + JSON.stringify(this.currentUser));\n    if(this.currentUser)\n      var myInterval = setTimeout(() => {\n        console.log(\"User Header0: \" + this.currentUser.token);\n      //console.log(\"User Header: \" + localStorage.getItem('currentUser'));\n      if(this.authenticationService.currentUserValue){\n        this.tokenPayload = decode(this.currentUser.token);\n      }\n      }, 1000);\n  }*/\n\n  logout() {\n    /*\n    this.authenticationService.logout().subscribe(() => {\n      console.log(\"Logged out\");\n      this.router.navigate(['/login']);\n    });\n    //this.router.navigate(['/login']);\n    */\n    this.authFB.signOut();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark lms-bg\">\n  <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../../../assets/android-chrome-512x512.png\" alt=\"FIU Logo\" width=\"32\"\n      height=\"32\"></a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\n    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/course-library\" routerLinkActive=\"active\">Course-Library</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/courses\" routerLinkActive=\"active\">Student Dashboard</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"isAdmin\">\n        <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n      </li>\n    </ul>\n  </div>\n  <ul class=\"navbar-nav\" *ngIf=\"currentUserAsync | async as cu\">\n    <li class=\"nav-item\">\n      <span class=\"nav-welcome\">Hello, {{cu.f_name}} {{cu.l_name}}!</span>\n    </li>\n    <li class=\"nav-item\">\n      <span class=\"nav-welcome\">Role: {{cu.role}}</span>\n    </li>\n  </ul>\n  <!---\n    <li class=\"nav-item\" *ngIf=\"FB_user;\">\n      <a class=\"nav-link\" (click)=\"logout()\" style=\"cursor:pointer\"><i class=\"fas fa-sign-out-alt\"></i> Logout</a>\n    </li>\n    \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/profile\" routerLinkActive=\"active\"><i class=\"fas fa-user\"></i>Profile</a>\n      </li>\n  \n      \n  \n  <ng-template #elseBlock>\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\"><i class=\"fas fa-sign-in-alt\"></i> Login</a>\n      </li>\n      \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Sign Up</a>\n      </li>\n      \n    </ul>\n    \n  </ng-template>\n  -->\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:3000',\n  frontendURL: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}