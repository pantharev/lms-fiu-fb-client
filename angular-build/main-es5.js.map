{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/helpers/auth.guard.ts","webpack:///src/app/core/helpers/error.interceptor.ts","webpack:///src/app/core/helpers/jwt.interceptor.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/core/services/authentication.service.ts","webpack:///src/app/core/services/course.service.ts","webpack:///src/app/core/services/global-announcement.service.ts","webpack:///src/app/core/services/student-course.service.ts","webpack:///src/app/core/services/student.service.ts","webpack:///src/app/modules/home/home-routing.module.ts","webpack:///src/app/modules/home/home.module.ts","webpack:///src/app/modules/home/pages/announcementsManager/create-announcement/create-announcement.component.ts","webpack:///src/app/modules/home/pages/announcementsManager/create-announcement/create-announcement.component.html","webpack:///src/app/modules/home/pages/announcementsManager/edit-announcement/edit-announcement.component.ts","webpack:///src/app/modules/home/pages/announcementsManager/edit-announcement/edit-announcement.component.html","webpack:///src/app/modules/home/pages/course-browser/course-browser.component.ts","webpack:///src/app/modules/home/pages/course-browser/course-browser.component.html","webpack:///src/app/modules/home/pages/home/home.component.ts","webpack:///src/app/modules/home/pages/home/home.component.html","webpack:///src/app/modules/home/pages/profile/profile.component.ts","webpack:///src/app/modules/home/pages/profile/profile.component.html","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","HomeModule","canActivate","AdminModule","CourseModule","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","router","authenticationService","studentService","FB","authFB","title","FB_User","email","f_name","l_name","user_id","role","loggedIn","fbInitiated","FB_settings","appId","version","currentUser","subscribe","x","console","log","init","waitingForFBLogin","logout","navigate","logoutFromFB","FBLogin","timeoutVar","setTimeout","clearTimeout","signIn","PROVIDER_ID","authState","user","firstName","lastName","isNewStudent","getStudentByEmail","inStudentDB","error","notInStudentDB","FBUser","userData","loginWithFB","updateStudent","FB_email","localStorage","setItem","JSON","stringify","addStudent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","route","state","currentUserValue","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","location","reload","message","statusText","JwtInterceptor","token","clone","setHeaders","Authorization","AuthService","http","get","apiURL","frontendURL","AuthenticationService","currentUserSubject","parse","getItem","asObservable","password","post","removeItem","expectedRole","data","value","CourseService","pageNo","npp","params","set","headers","name","description","seats","start_date","end_date","course","put","seatObject","GlobalAnnouncementService","content","created","changed","globalAnnouncement","StudentCourseService","courseId","studentId","student_id","course_id","enrollment_status","student_course","points","StudentService","student","studentEmail","component","HomeRoutingModule","forChild","config","provider","provideConfig","useFactory","CreateAnnouncementComponent","globalAnnouncementService","Editor","editorData","editor","setData","getData","isCleared","userName","today","Date","createGlobalAnnouncement","onChange","createAnnouncement","EditAnnouncementComponent","fetchGlobalAnnouncementById","updateGlobalAnnouncement","globalAnnouncementData","globalAnnouncementDetails","CourseBrowserComponent","courseService","studentCourseService","authService","courses","coursesUnavailable","pages","searchedCourses","displayedColumns","page","foundCourse","foundCourses","foundCoursesN","duplicateCourse","num","numberPerPage","snapshot","paramMap","fetchCourses","socket","connect","getCourses","currentPage","pagination","current","maxPages","maxPagesArray","Array","Object","values","res","forEach","index","arr","toString","toLocaleDateString","course_name","getCourseById","enrollStudentToCourse","alert","searchTerm","emit","on","length","val","i","push","searchCourseFnAll","searchedCourseObject","searchedCoursesArray","searchCourse","HomeComponent","cookieService","globalAnnouncements","key","fetchGlobalAnnouncements","globalAnnouncementsData","r","confirm","deleteGlobalAnnouncement","ProfileComponent","getProfile","profileData","FooterComponent","now","HeaderComponent","isAdmin","currentUserAsync","waitForCurrentUser","signOut","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { AuthGuard } from './core/helpers/auth.guard';\n\n\nconst routes: Routes = [\n  { path: 'home', loadChildren: () => import('./modules/home/home.module').then(m => m.HomeModule), canActivate: [AuthGuard] },\n  { path: 'admin', loadChildren: () => import('./modules/admin/admin.module').then(m => m.AdminModule)},\n  { path: 'courses', loadChildren: () => import('./modules/course/course.module').then(m => m.CourseModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './core/services/authentication.service';\nimport { StudentService } from './core/services/student.service';\nimport { User } from './core/models/user';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  currentUser: User;\n  title = 'LMS-FIU';\n\n  FB_id;\n  FB_fname: string;\n  FB_lname: string;\n  FB_email: string;\n  FB_role: string;\n  FB_User = {\n    id: 0,\n    email: '',\n    f_name: '',\n    l_name: '',\n    user_id: '',\n    role: ''\n  }\n  loggedIn = false;\n  fbInitiated = false;\n  FB_settings = {\n    appId: '903187940138780',\n    version: 'v6.0'\n  };\n  timeoutVar: any;\n\n\n  constructor(private router: Router, private authenticationService: AuthenticationService, private studentService: StudentService,\n    private FB: FacebookService, private authFB: AuthService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit() {\n\n    console.log(\"app.component init2\");\n    this.FB.init(this.FB_settings).subscribe(() => {\n      console.log(\"fb initiated\");\n      this.waitingForFBLogin();\n    });\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  ngOnDestroy() {\n    this.authenticationService.logoutFromFB();\n  }\n\n  waitingForFBLogin() {\n    console.log(\"waiting for FB login\");\n    console.log(\"Logged in: \" + this.loggedIn);\n    if (!this.loggedIn) {\n      this.FBLogin();\n    }\n    else {\n      this.timeoutVar = setTimeout(() => {\n        this.waitingForFBLogin();\n      }, 1000)\n      clearTimeout(this.timeoutVar);\n      return;\n    }\n  }\n\n  FBLogin() {\n    console.log(\"FBlogin-appc\");\n    this.authFB.signIn(FacebookLoginProvider.PROVIDER_ID).then(() => {\n      this.authFB.authState.subscribe((user) => {\n        this.FB_User.user_id = user.id;\n        this.FB_User.email = user.email;\n        this.FB_User.f_name = user.firstName;\n        this.FB_User.l_name = user.lastName;\n\n        this.loggedIn = (user != null);\n        if (this.loggedIn) {\n          console.log(\"login successful.\");\n          // Check if user is in DB\n          console.log(this.FB_User.email);\n          let isNewStudent: Promise<Boolean> | null = null;\n          this.studentService.getStudentByEmail(this.FB_User.email).subscribe((user: any) => {\n            // In DB\n            console.log(user);\n            this.FB_User.role = user.role;\n            this.FB_User.id = user.id;\n            console.log(this.FB_User);\n            this.inStudentDB(this.FB_User);\n          }, (error) => {\n            // Not in DB\n            this.FB_User.role = 'student';\n            this.notInStudentDB(this.FB_User);\n          });\n        }\n      });\n    });\n  }\n\n\n  inStudentDB(FBUser: any) {\n    const userData = {\n      \"id\": FBUser.id,\n      \"email\": FBUser.email,\n      \"f_name\": FBUser.f_name,\n      \"l_name\": FBUser.l_name,\n      \"user_id\": FBUser.user_id,\n      \"role\": FBUser.role\n    };\n    this.authenticationService.loginWithFB(userData);\n\n    console.log(\"Student found in DB, updating info\");\n    console.log(FBUser.role);\n    this.studentService.updateStudent(this.FB_email, userData).subscribe(() => {\n      console.log(\"updated student\");\n    });\n    localStorage.setItem(\"FB_user\", JSON.stringify(userData));\n    console.log(userData);\n  }\n\n  notInStudentDB(FBUser: any) {\n    let userData = {\n      \"id\": '',\n      \"email\": FBUser.email,\n      \"f_name\": FBUser.f_name,\n      \"l_name\": FBUser.l_name,\n      \"user_id\": FBUser.user_id,\n      \"role\": FBUser.role\n    };\n\n    this.authenticationService.loginWithFB(userData);\n\n    console.log(\"Student not found in DB, adding\");\n    this.studentService.addStudent(userData).subscribe((user: any) => {\n      console.log(user);\n      console.log(user.id);\n      userData.id = user.id;\n      console.log(\"added to db\");\n      localStorage.setItem(\"FB_user\", JSON.stringify(userData));\n      console.log(userData);\n    });\n  }\n}\n","<!--\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n-->\n\n<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { JwtInterceptor } from './core/helpers/jwt.interceptor';\nimport { ErrorInterceptor } from './core/helpers/error.interceptor';\nimport { HomeModule } from './modules/home/home.module';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\n\n\nimport { fromEventPattern } from 'rxjs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { Local } from 'protractor/built/driverProviders';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HomeModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    BrowserAnimationsModule\n  ],\n  providers: [ \n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  FBLogin() {\n    return this.http.get(`${environment.apiURL}/auth/login`);\n  }\n\n  FBLogin2(){\n    return this.http.get(`${environment.frontendURL}/userdata`);\n  }\n\n  FBLogOut(){\n    return this.http.get(`${environment.apiURL}/auth/logout`);\n  }\n\n  FBFacebook(){\n    \n    return this.http.get(`${environment.apiURL}/auth/facebook`);\n  }\n\n  getProfile() {\n    //let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(`${environment.apiURL}/profile`);\n  }\n\n  getTest() {\n    return this.http.get(`${environment.apiURL}/test`);\n  }\n\n  localLogin() {\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport decode from 'jwt-decode';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/core/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService implements CanActivate {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient, public router: Router) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('FB_user')));\n    this.currentUser = this.currentUserSubject.asObservable();\n   }\n\n   public get currentUserValue(): User {\n     return this.currentUserSubject.value;\n   }\n\n   login(email: string, password: string) {\n     return this.http.post<any>(`${environment.apiURL}/auth/login`, { email, password })\n            .pipe(map(user => {\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\n              localStorage.setItem('currentUser', JSON.stringify(user));\n              this.currentUserSubject.next(user);\n              return user;\n            }));\n   }\n\n   loginWithFB(user){\n     this.currentUserSubject.next(user);\n   }\n\n   logout() {\n     // remove user from local storage to log user out\n     return this.http.get(`${environment.apiURL}/auth/logout`).pipe(map(user => {\n      localStorage.removeItem('currentUser');\n      this.currentUserSubject.next(null);\n     }));\n     localStorage.removeItem('currentUser');\n     this.currentUserSubject.next(null);\n   }\n\n   logoutFromFB(){\n     localStorage.removeItem('FB_user');\n     this.currentUserSubject.next(null);\n   }\n\n   canActivate(route: ActivatedRouteSnapshot): boolean {\n     if(!this.currentUserValue){\n       return;\n     }\n\n    const expectedRole = route.data.expectedRole;\n\n    if(!expectedRole){\n      return true;\n    }\n\n    //const tokenPayload: User = decode(this.currentUserValue.token);\n\n    /*if(tokenPayload.role === \"admin\"){\n      return true;\n    }*/\n\n    if(this.currentUserValue.role === \"admin\"){\n      return true;\n    }\n\n    if(this.currentUserValue.role !== expectedRole){\n      console.log(\"Not \" + expectedRole);\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    /*if (tokenPayload.role !== expectedRole) {\n      console.log(\"Not \" + expectedRole);\n      this.router.navigate(['/']);\n      return false;\n    }*/\n    \n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  constructor(private http: HttpClient) { }\n\n  getCourses(pageNo, npp) {\n    let params = new HttpParams().set(\"page\", pageNo).set(\"npp\", npp);\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(`${environment.apiURL}/courses`, {headers: headers, params: params});\n  }\n\n  getCourseById(id) {\n    return this.http.get(`${environment.apiURL}/courses/${id}`);\n  }\n\n  addCourse(name, description, seats, start_date, end_date) {\n    const course = {\n      name: name,\n      description: description,\n      seats: seats,\n      start_date: start_date,\n      end_date: end_date\n    };\n    return this.http.post(`${environment.apiURL}/courses`, course);\n  }\n\n  updateCourse(id, name, description, seats, start_date, end_date) {\n    const course = {\n      name: name,\n      description: description,\n      seats: seats,\n      start_date: start_date,\n      end_date: end_date\n    };\n    return this.http.put(`${environment.apiURL}/courses/${id}`, course); //post\n  }\n\n  updateCourseSeats(id, seats){\n    const seatObject = {\n      seats: seats\n    };\n    return this.http.put(`${environment.apiURL}/courses/s/${id}`, seatObject);\n  }\n\n  deleteCourse(id) {\n    return this.http.delete(`${environment.apiURL}/courses/${id}`); //get\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalAnnouncementService {\n\n  constructor(private http: HttpClient) { }\n\n  createGlobalAnnouncement(user, content, created, changed, user_id){\n    let globalAnnouncement = {\n      user: user,\n      content: content,\n      created: created,\n      changed: changed,\n      user_id: user_id\n    };\n    return this.http.post(`${environment.apiURL}/globalAnnouncements`, globalAnnouncement);\n  }\n\n  fetchGlobalAnnouncements(){\n    return this.http.get(`${environment.apiURL}/globalAnnouncements`);\n  }\n\n  fetchGlobalAnnouncementById(id){\n    return this.http.get(`${environment.apiURL}/globalAnnouncements/${id}`);\n  }\n\n  updateGlobalAnnouncement(id, content, changed){\n    let globalAnnouncement = {\n      content: content,\n      changed: changed\n    };\n    return this.http.put(`${environment.apiURL}/globalAnnouncements/${id}`, globalAnnouncement);\n  }\n\n  deleteGlobalAnnouncement(id){\n    return this.http.delete(`${environment.apiURL}/globalAnnouncements/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentCourseService {\n\n  constructor(private http: HttpClient) { }\n  \n  getStudentsByCourseId(id) {\n    return this.http.get(`${environment.apiURL}/student-courses/c/${id}`);\n  }\n\n  getCoursesByStudentId(id) {\n    return this.http.get(`${environment.apiURL}/student-courses/s/${id}`);\n  }\n\n  getAvgStudentPoints(courseId, studentId){\n    return this.http.get(`${environment.apiURL}/student-courses/p/${courseId}/${studentId}`);\n  }\n\n  getInstructorByCourseId(id){\n    return this.http.get(`${environment.apiURL}/student-courses/i/${id}`);\n  }\n\n  enrollStudentToCourse(student_id, course_id, enrollment_status) {\n    const student_course = {\n      student_id: student_id,\n      course_id: course_id,\n      enrollment_status: enrollment_status,\n      points: 0\n    }\n    console.log(student_course);\n    return this.http.post(`${environment.apiURL}/student-courses`, student_course);\n  }\n\n  acceptStudentEnrollment(student_id, course_id, enrollment_status) {\n    const student_course = {\n      student_id: student_id,\n      course_id: course_id,\n      enrollment_status: enrollment_status\n    };\n    console.log(student_course);\n    return this.http.put(`${environment.apiURL}/student-courses/${student_id}`, student_course);\n  }\n\n  declineStudentEnrollment(student_id, course_id) {\n    return this.http.delete(`${environment.apiURL}/student-courses/${student_id}/${course_id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(private http: HttpClient) { }\n\n  getStudents() {\n    return this.http.get(`${environment.apiURL}/students`);\n  }\n\n  getInstructors(){\n    return this.http.get(`${environment.apiURL}/students/i`);\n  }\n\n  addStudent(student) {\n    return this.http.post(`${environment.apiURL}/students`, student);\n  }\n\n  updateStudent(email, student) {\n    return this.http.put(`${environment.apiURL}/students/`, student);\n  }\n\n  getStudentByEmail(studentEmail){\n    console.log(\"Called getStudentByEmail\");\n    console.log(studentEmail);\n    return this.http.get(`${environment.apiURL}/students/${studentEmail}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { CourseBrowserComponent } from './pages/course-browser/course-browser.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { CreateAnnouncementComponent } from './pages/announcementsManager/create-announcement/create-announcement.component';\n\nimport { AuthenticationService as AuthGuard } from '@app/core/services/authentication.service';\nimport { EditAnnouncementComponent } from './pages/announcementsManager/edit-announcement/edit-announcement.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'course-library', component: CourseBrowserComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'create-announcement', component: CreateAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'} },\n  { path: 'edit-announcement/:id', component: EditAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'} }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { CourseBrowserComponent } from './pages/course-browser/course-browser.component';\n\n\nimport { CourseService } from '../../core/services/course.service';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { CreateAnnouncementComponent } from './pages/announcementsManager/create-announcement/create-announcement.component';\nimport { EditAnnouncementComponent } from './pages/announcementsManager/edit-announcement/edit-announcement.component';\n\nimport { FacebookModule } from '@greg-md/ng-facebook';\nimport { SocialLoginModule, AuthServiceConfig, FacebookLoginProvider } from 'angularx-social-login';\n\nconst config = new AuthServiceConfig([\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider('903187940138780')\n  }\n\n]);\n\nexport function provideConfig() {\n  return config;\n}\n\n@NgModule({\n  declarations: [HomeComponent, CourseBrowserComponent, ProfileComponent, CreateAnnouncementComponent, EditAnnouncementComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    SocialLoginModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatOptionModule,\n    MatAutocompleteModule,\n    CKEditorModule,\n    FacebookModule\n  ],\n  providers: [\n    CourseService,\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { Router } from '@angular/router';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-create-announcement',\n  templateUrl: './create-announcement.component.html',\n  styleUrls: ['./create-announcement.component.scss']\n})\nexport class CreateAnnouncementComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData = \"\";\n  currentUser: User;\n  userPayload: User;\n  isCleared;\n\n  constructor(private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private router: Router) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit(): void {\n    //this.userPayload = decode(this.currentUser.token);\n    console.log(this.currentUser.f_name);\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  createAnnouncement(){\n    let userName = this.currentUser.f_name + \" \" + this.currentUser.l_name;\n    let today = new Date();\n    this.globalAnnouncementService.createGlobalAnnouncement(userName, this.editorData, today, today, this.currentUser.id).subscribe(() => {\n      //alert(\"Created announcement\");\n      this.router.navigate(['/']);\n    })\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px\">\n    <!--<ng-container *ngIf=\"courseContent | async as content\">-->\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n        <span>\n            <button (click)=\"createAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n    <!--</ng-container>-->\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-edit-announcement',\n  templateUrl: './edit-announcement.component.html',\n  styleUrls: ['./edit-announcement.component.scss']\n})\nexport class EditAnnouncementComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData;\n  currentUser: User;\n  userPayload: User;\n  isCleared;\n  id;\n  public globalAnnouncement;\n  globalAnnouncementDetails;\n\n  constructor(private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private router: Router, private route: ActivatedRoute) { \n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit(): void {\n    //this.userPayload = decode(this.currentUser.token);\n    this.route.params.subscribe((params) => {\n      this.id = params.id;\n    })\n    this.globalAnnouncement = this.globalAnnouncementService.fetchGlobalAnnouncementById(this.id);\n    //this.fetchAnnouncementById(this.id);\n    console.log(this.currentUser.f_name);\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  editAnnouncement(){\n    let today = new Date();\n    this.globalAnnouncementService.updateGlobalAnnouncement(this.id, this.editorData, today,).subscribe(() => {\n      //alert(\"Created announcement\");\n      this.router.navigate(['/']);\n    })\n  }\n\n  fetchAnnouncementById(id){\n    this.globalAnnouncementService.fetchGlobalAnnouncementById(id).subscribe((globalAnnouncementData) => {\n      this.globalAnnouncementDetails = globalAnnouncementData;\n      console.log(globalAnnouncementData);\n    })\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px\">\n    <ng-container *ngIf=\"globalAnnouncement | async as announcement\">\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData ? editorData : announcement.content\" (change)=\"onChange($event)\"></ckeditor>\n        <span>\n            <button (click)=\"editAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData ? editorData : announcement.content\" style=\"margin-top: 30px;\" class=\"custom-font\"></div>\n    </ng-container>\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpParams } from '@angular/common/http';\n\nimport { Course } from '../../../../core/models/course.model';\nimport { User } from '@app/core/models/user';\nimport { CourseService } from '../../../../core/services/course.service';\nimport { StudentCourseService } from '@app/core/services/student-course.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { environment } from 'src/environments/environment';\n\nimport io from \"socket.io-client\";\nimport decode from 'jwt-decode';\nimport { throwToolbarMixedModesError } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-course-browser',\n  templateUrl: './course-browser.component.html',\n  styleUrls: ['./course-browser.component.scss']\n})\nexport class CourseBrowserComponent implements OnInit {\n\n  //courses: Course[];\n  courses: any = {};\n  coursesUnavailable: Boolean[] = [];\n  pages: any = [];\n  searchedCourses: any = [];\n  displayedColumns = ['id', 'name', 'description', 'seats', 'start_date', 'end_date', 'Enrollment'];\n  page = 0;\n  currentPage;\n  maxPages;\n  maxPagesArray;\n  socket;\n  searchValue;\n  searchedCourse;\n  searchedCourseObject;\n  searchedCoursesArray;\n  foundCourse = false;\n  foundCourses = false;\n  foundCoursesN: number = 0;\n  duplicateCourse = false;\n  num = 0;\n  numberPerPage = 5;\n  currentUser: User;\n  tokenUser: User;\n  studentId;\n  studentEmail\n\n  constructor(private courseService: CourseService, private studentCourseService: StudentCourseService, private authService: AuthenticationService, private router: Router, private route: ActivatedRoute) { \n    this.authService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit() {\n    let page = this.route.snapshot.paramMap.get('page') || this.page;\n    this.fetchCourses(page);\n    this.socket = io.connect(environment.apiURL);\n    this.studentEmail = JSON.parse(localStorage.getItem(\"FB_user\")).email;\n\n    console.log(\"course-browser:\");\n    console.log(this.currentUser);\n    this.studentId = this.currentUser.id;\n    if(this.authService.currentUserValue){\n      this.currentUser = this.authService.currentUserValue;\n      //this.tokenUser = decode(this.currentUser.token);\n      if(this.currentUser)\n        this.studentId = this.currentUser.id;\n    }\n    \n    //console.log(\"Init page: \" + page);\n  }\n\n  fetchCourses(page) {\n    this.courseService.getCourses(page, this.numberPerPage)\n      .subscribe((data: {}) => {\n        this.courses = data;\n        this.page = page;\n        this.currentPage = this.courses.pagination.current;\n        this.maxPages = this.courses.pagination.maxPages;\n        this.maxPagesArray = new Array(this.maxPages);\n        this.pages = Object.values(this.courses.pagination);\n        //console.log(this.pages);\n        console.log('Data requested...');\n        //console.log(this.courses.res);\n        this.courses.res.forEach((course: Course, index, arr) => {\n          let start_date = new Date(arr[index].start_date.toString());\n          let end_date = new Date(arr[index].end_date.toString());\n\n          arr[index].start_date = start_date.toLocaleDateString();\n          arr[index].end_date = end_date.toLocaleDateString();\n          this.coursesUnavailable[index] = false;\n          if(course.seats < 1){\n            this.coursesUnavailable[index] = true;\n          }\n      });\n        //console.log('Data requested...');\n        //console.log(this.courses);\n        this.router.navigate(['/course-library', { page: page}]);\n      });\n  }\n\n  fetchPageCourses(pageNo) {\n    console.log(\"pageNo: \" + pageNo);\n    if(pageNo < 0) {\n      return;\n    }\n    this.courseService.getCourses(pageNo, this.numberPerPage)\n      .subscribe((data: any = {}) => {\n        this.courses = data;\n        this.page = pageNo;\n        this.currentPage = this.courses.pagination.current;\n        this.maxPages = this.courses.pagination.maxPages;\n        this.courses.res.forEach((course: Course, index, arr) => {\n            let start_date = new Date(arr[index].start_date.toString());\n            let end_date = new Date(arr[index].end_date.toString());\n\n            arr[index].start_date = start_date.toLocaleDateString();\n            arr[index].end_date = end_date.toLocaleDateString();\n            this.coursesUnavailable[index] = false;\n            if(course.seats < 1){\n              this.coursesUnavailable[index] = true;\n            }\n        });\n        console.log('Data requested...' + pageNo);\n        //console.log(this.courses);\n        //console.log(\"Current page: \" + this.courses.pagination.current);\n        this.router.navigate(['/course-library', { page: this.courses.pagination.current}]);\n      });\n  }\n\n  studentEnroll(studentId, courseId, course_name, enrollment_status) {\n    // Add student to students_courses table with pending enrollment\n    this.courseService.getCourseById(courseId).subscribe((course: Course) => {\n      if(course.seats > 0){\n        this.studentCourseService.enrollStudentToCourse(studentId, courseId, enrollment_status).subscribe(() => {\n          alert(\"Enrolled for course: \" + course_name);\n        });\n        console.log(\"StudentId: \" + studentId);\n        console.log(`Enrollment pending for courseId: ${courseId}`);\n      }\n    })\n  } \n\n\n  searchCourse(searchTerm) {\n    if(searchTerm == \"\"){\n      this.foundCoursesN = 0;\n      return;\n    }\n\n    //console.log(\"socketid: \" + this.socket.id);\n    this.socket.emit('search', searchTerm);\n\n    this.socket.on('search-data', (course) => {\n        this.searchedCourses.length = 0;\n        this.num++;\n        //console.log(course);\n        course.forEach((val, i, arr) => {\n            this.searchedCourses.push(arr[i]);\n        });\n        this.searchCourseFnAll(course);\n      });\n    }\n\n  searchedCourseFn(course) {\n    this.foundCoursesN = 1;\n\n    let start_date = new Date(course.start_date.toString());\n    let end_date = new Date(course.end_date.toString());\n\n    course.start_date = start_date.toLocaleDateString();\n    course.end_date = end_date.toLocaleDateString();\n\n    this.searchedCourseObject = course;\n    //console.log(\"searched course: \" + JSON.stringify(this.searchedCourseObject));\n  }\n\n  searchCourseFnAll(courses){\n    this.foundCoursesN = 2;\n\n    courses.forEach((course) => {\n      let start_date = new Date(course.start_date.toString());\n      let end_date = new Date(course.end_date.toString());\n\n      course.start_date = start_date.toLocaleDateString();\n      course.end_date = end_date.toLocaleDateString();\n    })\n\n    this.searchedCoursesArray = courses;\n    //console.log(\"searched courses: \" + JSON.stringify(this.searchedCoursesArray));\n\n  }\n}\n","<div class=\"center-form\">\n    <h2>Courses</h2>\n\n        <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <h2>Search for course</h2>\n            <input #search type=\"search\" name=\"search\" id=\"search\" placeholder=\"search course here....\" (keyup)=\"searchCourse(search.value)\" matInput [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let searchedCourse of searchedCourses\" [value]=\"searchedCourse.name\" (click)=\"searchedCourseFn(searchedCourse)\">\n                    {{searchedCourse.name}}\n                </mat-option>\n            </mat-autocomplete>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"foundCoursesN = 0\">Show all</button>\n        </div>           \n        </div>\n</div>\n\n<div [ngSwitch]=\"foundCoursesN\">\n    <div *ngSwitchCase=\"1\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"searchedCourseObject as course\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser\"><button type=\"submit\" (click)=\"studentEnroll(studentId, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngSwitchCase=\"2\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let course of searchedCoursesArray\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser\"><button type=\"submit\" (click)=\"studentEnroll(studentId, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngSwitchDefault>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let course of courses.res; let index = index\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser && !coursesUnavailable[index]; else elseBlock\"><button type=\"submit\" (click)=\"studentEnroll(currentUser.id, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                    <ng-template #elseBlock>\n                        <td *ngIf=\"currentUser\"><button class=\"btn btn-danger\" style=\"cursor: not-allowed\" disabled>Full</button></td>\n                    </ng-template>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<div class=\"center-form\">\n    <nav aria-label=\"Page navigation course-library\">\n        <ul class=\"pagination\">\n\n            <ng-container *ngIf=\"page == 0; else elseBlock\">\n                <li class=\"page-item disabled\"><button class=\"page-link\" (click)=\"fetchPageCourses(page-1)\">Previous</button></li>\n            </ng-container>\n            <ng-template #elseBlock>\n                <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page-1)\">Previous</button></li>\n            </ng-template>\n\n            <ng-container *ngFor=\"let maxPages of maxPagesArray; let i = index\">\n            <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(i)\">{{i}}</button></li>\n            </ng-container>\n\n            <ng-container *ngIf=\"page == maxPages - 1; else elseBlock2\">\n                <li class=\"page-item disabled\"><button class=\"page-link\" (click)=\"fetchPageCourses(page+1)\">Next</button></li>\n            </ng-container>\n            <ng-template #elseBlock2>\n                <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page+1)\">Next</button></li>\n            </ng-template>\n            \n        </ul>\n    </nav>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HeaderComponent } from '@app/shared/header/header.component';\n//import { AuthService } from '@app/core/services/auth.service';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\nimport { StudentService } from '@app/core/services/student.service';\nimport { isEmpty } from 'lodash';\n\nimport { User } from '@app/core/models/user';\nimport decode from 'jwt-decode';\nimport { timeout } from 'rxjs/operators';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  globalAnnouncements = [];\n  currentUser;\n  userPayload: User;\n  timeoutVar: any;\n\n  constructor(private cookieService: CookieService, private authFB: AuthService, private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private studentService: StudentService, private FB: FacebookService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  getCookie(key: string) {\n    return this.cookieService.get(key);\n  }\n\n  ngOnInit() {\n    // fetch announcements\n    this.globalAnnouncementService.fetchGlobalAnnouncements().subscribe((globalAnnouncementsData: any[]) => {\n      this.globalAnnouncements = globalAnnouncementsData;\n    })\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.timeoutVar);\n    //localStorage.clear();\n  }\n\n  deleteAnnouncement(id) {\n    let r = confirm(\"Delete announcement: Are you sure?\");\n    if (r) {\n      this.globalAnnouncementService.deleteGlobalAnnouncement(id).subscribe(() => {\n        alert(\"Deleted announcement\");\n      })\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-4 center-form\">\n            <h2>Welcome to LMS FIU</h2>\n            <img src=\"../../../../../assets/images/FIU_Panther_Logo.png\" alt=\"FIU_Panther_Logo\" width=\"400\"\n                height=\"400\">\n            <a routerLink=\"/course-library\" class=\"btn btn-primary\">Browse Courses</a>\n        </div>\n    </div>\n    <div class=\"row justify-content-center\">\n        <div class=\"col-4 center-form\">\n            <ng-container *ngIf=\"currentUser\">\n                <a *ngIf=\"currentUser.role == 'admin'\" routerLink=\"/create-announcement\" class=\"btn btn-primary\"\n                    style=\"margin-top:30px\">Create Announcement</a>\n            </ng-container>\n            <h2>Announcements:</h2>\n            <div *ngFor=\"let announcement of globalAnnouncements\" class=\"announcement\">\n                <p>{{announcement.user}} | {{announcement.created >= announcement.changed ? (announcement.created | date:'short') : (announcement.changed | date:'short')}}</p>\n                <div [innerHTML]=\"announcement.content\" class=\"custom-font\"></div>\n                <div *ngIf=\"currentUser.role == 'admin'\">\n                    <a routerLink=\"/edit-announcement/{{announcement.id}}\" class=\"btn btn-success\">Edit</a>\n                    <button type=\"button\" (click)=\"deleteAnnouncement(announcement.id)\"\n                        class=\"btn btn-danger\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  profileData;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((data) => {\n      this.profileData = data;\n      console.log(this.profileData);\n      console.log(\"The profile data is: \" + JSON.stringify(data));\n    })\n\n    /*this.authService.getTest().subscribe((data) => {\n      this.testData = data;\n      console.log(JSON.stringify(this.testData));\n    })*/\n  }\n\n}\n","<p>Your Profile</p>\n<ul *ngIf=\"profileData as user\" style=\"list-style-type: none\">\n        <li>{{user.role}}</li>\n        <li>{{user.email}}</li>\n        <li>{{user.f_name}}</li>\n        <li>{{user.l_name}}</li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  today: number = Date.now();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer>\n    <hr>\n    <div class=\"center-footer\">\n        <span style=\"margin-right: 5px\">&copy; {{ today | date: 'yyyy' }}</span>\n        <a class=\"logo-font\" routerLink=\"/\">LMSFIU</a>\n        <span class=\"attribution\" style=\"margin-left: 5px\">\n            An interactive online course system from FIU.\n        </span>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\nimport { User } from '@app/core/models/user';\n\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  currentUser: User;\n  currentUserAsync;\n  FB_user: any;\n  isAdmin: Promise<boolean>|null = null;\n  tokenPayload: Promise<void | User>;\n  timeoutVar: any;\n\n  constructor(private router: Router, private authenticationService: AuthenticationService, private FB: FacebookService, private authFB: AuthService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit() {\n    console.log(\"header OnInit\");\n    console.log(this.currentUser);\n    //async\n    this.currentUserAsync = this.authenticationService.currentUser;\n    this.authenticationService.currentUser.subscribe((user) => {\n        this.isAdmin = Promise.resolve(true);\n    })\n\n    //this.waitForCurrentUser();\n    console.log(this.currentUser);\n  }\n\n  waitForCurrentUser() {\n    if (this.currentUser) {\n      this.authenticationService.currentUser.subscribe(x => {\n        console.log(\"header on changes subscribed\");\n        this.currentUser = x;\n        console.log(this.currentUser);\n      });\n      console.log(\"header on changes\");\n      console.log(this.currentUser);\n      if (this.currentUser.role == \"admin\") {\n        this.isAdmin = Promise.resolve(true);\n      }\n      this.currentUserAsync = this.authenticationService.currentUser;\n      console.log(\"currentUserAsync set\");\n    }\n    else {\n      this.timeoutVar = setTimeout(() => {\n        this.waitForCurrentUser();\n      }, 1000)\n    }\n  }\n  \n  logout() {\n    this.authFB.signOut();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark lms-bg\">\n  <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../../../assets/android-chrome-512x512.png\" alt=\"FIU Logo\" width=\"32\"\n      height=\"32\"></a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\n    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/course-library\" routerLinkActive=\"active\">Course-Library</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/courses\" routerLinkActive=\"active\">Student Dashboard</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"isAdmin | async\">\n        <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n      </li>\n    </ul>\n  </div>\n  <ul class=\"navbar-nav\" *ngIf=\"currentUserAsync | async as currentUser\">\n    <li class=\"nav-item\">\n      <span class=\"nav-welcome\">Hello, {{currentUser.f_name}} {{currentUser.l_name}}!</span>\n    </li>\n    <li class=\"nav-item\">\n      <span class=\"nav-welcome\">Role: {{currentUser.role}}</span>\n    </li>\n  </ul>\n  <!---\n    <li class=\"nav-item\" *ngIf=\"FB_user;\">\n      <a class=\"nav-link\" (click)=\"logout()\" style=\"cursor:pointer\"><i class=\"fas fa-sign-out-alt\"></i> Logout</a>\n    </li>\n    \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/profile\" routerLinkActive=\"active\"><i class=\"fas fa-user\"></i>Profile</a>\n      </li>\n  \n      \n  \n  <ng-template #elseBlock>\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\"><i class=\"fas fa-sign-in-alt\"></i> Login</a>\n      </li>\n      \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Sign Up</a>\n      </li>\n      \n    </ul>\n    \n  </ng-template>\n  -->\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:3000',\n  frontendURL: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}