{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/helpers/auth.guard.ts","webpack:///src/app/core/helpers/error.interceptor.ts","webpack:///src/app/core/helpers/jwt.interceptor.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/core/services/authentication.service.ts","webpack:///src/app/core/services/course.service.ts","webpack:///src/app/core/services/global-announcement.service.ts","webpack:///src/app/core/services/student-course.service.ts","webpack:///src/app/core/services/student.service.ts","webpack:///src/app/modules/home/home-routing.module.ts","webpack:///src/app/modules/home/home.module.ts","webpack:///src/app/modules/home/pages/announcementsManager/create-announcement/create-announcement.component.ts","webpack:///src/app/modules/home/pages/announcementsManager/create-announcement/create-announcement.component.html","webpack:///src/app/modules/home/pages/announcementsManager/edit-announcement/edit-announcement.component.ts","webpack:///src/app/modules/home/pages/announcementsManager/edit-announcement/edit-announcement.component.html","webpack:///src/app/modules/home/pages/course-browser/course-browser.component.ts","webpack:///src/app/modules/home/pages/course-browser/course-browser.component.html","webpack:///src/app/modules/home/pages/home/home.component.ts","webpack:///src/app/modules/home/pages/home/home.component.html","webpack:///src/app/modules/home/pages/login/login.component.ts","webpack:///src/app/modules/home/pages/login/login.component.html","webpack:///src/app/modules/home/pages/profile/profile.component.ts","webpack:///src/app/modules/home/pages/profile/profile.component.html","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","HomeModule","canActivate","AdminModule","CourseModule","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","router","authenticationService","title","currentUser","subscribe","x","logout","navigate","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","route","state","currentUserValue","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","location","reload","error","message","statusText","JwtInterceptor","token","clone","setHeaders","Authorization","AuthService","http","get","apiURL","frontendURL","AuthenticationService","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","email","password","post","user","setItem","stringify","removeItem","expectedRole","data","role","console","log","value","CourseService","pageNo","npp","params","set","headers","name","description","seats","start_date","end_date","course","put","seatObject","GlobalAnnouncementService","content","created","changed","user_id","globalAnnouncement","StudentCourseService","courseId","studentId","student_email","course_id","enrollment_status","student_course","student_id","StudentService","student","studentEmail","component","HomeRoutingModule","forChild","config","PROVIDER_ID","provider","provideConfig","useFactory","CreateAnnouncementComponent","globalAnnouncementService","Editor","editorData","userPayload","f_name","editor","setData","getData","isCleared","userName","l_name","today","Date","createGlobalAnnouncement","onChange","createAnnouncement","EditAnnouncementComponent","fetchGlobalAnnouncementById","updateGlobalAnnouncement","globalAnnouncementData","globalAnnouncementDetails","CourseBrowserComponent","courseService","studentCourseService","authService","courses","coursesUnavailable","pages","searchedCourses","displayedColumns","page","foundCourse","foundCourses","foundCoursesN","duplicateCourse","num","numberPerPage","snapshot","paramMap","fetchCourses","socket","connect","getCourses","currentPage","pagination","current","maxPages","maxPagesArray","Array","Object","values","res","forEach","index","arr","toString","toLocaleDateString","course_name","getCourseById","enrollStudentToCourse","alert","searchTerm","emit","on","length","val","i","push","searchCourseFnAll","searchedCourseObject","searchedCoursesArray","searchCourse","HomeComponent","cookieService","authFB","studentService","FB","globalAnnouncements","FB_User","loggedIn","fbInitiated","FB_settings","appId","version","key","waitingForFBLogin","clearTimeout","timeoutVar","clear","r","confirm","deleteGlobalAnnouncement","init","FBLogin","setTimeout","signIn","authState","firstName","lastName","isNewStudent","getStudentByEmail","inStudentDB","notInStudentDB","FBUser","userData","loginWithFB","updateStudent","FB_email","addStudent","LoginComponent","formBuilder","loading","submitted","loginForm","group","required","FB_fname","FB_lname","FB_id","FB_role","invalid","login","controls","onSubmit","ProfileComponent","getProfile","profileData","FooterComponent","now","HeaderComponent","isAdmin","currentUserAsync","FB_user","signOut","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { AuthGuard } from './core/helpers/auth.guard';\n\n\nconst routes: Routes = [\n  { path: 'home', loadChildren: () => import('./modules/home/home.module').then(m => m.HomeModule), canActivate: [AuthGuard] },\n  { path: 'admin', loadChildren: () => import('./modules/admin/admin.module').then(m => m.AdminModule)},\n  { path: 'courses', loadChildren: () => import('./modules/course/course.module').then(m => m.CourseModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './core/services/authentication.service';\nimport { User } from './core/models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { \n  currentUser: User;\n  title = 'LMS-FIU'; \n\n  constructor(private router: Router, private authenticationService: AuthenticationService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<!--\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n-->\n\n<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { JwtInterceptor } from './core/helpers/jwt.interceptor';\nimport { ErrorInterceptor } from './core/helpers/error.interceptor';\nimport { HomeModule } from './modules/home/home.module';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\n\n\nimport { fromEventPattern } from 'rxjs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { Local } from 'protractor/built/driverProviders';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HomeModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    BrowserAnimationsModule\n  ],\n  providers: [ \n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  FBLogin() {\n    return this.http.get(`${environment.apiURL}/auth/login`);\n  }\n\n  FBLogin2(){\n    return this.http.get(`${environment.frontendURL}/userdata`);\n  }\n\n  FBLogOut(){\n    return this.http.get(`${environment.apiURL}/auth/logout`);\n  }\n\n  FBFacebook(){\n    \n    return this.http.get(`${environment.apiURL}/auth/facebook`);\n  }\n\n  getProfile() {\n    //let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(`${environment.apiURL}/profile`);\n  }\n\n  getTest() {\n    return this.http.get(`${environment.apiURL}/test`);\n  }\n\n  localLogin() {\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport decode from 'jwt-decode';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/core/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService implements CanActivate {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient, public router: Router) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('FB_user')));\n    this.currentUser = this.currentUserSubject.asObservable();\n   }\n\n   public get currentUserValue(): User {\n     return this.currentUserSubject.value;\n   }\n\n   login(email: string, password: string) {\n     return this.http.post<any>(`${environment.apiURL}/auth/login`, { email, password })\n            .pipe(map(user => {\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\n              localStorage.setItem('currentUser', JSON.stringify(user));\n              this.currentUserSubject.next(user);\n              return user;\n            }));\n   }\n\n   loginWithFB(user){\n     this.currentUserSubject.next(user);\n   }\n\n   logout() {\n     // remove user from local storage to log user out\n     return this.http.get(`${environment.apiURL}/auth/logout`).pipe(map(user => {\n      localStorage.removeItem('currentUser');\n      this.currentUserSubject.next(null);\n     }));\n     localStorage.removeItem('currentUser');\n     this.currentUserSubject.next(null);\n   }\n\n   logoutFromFB(){\n     localStorage.removeItem('FB_user');\n     this.currentUserSubject.next(null);\n   }\n\n   canActivate(route: ActivatedRouteSnapshot): boolean {\n     if(!this.currentUserValue){\n       return;\n     }\n\n    const expectedRole = route.data.expectedRole;\n\n    if(!expectedRole){\n      return true;\n    }\n\n    //const tokenPayload: User = decode(this.currentUserValue.token);\n\n    /*if(tokenPayload.role === \"admin\"){\n      return true;\n    }*/\n\n    if(this.currentUserValue.role === \"admin\"){\n      return true;\n    }\n\n    if(this.currentUserValue.role !== expectedRole){\n      console.log(\"Not \" + expectedRole);\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    /*if (tokenPayload.role !== expectedRole) {\n      console.log(\"Not \" + expectedRole);\n      this.router.navigate(['/']);\n      return false;\n    }*/\n    \n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  constructor(private http: HttpClient) { }\n\n  getCourses(pageNo, npp) {\n    let params = new HttpParams().set(\"page\", pageNo).set(\"npp\", npp);\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(`${environment.apiURL}/courses`, {headers: headers, params: params});\n  }\n\n  getCourseById(id) {\n    return this.http.get(`${environment.apiURL}/courses/${id}`);\n  }\n\n  addCourse(name, description, seats, start_date, end_date) {\n    const course = {\n      name: name,\n      description: description,\n      seats: seats,\n      start_date: start_date,\n      end_date: end_date\n    };\n    return this.http.post(`${environment.apiURL}/courses`, course);\n  }\n\n  updateCourse(id, name, description, seats, start_date, end_date) {\n    const course = {\n      name: name,\n      description: description,\n      seats: seats,\n      start_date: start_date,\n      end_date: end_date\n    };\n    return this.http.put(`${environment.apiURL}/courses/${id}`, course); //post\n  }\n\n  updateCourseSeats(id, seats){\n    const seatObject = {\n      seats: seats\n    };\n    return this.http.put(`${environment.apiURL}/courses/s/${id}`, seatObject);\n  }\n\n  deleteCourse(id) {\n    return this.http.delete(`${environment.apiURL}/courses/${id}`); //get\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalAnnouncementService {\n\n  constructor(private http: HttpClient) { }\n\n  createGlobalAnnouncement(user, content, created, changed, user_id){\n    let globalAnnouncement = {\n      user: user,\n      content: content,\n      created: created,\n      changed: changed,\n      user_id: user_id\n    };\n    return this.http.post(`${environment.apiURL}/globalAnnouncements`, globalAnnouncement);\n  }\n\n  fetchGlobalAnnouncements(){\n    return this.http.get(`${environment.apiURL}/globalAnnouncements`);\n  }\n\n  fetchGlobalAnnouncementById(id){\n    return this.http.get(`${environment.apiURL}/globalAnnouncements/${id}`);\n  }\n\n  updateGlobalAnnouncement(id, content, changed){\n    let globalAnnouncement = {\n      content: content,\n      changed: changed\n    };\n    return this.http.put(`${environment.apiURL}/globalAnnouncements/${id}`, globalAnnouncement);\n  }\n\n  deleteGlobalAnnouncement(id){\n    return this.http.delete(`${environment.apiURL}/globalAnnouncements/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentCourseService {\n\n  constructor(private http: HttpClient) { }\n  \n  getStudentsByCourseId(id) {\n    return this.http.get(`${environment.apiURL}/student-courses/c/${id}`);\n  }\n\n  getCoursesByStudentId(id) {\n    return this.http.get(`${environment.apiURL}/student-courses/s/${id}`);\n  }\n\n  getAvgStudentPoints(courseId, studentId){\n    return this.http.get(`${environment.apiURL}/student-courses/p/${courseId}/${studentId}`);\n  }\n\n  enrollStudentToCourse(student_email, course_id, enrollment_status) {\n    const student_course = {\n      student_email: student_email,\n      course_id: course_id,\n      enrollment_status: enrollment_status\n    }\n    return this.http.post(`${environment.apiURL}/student-courses`, student_course);\n  }\n\n  acceptStudentEnrollment(student_email, course_id, enrollment_status) {\n    const student_course = {\n      student_email: student_email,\n      course_id: course_id,\n      enrollment_status: enrollment_status\n    };\n    console.log(student_course);\n    return this.http.put(`${environment.apiURL}/student-courses/${student_email}`, student_course);\n  }\n\n  declineStudentEnrollment(student_id, course_id) {\n    return this.http.delete(`${environment.apiURL}/student-courses/${student_id}/${course_id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(private http: HttpClient) { }\n\n  getStudents() {\n    return this.http.get(`${environment.apiURL}/students`);\n  }\n\n  addStudent(student) {\n    return this.http.post(`${environment.apiURL}/students`, student);\n  }\n\n  updateStudent(email, student) {\n    return this.http.put(`${environment.apiURL}/students/`, student);\n  }\n\n  getStudentByEmail(studentEmail){\n    console.log(\"Called getStudentByEmail\");\n    console.log(studentEmail);\n    return this.http.get(`${environment.apiURL}/students/${studentEmail}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { CourseBrowserComponent } from './pages/course-browser/course-browser.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { CreateAnnouncementComponent } from './pages/announcementsManager/create-announcement/create-announcement.component';\n\nimport { AuthenticationService as AuthGuard } from '@app/core/services/authentication.service';\nimport { EditAnnouncementComponent } from './pages/announcementsManager/edit-announcement/edit-announcement.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'course-library', component: CourseBrowserComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'create-announcement', component: CreateAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'} },\n  { path: 'edit-announcement/:id', component: EditAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'} }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { CourseBrowserComponent } from './pages/course-browser/course-browser.component';\n\n\nimport { CourseService } from '../../core/services/course.service';\nimport { LoginComponent } from './pages/login/login.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { CreateAnnouncementComponent } from './pages/announcementsManager/create-announcement/create-announcement.component';\nimport { EditAnnouncementComponent } from './pages/announcementsManager/edit-announcement/edit-announcement.component';\n\nimport { FacebookModule } from '@greg-md/ng-facebook';\nimport { SocialLoginModule, AuthServiceConfig, FacebookLoginProvider } from 'angularx-social-login';\n\nconst config = new AuthServiceConfig([\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider('903187940138780')\n  }\n\n]);\n\nexport function provideConfig(){\n  return config;\n}\n\n@NgModule({\n  declarations: [HomeComponent, CourseBrowserComponent, LoginComponent, ProfileComponent, CreateAnnouncementComponent, EditAnnouncementComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    SocialLoginModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatOptionModule,\n    MatAutocompleteModule,\n    CKEditorModule,\n    FacebookModule\n  ],\n  providers: [\n    CourseService,\n    {\n    provide: AuthServiceConfig, \n    useFactory: provideConfig \n    }]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { Router } from '@angular/router';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-create-announcement',\n  templateUrl: './create-announcement.component.html',\n  styleUrls: ['./create-announcement.component.scss']\n})\nexport class CreateAnnouncementComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData = \"\";\n  currentUser;\n  userPayload: User;\n  isCleared;\n\n  constructor(private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private router: Router) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit(): void {\n    this.userPayload = decode(this.currentUser.token);\n    console.log(this.userPayload.f_name);\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  createAnnouncement(){\n    let userName = this.userPayload.f_name + \" \" + this.userPayload.l_name;\n    let today = new Date();\n    this.globalAnnouncementService.createGlobalAnnouncement(userName, this.editorData, today, today, this.userPayload.id).subscribe(() => {\n      //alert(\"Created announcement\");\n      this.router.navigate(['/']);\n    })\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px\">\n    <!--<ng-container *ngIf=\"courseContent | async as content\">-->\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n        <span>\n            <button (click)=\"createAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n    <!--</ng-container>-->\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-edit-announcement',\n  templateUrl: './edit-announcement.component.html',\n  styleUrls: ['./edit-announcement.component.scss']\n})\nexport class EditAnnouncementComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData;\n  currentUser;\n  userPayload: User;\n  isCleared;\n  id;\n  public globalAnnouncement;\n  globalAnnouncementDetails;\n\n  constructor(private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private router: Router, private route: ActivatedRoute) { \n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit(): void {\n    this.userPayload = decode(this.currentUser.token);\n    this.route.params.subscribe((params) => {\n      this.id = params.id;\n    })\n    this.globalAnnouncement = this.globalAnnouncementService.fetchGlobalAnnouncementById(this.id);\n    //this.fetchAnnouncementById(this.id);\n    console.log(this.userPayload.f_name);\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  editAnnouncement(){\n    let today = new Date();\n    this.globalAnnouncementService.updateGlobalAnnouncement(this.id, this.editorData, today,).subscribe(() => {\n      //alert(\"Created announcement\");\n      this.router.navigate(['/']);\n    })\n  }\n\n  fetchAnnouncementById(id){\n    this.globalAnnouncementService.fetchGlobalAnnouncementById(id).subscribe((globalAnnouncementData) => {\n      this.globalAnnouncementDetails = globalAnnouncementData;\n      console.log(globalAnnouncementData);\n    })\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px\">\n    <ng-container *ngIf=\"globalAnnouncement | async as announcement\">\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData ? editorData : announcement.content\" (change)=\"onChange($event)\"></ckeditor>\n        <span>\n            <button (click)=\"editAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData ? editorData : announcement.content\" style=\"margin-top: 30px;\" class=\"custom-font\"></div>\n    </ng-container>\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpParams } from '@angular/common/http';\n\nimport { Course } from '../../../../core/models/course.model';\nimport { User } from '@app/core/models/user';\nimport { CourseService } from '../../../../core/services/course.service';\nimport { StudentCourseService } from '@app/core/services/student-course.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { environment } from 'src/environments/environment';\n\nimport io from \"socket.io-client\";\nimport decode from 'jwt-decode';\nimport { throwToolbarMixedModesError } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-course-browser',\n  templateUrl: './course-browser.component.html',\n  styleUrls: ['./course-browser.component.scss']\n})\nexport class CourseBrowserComponent implements OnInit {\n\n  //courses: Course[];\n  courses: any = {};\n  coursesUnavailable: Boolean[] = [];\n  pages: any = [];\n  searchedCourses: any = [];\n  displayedColumns = ['id', 'name', 'description', 'seats', 'start_date', 'end_date', 'Enrollment'];\n  page = 0;\n  currentPage;\n  maxPages;\n  maxPagesArray;\n  socket;\n  searchValue;\n  searchedCourse;\n  searchedCourseObject;\n  searchedCoursesArray;\n  foundCourse = false;\n  foundCourses = false;\n  foundCoursesN: number = 0;\n  duplicateCourse = false;\n  num = 0;\n  numberPerPage = 5;\n  currentUser: User;\n  tokenUser: User;\n  studentId;\n  studentEmail\n\n  constructor(private courseService: CourseService, private studentCourseService: StudentCourseService, private authService: AuthenticationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    let page = this.route.snapshot.paramMap.get('page') || this.page;\n    this.fetchCourses(page);\n    this.socket = io.connect(environment.apiURL);\n    this.studentEmail = JSON.parse(localStorage.getItem(\"FB_user\")).email;\n    /*\n    if(this.authService.currentUserValue){\n      this.currentUser = this.authService.currentUserValue;\n      this.tokenUser = decode(this.currentUser.token);\n      if(this.currentUser)\n        this.studentId = this.tokenUser.id;\n    }\n    */\n    //console.log(\"Init page: \" + page);\n  }\n\n  fetchCourses(page) {\n    this.courseService.getCourses(page, this.numberPerPage)\n      .subscribe((data: {}) => {\n        this.courses = data;\n        this.page = page;\n        this.currentPage = this.courses.pagination.current;\n        this.maxPages = this.courses.pagination.maxPages;\n        this.maxPagesArray = new Array(this.maxPages);\n        this.pages = Object.values(this.courses.pagination);\n        //console.log(this.pages);\n        console.log('Data requested...');\n        //console.log(this.courses.res);\n        this.courses.res.forEach((course: Course, index, arr) => {\n          let start_date = new Date(arr[index].start_date.toString());\n          let end_date = new Date(arr[index].end_date.toString());\n\n          arr[index].start_date = start_date.toLocaleDateString();\n          arr[index].end_date = end_date.toLocaleDateString();\n          this.coursesUnavailable[index] = false;\n          if(course.seats < 1){\n            this.coursesUnavailable[index] = true;\n          }\n      });\n        //console.log('Data requested...');\n        //console.log(this.courses);\n        this.router.navigate(['/course-library', { page: page}]);\n      });\n  }\n\n  fetchPageCourses(pageNo) {\n    console.log(\"pageNo: \" + pageNo);\n    if(pageNo < 0) {\n      return;\n    }\n    this.courseService.getCourses(pageNo, this.numberPerPage)\n      .subscribe((data: any = {}) => {\n        this.courses = data;\n        this.page = pageNo;\n        this.currentPage = this.courses.pagination.current;\n        this.maxPages = this.courses.pagination.maxPages;\n        this.courses.res.forEach((course: Course, index, arr) => {\n            let start_date = new Date(arr[index].start_date.toString());\n            let end_date = new Date(arr[index].end_date.toString());\n\n            arr[index].start_date = start_date.toLocaleDateString();\n            arr[index].end_date = end_date.toLocaleDateString();\n            this.coursesUnavailable[index] = false;\n            if(course.seats < 1){\n              this.coursesUnavailable[index] = true;\n            }\n        });\n        console.log('Data requested...' + pageNo);\n        //console.log(this.courses);\n        //console.log(\"Current page: \" + this.courses.pagination.current);\n        this.router.navigate(['/course-library', { page: this.courses.pagination.current}]);\n      });\n  }\n\n  studentEnroll(studentEmail, courseId, course_name, enrollment_status) {\n    // Add student to students_courses table with pending enrollment\n    this.courseService.getCourseById(courseId).subscribe((course: Course) => {\n      if(course.seats > 0){\n        this.studentCourseService.enrollStudentToCourse(studentEmail, courseId, enrollment_status).subscribe(() => {\n          alert(\"Enrolled for course: \" + course_name);\n        });\n        console.log(\"StudentEmail: \" + studentEmail);\n        console.log(`Enrollment pending for courseId: ${courseId}`);\n      }\n    })\n  } \n\n\n  searchCourse(searchTerm) {\n    if(searchTerm == \"\"){\n      this.foundCoursesN = 0;\n      return;\n    }\n\n    //console.log(\"socketid: \" + this.socket.id);\n    this.socket.emit('search', searchTerm);\n\n    this.socket.on('search-data', (course) => {\n        this.searchedCourses.length = 0;\n        this.num++;\n        //console.log(course);\n        course.forEach((val, i, arr) => {\n            this.searchedCourses.push(arr[i]);\n        });\n        this.searchCourseFnAll(course);\n      });\n    }\n\n  searchedCourseFn(course) {\n    this.foundCoursesN = 1;\n\n    let start_date = new Date(course.start_date.toString());\n    let end_date = new Date(course.end_date.toString());\n\n    course.start_date = start_date.toLocaleDateString();\n    course.end_date = end_date.toLocaleDateString();\n\n    this.searchedCourseObject = course;\n    //console.log(\"searched course: \" + JSON.stringify(this.searchedCourseObject));\n  }\n\n  searchCourseFnAll(courses){\n    this.foundCoursesN = 2;\n\n    courses.forEach((course) => {\n      let start_date = new Date(course.start_date.toString());\n      let end_date = new Date(course.end_date.toString());\n\n      course.start_date = start_date.toLocaleDateString();\n      course.end_date = end_date.toLocaleDateString();\n    })\n\n    this.searchedCoursesArray = courses;\n    //console.log(\"searched courses: \" + JSON.stringify(this.searchedCoursesArray));\n\n  }\n}\n","<div class=\"center-form\">\n    <h2>Courses</h2>\n\n        <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <h2>Search for course</h2>\n            <input #search type=\"search\" name=\"search\" id=\"search\" placeholder=\"search course here....\" (keyup)=\"searchCourse(search.value)\" matInput [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let searchedCourse of searchedCourses\" [value]=\"searchedCourse.name\" (click)=\"searchedCourseFn(searchedCourse)\">\n                    {{searchedCourse.name}}\n                </mat-option>\n            </mat-autocomplete>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"foundCoursesN = 0\">Show all</button>\n        </div>           \n        </div>\n</div>\n\n<div [ngSwitch]=\"foundCoursesN\">\n    <div *ngSwitchCase=\"1\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"searchedCourseObject as course\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser\"><button type=\"submit\" (click)=\"studentEnroll(studentId, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngSwitchCase=\"2\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let course of searchedCoursesArray\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser\"><button type=\"submit\" (click)=\"studentEnroll(studentId, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngSwitchDefault>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let course of courses.res; let index = index\" class=\"trstyle\">\n                    <th scope=\"row\">{{ course.id }}</th>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\n                    <td>{{ course.seats }}</td>\n                    <td>{{ course.start_date }}</td>\n                    <td>{{ course.end_date }}</td>\n                    <td *ngIf=\"currentUser && !coursesUnavailable[index]; else elseBlock\"><button type=\"submit\" (click)=\"studentEnroll(studentId, course.id, course.name, 'pending')\" class=\"btn btn-success\">Enroll</button></td>\n                    <ng-template #elseBlock>\n                        <td *ngIf=\"currentUser\"><button class=\"btn btn-danger\" style=\"cursor: not-allowed\" disabled>Full</button></td>\n                    </ng-template>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<div class=\"center-form\">\n    <nav aria-label=\"Page navigation course-library\">\n        <ul class=\"pagination\">\n\n            <ng-container *ngIf=\"page == 0; else elseBlock\">\n                <li class=\"page-item disabled\"><button class=\"page-link\" (click)=\"fetchPageCourses(page-1)\">Previous</button></li>\n            </ng-container>\n            <ng-template #elseBlock>\n                <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page-1)\">Previous</button></li>\n            </ng-template>\n\n            <ng-container *ngFor=\"let maxPages of maxPagesArray; let i = index\">\n            <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(i)\">{{i}}</button></li>\n            </ng-container>\n\n            <ng-container *ngIf=\"page == maxPages - 1; else elseBlock2\">\n                <li class=\"page-item disabled\"><button class=\"page-link\" (click)=\"fetchPageCourses(page+1)\">Next</button></li>\n            </ng-container>\n            <ng-template #elseBlock2>\n                <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page+1)\">Next</button></li>\n            </ng-template>\n            \n        </ul>\n    </nav>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HeaderComponent } from '@app/shared/header/header.component';\n//import { AuthService } from '@app/core/services/auth.service';\nimport { GlobalAnnouncementService } from '@app/core/services/global-announcement.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\nimport { StudentService } from '@app/core/services/student.service';\nimport { isEmpty } from 'lodash';\n\nimport { User } from '@app/core/models/user';\nimport decode from 'jwt-decode';\nimport { timeout } from 'rxjs/operators';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  private userData;\n  globalAnnouncements = [];\n  currentUser;\n  userPayload: User;\n\n  FB_id;\n  FB_fname: string;\n  FB_lname: string;\n  FB_email: string;\n  FB_role: string;\n  FB_User = {\n    f_name: '',\n    l_name: '',\n    email: '',\n    role: '',\n    user_id: '',\n    id: 0\n  }\n  loggedIn = false;\n  fbInitiated = false;\n  FB_settings = {\n    appId: '903187940138780',\n    version: 'v6.0'\n  };\n  timeoutVar: any;\n\n  @ViewChild('header') private myHeader: HeaderComponent;\n\n  constructor(private cookieService: CookieService, private authFB: AuthService, private globalAnnouncementService: GlobalAnnouncementService, private authenticationService: AuthenticationService, private studentService: StudentService, private FB: FacebookService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  getCookie(key: string) {\n    return this.cookieService.get(key);\n  }\n\n  ngOnInit() {\n\n    console.log(this.currentUser);\n    /*\n    Promise.resolve(decode(this.currentUser.token)).then((user) => {\n      this.userPayload = user;\n    });\n\n    var userCookie = this.getCookie('user');\n    this.globalAnnouncementService.fetchGlobalAnnouncements().subscribe((globalAnnouncementsData: any[]) => {\n      this.globalAnnouncements = globalAnnouncementsData;\n    })\n    //console.log(\"The user cookie is: \" + this.getCookie('user'));\n\n    if (localStorage.getItem('user') == '')\n      localStorage.setItem('user', userCookie);\n    this.cookieService.delete('user');\n    */\n    if (!this.currentUser) {\n      this.waitingForFBLogin();\n    } else{\n      return;\n    }\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.timeoutVar);\n    localStorage.clear();\n  }\n\n  deleteAnnouncement(id) {\n    let r = confirm(\"Delete announcement: Are you sure?\");\n    if (r) {\n      this.globalAnnouncementService.deleteGlobalAnnouncement(id).subscribe(() => {\n        alert(\"Deleted announcement\");\n      })\n    }\n  }\n\n  waitingForFBLogin() {\n    if (!(this.fbInitiated && this.loggedIn)) {\n      // FB Initialization\n      if (this.fbInitiated) {\n        this.FB.init(this.FB_settings).subscribe(() => {\n          console.log(\"fb initiated\");\n          this.fbInitiated = true;\n        });\n      }\n\n      this.FBLogin();\n    }\n    else {\n      this.timeoutVar = setTimeout(() => {\n        this.waitingForFBLogin();\n      }, 1000)\n      clearTimeout(this.timeoutVar);\n      return;\n    }\n  }\n\n\n  FBLogin() {\n    console.log(\"FBlogin\");\n    this.authFB.signIn(FacebookLoginProvider.PROVIDER_ID).then(() => {\n      this.authFB.authState.subscribe((user) => {\n        this.FB_User.user_id = user.id;\n        this.FB_User.email = user.email;\n        this.FB_User.f_name = user.firstName;\n        this.FB_User.l_name = user.lastName;\n\n        this.loggedIn = (user != null);\n        if (this.loggedIn) {\n          console.log(\"login successful.\");\n          // Check if user is in DB\n          console.log(this.FB_User.email);\n          let isNewStudent: Promise<Boolean>|null = null;\n          this.studentService.getStudentByEmail(this.FB_User.email).subscribe((user: any) => {\n            // In DB\n            console.log(user);\n            this.FB_User.role = user.role;\n            this.FB_User.id = user.id;\n            console.log(this.FB_User);\n            this.inStudentDB(this.FB_User);\n          }, (error) => {\n            // Not in DB\n            this.FB_User.role = 'student';\n            this.notInStudentDB(this.FB_User);\n          });\n        }\n      });\n    });\n  }\n\n  inStudentDB(FBUser: any) {\n    const userData: JSON = <JSON><any>{\n      \"email\": FBUser.email,\n      \"f_name\": FBUser.f_name,\n      \"l_name\": FBUser.l_name,\n      \"user_id\": FBUser.user_id,\n      \"role\": FBUser.role\n    };\n\n    this.authenticationService.loginWithFB(userData);\n\n    console.log(\"Student found in DB, updating info\");\n    this.studentService.updateStudent(this.FB_email, userData).subscribe(() => {\n      console.log(\"updated student\");\n    });\n    localStorage.setItem(\"FB_user\", JSON.stringify(userData));\n    console.log(JSON.stringify(userData));\n  }\n\n  notInStudentDB(FBUser: any){\n    const userData: JSON = <JSON><any>{\n      \"email\": FBUser.email,\n      \"f_name\": FBUser.f_name,\n      \"l_name\": FBUser.l_name,\n      \"user_id\": FBUser.user_id,\n      \"role\": FBUser.role\n    };\n\n    this.authenticationService.loginWithFB(userData);\n\n    console.log(\"Student not found in DB, adding\");\n    this.studentService.addStudent(userData).subscribe(() => {\n      console.log(\"added to db\");\n    });\n    localStorage.setItem(\"FB_user\", JSON.stringify(userData));\n    console.log(JSON.stringify(userData));\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-4 center-form\">\n            <h2>Welcome to LMS FIU</h2>\n            <img src=\"../../../../../assets/images/FIU_Panther_Logo.png\" alt=\"FIU_Panther_Logo\" width=\"400\"\n                height=\"400\">\n            <a routerLink=\"/course-library\" class=\"btn btn-primary\">Browse Courses</a>\n        </div>\n    </div>\n    <div class=\"row justify-content-center\">\n        <div class=\"col-4 center-form\">\n            <ng-container *ngIf=\"userPayload\">\n                <a *ngIf=\"userPayload.role == 'admin'\" routerLink=\"/create-announcement\" class=\"btn btn-primary\"\n                    style=\"margin-top:30px\">Create Announcement</a>\n            </ng-container>\n            <h2>Announcements:</h2>\n            <div *ngFor=\"let announcement of globalAnnouncements\" class=\"announcement\">\n                <p>{{announcement.user}} | {{announcement.created >= announcement.changed ? (announcement.created | date:'short') : (announcement.changed | date:'short')}}</p>\n                <div [innerHTML]=\"announcement.content\" class=\"custom-font\"></div>\n                <div *ngIf=\"userPayload.role == 'admin'\">\n                    <a routerLink=\"/edit-announcement/{{announcement.id}}\" class=\"btn btn-success\">Edit</a>\n                    <button type=\"button\" (click)=\"deleteAnnouncement(announcement.id)\"\n                        class=\"btn btn-danger\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\nimport { StudentService } from '@app/core/services/student.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n\n  FB_id;\n  FB_fname: string;\n  FB_lname: string;\n  FB_email: string;\n  FB_role: string;\n  loggedIn = false;\n  fbInitiated = false;\n  FB_settings = {\n    appId: '903187940138780',\n    version: 'v6.0'\n  };\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService, private FB: FacebookService, private authFB: AuthService, private studentService: StudentService) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    //console.log(this.returnUrl);\n    if (!this.fbInitiated) {\n      this.FB.init(this.FB_settings).subscribe();\n      console.log(\"fb initiated\");\n      this.fbInitiated = true;\n    }\n\n    if (!this.loggedIn) {\n      this.FBLogin();\n      setTimeout(() => {\n        console.log(\"loggedIn: \" + this.loggedIn);\n        if (this.loggedIn) {\n          console.log(\"login successful.\");\n          var userData: JSON = <JSON><any>{\n            \"email\": this.FB_email,\n            \"f_name\": this.FB_fname,\n            \"l_name\": this.FB_lname,\n            \"user_id\": this.FB_id,\n            \"role\": this.FB_role\n          };\n          console.log(JSON.stringify(userData));\n          localStorage.setItem(\"FB_user\", JSON.stringify(userData));\n          console.log(\"user data stored. Info:\")\n          console.log(\"full: \" + JSON.parse(localStorage.getItem(\"FB_user\")));\n          console.log(\"name: \" + JSON.parse(localStorage.getItem(\"FB_user\")).f_name + \" \" + JSON.parse(localStorage.getItem(\"FB_user\")).l_name);\n          // Database functions\n          // Student is added (returns error if email already exists, code continues)\n          this.studentService.addStudent(userData).subscribe();\n          // Data is updated (in case email already existed but user data is different)\n          this.studentService.updateStudent(this.FB_email, userData).subscribe();\n        }\n      }, 1000);\n    }\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit(email, password) {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    //this.loading = true;\n    this.authenticationService.login(email, password)// this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          console.log(data);\n          //this.loading = false;\n          this.router.navigate([this.returnUrl]);\n        },\n        (error) => {\n          this.error = error;\n        }\n      );\n  }\n\n  FBLogin() {\n    console.log(\"FBlogin\");\n    this.authFB.signIn(FacebookLoginProvider.PROVIDER_ID);\n    this.authFB.authState.subscribe((user) => {\n      this.FB_id = user.id;\n      this.FB_email = user.email;\n      this.FB_fname = user.firstName;\n      this.FB_lname = user.lastName;\n      this.loggedIn = (user != null);\n    });\n    console.log(this.FB_id);\n    console.log(this.FB_email);\n    //localStorage.setItem(\"FB_email\", this.FB_email);\n    //localStorage.setItem(\"FB_id\", this.FB_id);\n    //localStorage.setItem(\"FB_name\", this.FB_name);\n  }\n}\n","<!--<button type=\"button\" (click)=\"signInWithFB()\" class=\"btn btn-primary\"><i class=\"fab fa-facebook\"></i>Login</button>\n<a href=\"https://localhost:3000/auth/login\" class=\"btn btn-primary\"><i class=\"fab fa-facebook\"></i>Login For Real</a>\n<a href=\"https://localhost:3000/auth/logout\" class=\"btn btn-primary\"><i class=\"fab fa-facebook\"></i>Logout</a>-->\n\n<div class=\"col-md-6 offset-md-3 mt-5\">\n    <div class=\"row justify-content-center\">\n        <div class=\"alert alert-info\">\n            <h4 style=\"color: red\">Admin</h4>\n            email: doe@mail.com<br />\n            Password: pass\n        </div>\n        <div class=\"alert alert-info\">\n            <h4 style=\"color: green\">Instructor</h4>\n            email: mail2@mail.edu<br />\n            Password: pass\n        </div>\n        <div class=\"alert alert-info\">\n            <h4 style=\"color: blue\">Student</h4>\n            email: mail3@mail.edu<br />\n            Password: pass\n        </div>\n    </div>\n    <div class=\"card\">\n        <h4 class=\"card-header\">Login to LMS-FIU</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(email.value, password.value)\">\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" #email />\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" #password />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  profileData;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((data) => {\n      this.profileData = data;\n      console.log(this.profileData);\n      console.log(\"The profile data is: \" + JSON.stringify(data));\n    })\n\n    /*this.authService.getTest().subscribe((data) => {\n      this.testData = data;\n      console.log(JSON.stringify(this.testData));\n    })*/\n  }\n\n}\n","<p>Your Profile</p>\n<ul *ngIf=\"profileData as user\" style=\"list-style-type: none\">\n        <li>{{user.role}}</li>\n        <li>{{user.email}}</li>\n        <li>{{user.f_name}}</li>\n        <li>{{user.l_name}}</li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  today: number = Date.now();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer>\n    <hr>\n    <div class=\"center-footer\">\n        <span style=\"margin-right: 5px\">&copy; {{ today | date: 'yyyy' }}</span>\n        <a class=\"logo-font\" routerLink=\"/\">LMSFIU</a>\n        <span class=\"attribution\" style=\"margin-left: 5px\">\n            An interactive online course system from FIU.\n        </span>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { FacebookService } from '@greg-md/ng-facebook';\nimport { FacebookLoginProvider, AuthService } from \"angularx-social-login\";\nimport { User } from '@app/core/models/user';\nimport decode from 'jwt-decode';\nimport { identifierModuleUrl } from '@angular/compiler';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  currentUser: Promise<User>;\n  currentUserAsync;\n  FB_user: any;\n  isAdmin: boolean;\n  tokenPayload: Promise<void | User>;\n\n  constructor(private router: Router, private authenticationService: AuthenticationService, private FB: FacebookService, private authFB: AuthService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = Promise.resolve(x));\n  }\n\n  ngOnInit() {\n    console.log(\"header OnInit\");\n    this.currentUser.then((user) => {\n      console.log(\"ngOnInit\");\n      console.log(user);\n      this.isAdmin = true;\n    })\n    this.currentUserAsync = this.authenticationService.currentUser.subscribe();\n  }\n\n  ngOnChanges(){\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = Promise.resolve(x));\n    this.currentUser.then((user) => {\n      console.log(\"ngOnChanges\");\n      console.log(user);\n      this.isAdmin = true;\n    })\n    this.currentUserAsync = this.authenticationService.currentUser.subscribe();\n  }\n\n  ngAfterViewInit() {\n    this.FB_user = JSON.parse(localStorage.getItem(\"FB_user\"));\n    if (this.FB_user) {\n      if (this.FB_user.role == \"admin\") {\n        this.isAdmin = true;\n      }\n    }\n  }\n\n\n  /*reInit(){\n    this.authenticationService.currentUser.subscribe(x => {\n      this.currentUser = x;\n      //this.tokenPayload = decode(this.currentUser.token);\n    });\n    //console.log(\"CurrentUser: \" + JSON.stringify(this.currentUser));\n    if(this.currentUser)\n      var myInterval = setTimeout(() => {\n        console.log(\"User Header0: \" + this.currentUser.token);\n      //console.log(\"User Header: \" + localStorage.getItem('currentUser'));\n      if(this.authenticationService.currentUserValue){\n        this.tokenPayload = decode(this.currentUser.token);\n      }\n      }, 1000);\n  }*/\n\n  logout() {\n    /*\n    this.authenticationService.logout().subscribe(() => {\n      console.log(\"Logged out\");\n      this.router.navigate(['/login']);\n    });\n    //this.router.navigate(['/login']);\n    */\n    this.authFB.signOut();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark lms-bg\">\n  <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../../../assets/android-chrome-512x512.png\" alt=\"FIU Logo\" width=\"32\"\n      height=\"32\"></a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\n    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/course-library\" routerLinkActive=\"active\">Course-Library</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/courses\" routerLinkActive=\"active\">Student Dashboard</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"isAdmin\">\n        <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n      </li>\n    </ul>\n  </div>\n  <ul class=\"navbar-nav\" *ngIf=\"currentUserAsync | async as cu\">\n    <li class=\"nav-item\">\n      <span class=\"nav-welcome\">Hello, {{cu.f_name}} {{cu.l_name}}!</span>\n    </li>\n    <li class=\"nav-item\">\n      <span class=\"nav-welcome\">Role: {{cu.role}}</span>\n    </li>\n  </ul>\n  <!---\n    <li class=\"nav-item\" *ngIf=\"FB_user;\">\n      <a class=\"nav-link\" (click)=\"logout()\" style=\"cursor:pointer\"><i class=\"fas fa-sign-out-alt\"></i> Logout</a>\n    </li>\n    \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/profile\" routerLinkActive=\"active\"><i class=\"fas fa-user\"></i>Profile</a>\n      </li>\n  \n      \n  \n  <ng-template #elseBlock>\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\"><i class=\"fas fa-sign-in-alt\"></i> Login</a>\n      </li>\n      \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Sign Up</a>\n      </li>\n      \n    </ul>\n    \n  </ng-template>\n  -->\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:3000',\n  frontendURL: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}