{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","./src/app/modules/admin/admin-routing.module.ts","./src/app/modules/admin/admin.module.ts","./src/app/modules/admin/create-course/create-course.component.ts","./src/app/modules/admin/create-course/create-course.component.html","./src/app/modules/admin/dashboard/dashboard.component.ts","./src/app/modules/admin/dashboard/dashboard.component.html","./src/app/modules/admin/edit-course/edit-course.component.ts","./src/app/modules/admin/edit-course/edit-course.component.html","./src/app/modules/admin/pending-enrollment/pending-enrollment.component.ts","./src/app/modules/admin/pending-enrollment/pending-enrollment.component.html","./src/app/modules/admin/promotion/promotion.component.ts","./src/app/modules/admin/promotion/promotion.component.html","./src/app/modules/admin/sidebar-admin/sidebar-admin.component.ts","./src/app/modules/admin/sidebar-admin/sidebar-admin.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACpC;AACwO;AACT;AACzK;AACvB;AAC3B;AACiC;AAC1B;AACwE;AAC3E;AACgB;AAC1B;AAC6D;AACJ;;AAEtG;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACwC;AACS;AACA;AACL;AACH;AACc;AACX;AACG;AACL;;AAE1C;AACA;AACA,6CAA6C;AAC7C,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,oDAAoD;AACpD,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,+CAA+C;AAC/C,IAAI,0DAAmB;AACvB,CAAC;AACD,6CAA6C;AAC7C,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,oDAAoD;AACpD,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,yHAAyH,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,8DAA8D,EAAE,uFAAuF,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,GAAG,uCAAuC,EAAE;AACnd,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,oEAA6B;AACjC,IAAI,yDAAkB;AACtB,IAAI,wDAAiB;AACrB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oEAAO;AAC/B,QAAQ,uEAAU,cAAc,kEAAK,qBAAqB,yEAAY,MAAM,iBAAiB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oEAAO;AAC3B,QAAQ,kEAAK,SAAS,kEAAK;AAC3B;AACA;AACA;AACA,SAAS;AACT,QAAQ,kEAAK,YAAY,kEAAK;AAC9B;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,kEAAK,qBAAqB,kEAAK;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,uEAAU,cAAc,oEAAO;AACvC,QAAQ,uEAAU,cAAc,oEAAO,sBAAsB,kEAAK,EAAE,aAAa;AACjF;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAWV;AACD;AACA;AACA,UAAU;AACV;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD,WAAW,EAAE;AACb,4BAA4B,iFAAkB,CAAC,4EAAa,CAAC,4EAAa,CAAC,8EAAe;AAC1F;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,8DAA8D;AAChH,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6CAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE,KAAK,mDAAK;AAC9D,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,4CAA4C,iEAAS,WAAW,iEAAS;AACzE,4BAA4B;AAC5B;AACA,sBAAsB,mDAAK;AAC3B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,oDAAoD,8DAAM;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kBAAkB,2DAAG;AACrB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,oDAAoD,8DAAM;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mBAAmB,2DAAG;AACtB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kCAAkC,qCAAqC;AACvE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,mFAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qCAAqC,wCAAwC;AAC7E;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0CAA0C,kFAAoB;AAC9D;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,iBAAiB;AAC/B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAoB,IAAI,iEAAS;AACnD;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,iEAAS;AACnD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT,kCAAkC,iEAAS,QAAQ,iEAAS;AAC5D,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,4DAAI;AACtD,oBAAoB;AACpB;AACA;AACA;AACA;AACA,8EAA8E,sBAAsB;AACpG;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,uCAAuC,gEAAU,gBAAgB,8DAAQ;AACzE,wBAAwB,gEAAU,gBAAgB,iEAAW;AAC7D,mBAAmB,EAAE;AACrB,sCAAsC,2DAAK,gBAAgB,2DAAK;AAChE,mBAAmB,EAAE;AACrB;AACA;AACA,kDAAkD,4EAAc;AAChE;AACA,mCAAmC;AACnC;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,4BAA4B,0DAAI,gBAAgB,yDAAG;AACnD,4BAA4B,0DAAI;AAChC;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,0DAA0D,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,uCAAuC,gEAAU,gBAAgB,8DAAQ;AACzE,mBAAmB,EAAE;AACrB;AACA,wBAAwB,0DAAI,gBAAgB,yDAAG;AAC/C;AACA,wBAAwB,0DAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2DAAK,gBAAgB,2DAAK;AACrE,aAAa,4EAAc;AAC3B;AACA;AACA;AACA,4DAA4D,uDAAC;AAC7D;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4CAA4C,4DAAI;AAChD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA;AACA;AACA;AACA,qCAAqC,iEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,iEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,mDAAK;AACxC,yCAAyC,iEAAS;AAClD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,mDAAK;AACb,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uCAAuC,EAAE;AACzC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,2BAA2B,4FAA6B;AACxD,6CAA6C,uFAAwB;AACrE;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,gEAAgE,EAAE;AAClE,gCAAgC,4FAA6B;AAC7D;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,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","file":"modules-admin-admin-module-es2015.js","sourcesContent":["import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Self, Attribute, Inject, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.MatFormField, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc6.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { CreateCourseComponent } from './create-course/create-course.component';\r\nimport { EditCourseComponent } from './edit-course/edit-course.component';\r\nimport { PendingEnrollmentComponent } from './pending-enrollment/pending-enrollment.component';\r\n\r\nimport { AuthenticationService as AuthGuard } from '@app/core/services/authentication.service';\r\nimport { PromotionComponent } from './promotion/promotion.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' } },\r\n  { path: 'create-course', component: CreateCourseComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' } },\r\n  { path: 'edit-course/:id', component: EditCourseComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' } },\r\n  { path: 'pending-enrollment/:id', component: PendingEnrollmentComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' } },\r\n  { path: 'promotion', component: PromotionComponent, canActivate: [AuthGuard], data: {expectedRole: 'admin' } }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { CreateCourseComponent } from './create-course/create-course.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { EditCourseComponent } from './edit-course/edit-course.component';\r\nimport { PendingEnrollmentComponent } from './pending-enrollment/pending-enrollment.component';\nimport { PromotionComponent } from './promotion/promotion.component';\nimport { SidebarAdminComponent } from './sidebar-admin/sidebar-admin.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CreateCourseComponent, DashboardComponent, EditCourseComponent, PendingEnrollmentComponent, PromotionComponent, SidebarAdminComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    MatSelectModule\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { CourseService } from '../../../core/services/course.service';\r\nimport { CourseDetailsService } from '@app/core/services/course-details.service';\r\nimport { StudentService } from '@app/core/services/student.service';\r\n\r\nimport { Course } from '@app/core/models/course.model';\r\nimport { start } from 'repl';\r\nimport { StudentCourseService } from '@app/core/services/student-course.service';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n  selector: 'app-create-course',\r\n  templateUrl: './create-course.component.html',\r\n  styleUrls: ['./create-course.component.scss']\r\n})\r\nexport class CreateCourseComponent implements OnInit {\r\n\r\n  courseForm: FormGroup;\r\n  labels = ['name', 'description', 'seats', 'start_date', 'end_date'];\r\n  submitted = false;\r\n  todayDate: Promise<string>|null = null;\r\n  startDateEvent: Promise<String>|null = null;\r\n  endDateEvent: Promise<String>|null = null;\r\n  startDateSelected = false;\r\n  endDateSelected = false;\r\n  instructors: Observable<any>;\r\n\r\n  constructor(private courseService: CourseService, private studentService: StudentService, private studentCourseService: StudentCourseService, private courseDetailsService: CourseDetailsService, private fb: FormBuilder, private router: Router) {\r\n    this.courseForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      instructor: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      seats: ['', Validators.required],\r\n      start_date: ['', Validators.required],\r\n      end_date: ['', Validators.required]\r\n    });\r\n   }\r\n\r\n  get c() { return this.courseForm.controls; }\r\n\r\n  ngOnInit() {\r\n    let today = new Date();\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    let yyyy = today.getFullYear();\r\n\r\n    this.todayDate = new Promise<string>((resolve, reject) => { resolve(mm + '/' + dd + '/' + yyyy); });\r\n    //this.todayDate = mm + '/' + dd + '/' + yyyy;\r\n    //console.log(this.todayDate);\r\n    this.instructors = this.studentService.getInstructors();\r\n  }\r\n\r\n  /*changeInstructor(event){\r\n    console.log(event.target.value);\r\n    this.courseForm.setValue(event.target.value, {\r\n      onlySelf: true\r\n    })\r\n  }*/\r\n\r\n  addCourse(name, instructor, description, seats, start_date, end_date) {\r\n    this.submitted = true;\r\n\r\n    start_date = this.formatDate(start_date);\r\n    console.log(\"going to submit start_date: \" + start_date);\r\n\r\n    end_date = this.formatDate(end_date);\r\n    console.log(\"going to submit end_date: \" + end_date);\r\n\r\n    console.log(instructor);\r\n\r\n    console.log(instructor.id);\r\n    if(!this.courseForm.valid){\r\n      console.log(\"invalid\");\r\n      return;\r\n    }\r\n\r\n    this.courseService.addCourse(name, description, seats, start_date, end_date).subscribe((course: Course) => {\r\n      console.log(\"course: \" + JSON.stringify(course));\r\n      this.studentCourseService.enrollStudentToCourse(instructor.id, course.id, 'enrolled').subscribe(() => {\r\n        console.log(\"instructor added to course\");\r\n      });\r\n      this.courseDetailsService.createCourseDetails(course.id, \"<p>Recommended inputs: Course Name, Instructor Name, Office (location/hours), Phone number, and email.</p>\").subscribe(() => {\r\n        console.log(\"course details created\");\r\n      });\r\n      this.router.navigate(['/admin']);\r\n    });\r\n  }\r\n\r\n  onStartDateSelect(event){\r\n    console.log(\"startDateSelected\");\r\n    this.startDateEvent = new Promise<String>((resolve, reject) => {\r\n      resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year);\r\n    });\r\n    this.startDateSelected = true;\r\n  }\r\n\r\n  onEndDateSelect(event){\r\n    console.log(\"endDateSelected\");\r\n    this.endDateEvent = new Promise<String>((resolve, reject) => {\r\n      resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year);\r\n    });\r\n    this.endDateSelected = true;\r\n  }\r\n\r\n  formatDate(date){\r\n    let newDate = new Date(date);\r\n    let dd = String(newDate.getDate()).padStart(2, '0');\r\n    let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    let yyyy = newDate.getFullYear();\r\n\r\n    let dateRes: String = yyyy + '-' + mm + '-' + dd;\r\n    return dateRes;\r\n  }\r\n\r\n}\r\n","<div class=\"center-form\">\r\n<h2>Create New Course</h2>\r\n<form [formGroup]=\"courseForm\" class=\"col-sm-4\">\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"name\"><span style=\"color: red\">*</span>Name</label>\r\n        <input type=\"text\" class=\"form-control\"  formControlName=\"name\" #name [ngClass]=\"{ 'is-invalid': submitted && c.name.errors }\" required>\r\n        <div *ngIf=\"submitted && c.name.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"c.name.errors.required\">Name is required</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <mat-form-field>\r\n            <mat-label>Instructor</mat-label>\r\n            <mat-select formControlName=\"instructor\" [ngClass]=\"{ 'is-invalid': submitted && c.instructor.errors }\" required #instructor>\r\n                <mat-option>None</mat-option>\r\n                <mat-option *ngFor=\"let instructor of instructors | async\" [value]=\"{id: instructor.id, email: instructor.email}\">{{instructor.email}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <!--<input type=\"text\" class=\"form-control\"  formControlName=\"instructor\" #instructor [value]=\"instructor.email\" [ngClass]=\"{ 'is-invalid': submitted && c.instructor.errors }\" required>-->\r\n        <div *ngIf=\"submitted && c.instructor.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"c.instructor.errors.required\">Instructor is required</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"description\"><span style=\"color: red\">*</span>Description</label>\r\n        <textarea class=\"form-control\"  formControlName=\"description\" #description [ngClass]=\"{ 'is-invalid': submitted && c.description.errors }\" required></textarea>\r\n        <div *ngIf=\"submitted && c.description.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"c.description.errors.required\">Description is required</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"seats\"><span style=\"color: red\">*</span>Number of Seats</label>\r\n        <input type=\"text\" class=\"form-control\"  formControlName=\"seats\" #seats [ngClass]=\"{ 'is-invalid': submitted && c.seats.errors }\" required>\r\n        <div *ngIf=\"submitted && c.seats.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"c.seats.errors.required\">Seats is required</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"start_date\"><span style=\"color: red\">*</span>Start Date</label>\r\n        <div class=\"input-group\">\r\n            <input class=\"form-control\"\r\n                   name=\"dp\" ngbDatepicker (dateSelect)=\"onStartDateSelect($event)\" #d=\"ngbDatepicker\" formControlName=\"start_date\" #start_date readonly [value]=\"startDateSelected ? (startDateEvent | async) : (todayDate | async)\" [ngClass]=\"{ 'is-invalid': submitted && c.start_date.errors }\" required>\r\n            <div class=\"input-group-append\">\r\n              <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n            </div>\r\n            <div *ngIf=\"submitted && c.start_date.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"c.start_date.errors.required\">Start Date is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\" data-provide=\"datepicker\">\r\n        <label for=\"end_date\"><span style=\"color: red\">*</span>End Date</label>\r\n        <div class=\"input-group\">\r\n            <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\r\n                   name=\"dp\" ngbDatepicker (dateSelect)=\"onEndDateSelect($event)\" #d2=\"ngbDatepicker\" formControlName=\"end_date\" #end_date readonly [value]=\"endDateSelected ? (endDateEvent | async) : (todayDate | async)\" [ngClass]=\"{ 'is-invalid': submitted && c.end_date.errors }\" required>\r\n            <div class=\"input-group-append\">\r\n              <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d2.toggle()\" type=\"button\"></button>\r\n            </div>\r\n            <div *ngIf=\"submitted && c.end_date.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"c.end_date.errors.required\">End Date is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <button type=\"submit\" (click)=\"addCourse(name.value, instructor.value, description.value, seats.value, start_date.value, end_date.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Create Course</button>\r\n    <a routerLink=\"/admin\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>\r\n</form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Course } from '../../../core/models/course.model';\r\nimport { CourseService } from '../../../core/services/course.service';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { AuthenticationService } from '@app/core/services/authentication.service';\r\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\r\n\r\nimport { User } from '@app/core/models/user';\r\nimport decode from 'jwt-decode';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  currentUser: User;\r\n  isAdmin: Boolean;\r\n  tokenPayload;\r\n  courses: any = {};\r\n  displayedColumns = ['id', 'name', 'description', 'seats', 'start_date', 'end_date', 'Actions'];\r\n  page = 0;\r\n  pages = [];\r\n  students: number[] = [];\r\n  currentPage;\r\n  maxPages;\r\n  maxPagesArray;\r\n  numberPerPage = 5;\r\n\r\n  constructor(private courseService: CourseService, private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService, private studentCourseService: StudentCourseService) {\r\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n  }\r\n\r\n  ngOnInit() {\r\n    let page = this.route.snapshot.paramMap.get('page') || this.page;\r\n    this.fetchCourses(page);\r\n    console.log(this.currentUser);\r\n    this.isAdmin = (JSON.parse(localStorage.getItem(\"FB_user\")).role == 'admin');\r\n\r\n    /*\r\n    this.currentUser = this.authenticationService.currentUserValue;\r\n    if(this.currentUser){\r\n      this.tokenPayload = decode(this.currentUser.token);\r\n      this.isAdmin = (this.tokenPayload.role === \"admin\");\r\n      console.log(\"Current user in Admin: \" + JSON.stringify(this.currentUser));\r\n      console.log(\"tokenPayload: \" + JSON.stringify(this.tokenPayload));\r\n    }\r\n    */\r\n  }\r\n\r\n  pendingEnrollmentsNotification(courses: []) {\r\n    courses.forEach((course: Course, index, arr) => {\r\n      let start_date = new Date(course.start_date.toString());\r\n      let end_date = new Date(course.end_date.toString());\r\n\r\n      course.start_date = start_date.toLocaleDateString();\r\n      course.end_date = end_date.toLocaleDateString();\r\n      if (course.seats < 1) {\r\n        return;\r\n      }\r\n      this.students[index] = 0;\r\n      this.studentCourseService.getStudentsByCourseId(course.id).subscribe((res: []) => {\r\n        res.forEach((val: any) => {\r\n          if (val.enrollment_status == \"pending\") {\r\n            this.students[index]++;\r\n          }\r\n        })\r\n        console.log(course.name + \" pending students: \" + this.students[index]);\r\n        //this.students = res;\r\n        //console.log(\"i: \" + index + \" course: \" + JSON.stringify(course));\r\n        //console.log(this.students);\r\n      });\r\n    });\r\n  }\r\n\r\n  fetchCourses(page) {\r\n    this.courseService.getCourses(page, this.numberPerPage)\r\n      .subscribe((data: {}) => {\r\n        this.courses = data;\r\n        this.page = page;\r\n        this.currentPage = this.courses.pagination.current;\r\n        this.maxPages = this.courses.pagination.maxPages;\r\n        this.maxPagesArray = new Array(this.maxPages);\r\n        this.pages = Object.values(this.courses.pagination);\r\n\r\n        console.log('Data requested...');\r\n\r\n        this.pendingEnrollmentsNotification(this.courses.res);\r\n        this.router.navigate(['/admin/dashboard', { page: page }]);\r\n      });\r\n  }\r\n\r\n  fetchPageCourses(pageNo) {\r\n    //console.log(\"pageNo: \" + pageNo);\r\n    if (pageNo < 0) {\r\n      return;\r\n    }\r\n    this.courseService.getCourses(pageNo, this.numberPerPage)\r\n      .subscribe((data: any = {}) => {\r\n        this.courses = data;\r\n        this.page = pageNo;\r\n        this.currentPage = this.courses.pagination.current;\r\n        this.maxPages = this.courses.pagination.maxPages;\r\n\r\n        this.pendingEnrollmentsNotification(this.courses.res);\r\n\r\n        console.log('Data requested...' + pageNo);\r\n\r\n        this.router.navigate(['/admin/dashboard', { page: this.courses.pagination.current }]);\r\n      });\r\n  }\r\n\r\n  editCourse(id) {\r\n    this.router.navigate([`admin/edit-course/${id}`]);\r\n  }\r\n\r\n  deleteCourse(id) {\r\n    let r = confirm(`Delete Course ${id}: Are you sure?`);\r\n    if (r == true) {\r\n      this.courseService.deleteCourse(id).subscribe(() => {\r\n        //this.fetchCourses();\r\n      });\r\n      const item = this.courses.res.find(item => item.id === id);\r\n      this.courses.res.splice(this.courses.res.indexOf(item));\r\n    }\r\n  }\r\n\r\n  pendingEnrollment(id) {\r\n    this.router.navigate([`admin/pending-enrollment/${id}`]);\r\n  }\r\n\r\n}\r\n","<!-- <h2 class=\"center-form\">Admin Dashboard</h2> -->\r\n\r\n<!-- <div *ngIf=\"isAdmin\" class=\"center-form\"> -->\r\n\r\n<app-sidebar-admin></app-sidebar-admin>\r\n<div id=\"main\">\r\n    <div class=\"center-form\">\r\n        <!-- <div *ngIf=\"currentUser\"> -->\r\n        <h2>Course Manager</h2>\r\n        <nav class=\"nav flex-column col-sm-1\">\r\n            <a routerLink=\"/admin/create-course\" routerLinkActive=\"active\" class=\"nav-link btn btn-success\"><i\r\n                    class=\"fas fa-plus-circle\"></i> Create New Course</a>\r\n        </nav>\r\n\r\n        <!-- </div> -->\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let course of courses.res; let i = index\" class=\"trstyle\">\r\n                    <th scope=\"row\">{{ course.id }}</th>\r\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\r\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\r\n                    <td>{{ course.seats }}</td>\r\n                    <td>{{ course.start_date }}</td>\r\n                    <td>{{ course.end_date }}</td>\r\n                    <td>\r\n                        <button type=\"button\" (click)=\"editCourse(course.id)\" class=\"btn btn-primary\"><i\r\n                                class=\"fas fa-edit\"></i> Edit</button>\r\n                        <button type=\"button\" (click)=\"deleteCourse(course.id)\" class=\"btn btn-danger\"><i\r\n                                class=\"fas fa-minus-circle\"></i> Delete</button>\r\n                        <button type=\"button\" (click)=\"pendingEnrollment(course.id)\" class=\"btn btn-warning\"\r\n                            style=\"margin-left: 20px\"><span *ngIf=\"students[i] > 0\"\r\n                                class=\"badge badge-light\">{{students[i]}}</span> Pending Enrollments</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <nav aria-label=\"Page navigation course-library\">\r\n            <ul class=\"pagination\">\r\n\r\n                <ng-container *ngIf=\"page == 0; else elseBlock\">\r\n                    <li class=\"page-item disabled\"><button class=\"page-link\"\r\n                            (click)=\"fetchPageCourses(page-1)\">Previous</button></li>\r\n                </ng-container>\r\n                <ng-template #elseBlock>\r\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page-1)\">Previous</button>\r\n                    </li>\r\n                </ng-template>\r\n\r\n                <ng-container *ngFor=\"let maxPages of maxPagesArray; let i = index\">\r\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(i)\">{{i}}</button></li>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"page == maxPages - 1; else elseBlock2\">\r\n                    <li class=\"page-item disabled\"><button class=\"page-link\"\r\n                            (click)=\"fetchPageCourses(page+1)\">Next</button></li>\r\n                </ng-container>\r\n                <ng-template #elseBlock2>\r\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page+1)\">Next</button>\r\n                    </li>\r\n                </ng-template>\r\n\r\n            </ul>\r\n        </nav>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { Course } from '@app/core/models/course.model';\r\nimport { CourseService } from '../../../core/services/course.service';\r\nimport { StudentCourseService } from '@app/core/services/student-course.service';\r\nimport { StudentService } from '@app/core/services/student.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-edit-course',\r\n  templateUrl: './edit-course.component.html',\r\n  styleUrls: ['./edit-course.component.scss']\r\n})\r\nexport class EditCourseComponent implements OnInit {\r\n\r\n  id: number;\r\n  course: Course;\r\n  updateForm: FormGroup;\r\n  submitted = false;\r\n  startDate: Promise<string> | null = null;\r\n  startDateSelected = false;\r\n  startDateEvent: Promise<String> | null = null;\r\n  endDate: Promise<string> | null = null;\r\n  endDateSelected = false;\r\n  endDateEvent: Promise<String> | null = null;\r\n  instructors: Observable<any>;\r\n  oldInstructor: String;\r\n  oldInstructorId: number;\r\n\r\n  constructor(private courseService: CourseService, private studentCourseService: StudentCourseService, private studentService: StudentService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\r\n    this.CreateForm();\r\n  }\r\n\r\n  CreateForm() {\r\n    this.updateForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      instructor: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      seats: ['', Validators.required],\r\n      start_date: ['', Validators.required],\r\n      end_date: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get cu() { return this.updateForm.controls; }\r\n\r\n  ngOnInit() {\r\n    this.instructors = this.studentService.getInstructors();\r\n    this.route.params.subscribe(params => {\r\n      this.id = params.id;\r\n      this.courseService.getCourseById(this.id).subscribe((res: Course) => {\r\n        this.course = res;\r\n\r\n        //console.log(this.course.start_date);\r\n\r\n        this.hDateFormat(this.course);\r\n\r\n        //console.log(this.course.start_date);\r\n\r\n        this.updateForm.get('name').setValue(this.course.name);\r\n        this.updateForm.get('description').setValue(this.course.description);\r\n        this.updateForm.get('seats').setValue(this.course.seats);\r\n\r\n        this.studentCourseService.getInstructorByCourseId(this.id).subscribe((instructor: any) => {\r\n          console.log(instructor);\r\n          //this.updateForm.get('instructor').setValue(instructor.email);\r\n          this.oldInstructor = instructor.email;\r\n          this.oldInstructorId = instructor.student_id;\r\n        })\r\n        let newDate = new Date(this.course.start_date.toString());\r\n        let dd = String(newDate.getDate()).padStart(2, '0');\r\n        let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        let yyyy = newDate.getFullYear();\r\n\r\n        this.startDate = new Promise<string>((resolve, reject) => { resolve(mm + '/' + dd + '/' + yyyy); });\r\n\r\n        newDate = new Date(this.course.end_date.toString());\r\n        dd = String(newDate.getDate()).padStart(2, '0');\r\n        mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        yyyy = newDate.getFullYear();\r\n\r\n        this.endDate = new Promise<string>((resolve, relect) => { resolve(mm + '/' + dd + '/' + yyyy); });\r\n        //this.updateForm.get('start_date').setValue(this.course.start_date);\r\n        //this.updateForm.get('end_date').setValue(this.course.end_date);\r\n      });\r\n    });\r\n  }\r\n\r\n  updateCourse(name, instructor, description, seats, start_date, end_date) {\r\n    this.submitted = true;\r\n\r\n    start_date = this.formatDate(start_date);\r\n    console.log(\"going to submit start_date: \" + start_date);\r\n\r\n    end_date = this.formatDate(end_date);\r\n    console.log(\"going to submit end_date: \" + end_date);\r\n\r\n    console.log(instructor);\r\n    console.log(instructor.id);\r\n    if (!this.updateForm.valid) {\r\n      return;\r\n    }\r\n\r\n    this.courseService.updateCourse(this.id, name, description, seats, start_date, end_date).subscribe(res => {\r\n      //remove old instructor\r\n      this.studentCourseService.declineStudentEnrollment(this.oldInstructorId, this.id).subscribe(() => {\r\n        console.log(\"Removed old instructor from course\");\r\n      });\r\n      //add new instructor\r\n      this.studentCourseService.enrollStudentToCourse(instructor.id, this.id, 'enrolled').subscribe(() => {\r\n        console.log(\"Added new instructor to course\");\r\n      });\r\n      this.router.navigate(['/admin']);\r\n    });\r\n  }\r\n\r\n  hDateFormat(course: Course) {\r\n    let start_date = new Date(course.start_date.toString());\r\n    let end_date = new Date(course.end_date.toString());\r\n\r\n    course.start_date = start_date.toLocaleDateString();\r\n    course.end_date = end_date.toLocaleDateString();\r\n  }\r\n\r\n  formatDate(date) {\r\n    let newDate = new Date(date);\r\n    let dd = String(newDate.getDate()).padStart(2, '0');\r\n    let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    let yyyy = newDate.getFullYear();\r\n\r\n    let dateRes: String = yyyy + '-' + mm + '-' + dd;\r\n    return dateRes;\r\n  }\r\n\r\n  onStartDateSelect(event) {\r\n    this.startDateSelected = true;\r\n    this.startDateEvent = new Promise<String>((resolve, reject) => {\r\n      resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year);\r\n    });\r\n  }\r\n\r\n  onEndDateSelect(event) {\r\n    this.endDateSelected = true;\r\n    this.endDateEvent = new Promise<String>((resolve, reject) => {\r\n      resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"center-form\">\r\n    <h2>Edit Course {{id}}</h2>\r\n    <form [formGroup]=\"updateForm\" class=\"col-sm-4\">\r\n    \r\n        <div class=\"form-group\">\r\n            <label for=\"name\"><span style=\"color: red\">*</span>Name</label>\r\n            <input type=\"text\" class=\"form-control\"  formControlName=\"name\" #name [ngClass]=\"{ 'is-invalid': submitted && cu.name.errors }\" required>\r\n            <div *ngIf=\"submitted && cu.name.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"cu.name.errors.required\">Name is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <mat-form-field>\r\n                <mat-label>Instructor</mat-label>\r\n                <mat-select formControlName=\"instructor\" [ngClass]=\"{ 'is-invalid': submitted && cu.instructor.errors }\" required #instructor>\r\n                    <mat-option>None</mat-option>\r\n                    <mat-option *ngFor=\"let instructor of instructors | async\" [value]=\"{id: instructor.id, email: instructor.email}\">{{instructor.email}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <span> <br>Previous Instructor: <input type=\"text\" [value]=\"oldInstructor\" disabled></span>\r\n            <div *ngIf=\"submitted && cu.instructor.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"cu.instructor.errors.required\">Instructor is required</div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group\">\r\n            <label for=\"description\"><span style=\"color: red\">*</span>Description</label>\r\n            <textarea class=\"form-control\"  formControlName=\"description\" #description [ngClass]=\"{ 'is-invalid': submitted && cu.description.errors }\" required></textarea>\r\n            <div *ngIf=\"submitted && cu.description.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"cu.description.errors.required\">Description is required</div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group\">\r\n            <label for=\"seats\"><span style=\"color: red\">*</span>Number of Seats</label>\r\n            <input type=\"text\" class=\"form-control\"  formControlName=\"seats\" #seats [ngClass]=\"{ 'is-invalid': submitted && cu.seats.errors }\" required>\r\n            <div *ngIf=\"submitted && cu.seats.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"cu.seats.errors.required\">Seats is required</div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group\">\r\n            <label for=\"start_date\"><span style=\"color: red\">*</span>Start Date</label>\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"yyyy-mm-dd\"\r\n                       name=\"dp\" ngbDatepicker (dateSelect)=\"onStartDateSelect($event)\" #d=\"ngbDatepicker\" formControlName=\"start_date\" #start_date readonly [value]=\"startDateSelected ? (startDateEvent | async) : (startDate | async)\" [ngClass]=\"{ 'is-invalid': submitted && cu.start_date.errors }\" required>\r\n                <div class=\"input-group-append\">\r\n                  <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n                </div>\r\n                <div *ngIf=\"submitted && cu.start_date.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"cu.start_date.errors.required\">Start Date is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group\">\r\n            <label for=\"end_date\"><span style=\"color: red\">*</span>End Date</label>\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"yyyy-mm-dd\"\r\n                       name=\"dp\" ngbDatepicker (dateSelect)=\"onEndDateSelect($event)\" #d2=\"ngbDatepicker\" formControlName=\"end_date\" #end_date readonly [value]=\"endDateSelected ? (endDateEvent | async) : (endDate | async)\" [ngClass]=\"{ 'is-invalid': submitted && cu.end_date.errors }\" required>\r\n                <div class=\"input-group-append\">\r\n                  <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d2.toggle()\" type=\"button\"></button>\r\n                </div>\r\n                <div *ngIf=\"submitted && cu.end_date.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"cu.end_date.errors.required\">End Date is required</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <button type=\"submit\" (click)=\"updateCourse(name.value, instructor.value, description.value, seats.value, start_date.value, end_date.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Course</button>\r\n        <a routerLink=\"/admin\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit, ɵINJECTOR_IMPL__POST_R3__ } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\r\nimport { CourseService } from 'src/app/core/services/course.service';\r\n\r\nimport { Course } from '@app/core/models/course.model';\r\n\r\n@Component({\r\n  selector: 'app-pending-enrollment',\r\n  templateUrl: './pending-enrollment.component.html',\r\n  styleUrls: ['./pending-enrollment.component.scss']\r\n})\r\nexport class PendingEnrollmentComponent implements OnInit {\r\n\r\n  id: number;\r\n  course: Course;\r\n  students: any = [];\r\n  noSeats: Boolean = false;\r\n\r\n  constructor(private studentCourseService: StudentCourseService, private courseService: CourseService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.id = params.id;\r\n\r\n      this.courseService.getCourseById(this.id).subscribe((res: Course) => {\r\n        this.course = res;\r\n        if(this.course.seats < 1) {\r\n          this.noSeats = true;\r\n          console.log(\"no seats: \" + this.noSeats);\r\n        }\r\n        console.log(this.course);\r\n        if(!this.noSeats){\r\n          this.studentCourseService.getStudentsByCourseId(this.id).subscribe(res => {\r\n            this.students = res;\r\n            console.log(this.students);\r\n          });\r\n        }\r\n      })\r\n      /*this.studentCourseService.getStudentsByCourseId(this.id).subscribe(res => {\r\n        this.students = res;\r\n        //console.log(this.students);\r\n      });*/\r\n    });\r\n  }\r\n\r\n  acceptEnrollment(studentId, courseId, enrollment_status) {\r\n    // Update student enrollment_status = 'enrolled'\r\n    let ret = confirm(`Accept student ${studentId} enrollment?`);\r\n    if(ret == true){\r\n      this.studentCourseService.acceptStudentEnrollment(studentId, courseId, enrollment_status).subscribe(res => {\r\n        //alert(`Accepted student ${studentId} enrollment`);\r\n\r\n        // remove student from view\r\n        for (var i = 0; i < this.students.length; i++){\r\n          if(this.students[i].student_id === studentId) {\r\n            this.students.splice(i, 1);\r\n          }\r\n        }\r\n\r\n        this.courseService.updateCourseSeats(courseId, this.course.seats - 1).subscribe(() => {\r\n          console.log(\"seats decremented by 1\");\r\n          this.course.seats = this.course.seats - 1;\r\n        })\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  declineEnrollment(studentId, courseId) {\r\n\r\n    let ret = confirm(`Decline student ${studentId} enrollment?`);\r\n    if(ret == true){\r\n      this.studentCourseService.declineStudentEnrollment(studentId, courseId).subscribe(res => {\r\n        //alert(`Declined student ${studentId} enrollment`);\r\n\r\n        // remove student from view\r\n        for (var i = 0; i < this.students.length; i++){\r\n          if(this.students[i].student_id === studentId) {\r\n            this.students.splice(i, 1);\r\n          }\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<h2 *ngIf=\"course\">{{ course.name }} <span style=\"float: right\">Seats: {{ course.seats }}</span></h2>\r\n\r\n<table class=\"table\" *ngIf=\"!noSeats; else elseBlock\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">studentID</th>\r\n            <th scope=\"col\">email</th>\r\n            <th scope=\"col\">First Name</th>\r\n            <th scope=\"col\">Last Name</th>\r\n            <th scope=\"col\">Enroll</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let student of students\">\r\n            <ng-container *ngIf=\"student.enrollment_status == 'pending'\">\r\n            <th scope=\"row\">{{ student.student_id}}</th>\r\n            <td>{{ student.email }}</td>\r\n            <td>{{ student.f_name }}</td>\r\n            <td>{{ student.l_name }}</td>\r\n            <td>\r\n                <button type=\"button\" (click)=\"acceptEnrollment(student.student_id, student.course_id, 'enrolled')\" class=\"btn btn-success\">Accept</button>\r\n                <button type=\"button\" (click)=\"declineEnrollment(student.student_id, student.course_id)\" class=\"btn btn-danger\">Decline</button>\r\n            </td>\r\n            </ng-container>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<ng-template #elseBlock>\r\n    <h2 class=\"center-form\">No seats available!</h2>\r\n</ng-template>\r\n\r\n<a routerLink=\"/admin\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { StudentService } from '@app/core/services/student.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\n\nimport { User } from '@app/core/models/user';\n\n\n\n@Component({\n  selector: 'app-promotion',\n  templateUrl: './promotion.component.html',\n  styleUrls: ['./promotion.component.scss']\n})\nexport class PromotionComponent implements OnInit {\n  currentUser: User;\n  isAdmin: Boolean;\n  tokenPayload;\n  students: any = {};\n  displayedColumns = ['id', 'Email', 'Name', 'Role', 'Actions'];\n  page = 0;\n  pages = [];\n  currentPage;\n  maxPages;\n  maxPagesArray;\n  numberPerPage = 5;\n\n  constructor(private studentService: StudentService, private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService, private studentCourseService: StudentCourseService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit() {\n    let page = this.route.snapshot.paramMap.get('page') || this.page;\n    this.fetchStudents(page);\n    console.log(this.currentUser);\n    this.isAdmin = (JSON.parse(localStorage.getItem(\"FB_user\")).role == 'admin');\n  }\n\n  fetchStudents(page) {\n    this.studentService.getStudents(page, this.numberPerPage)\n      .subscribe((data: {}) => {\n        this.students = data;\n        this.page = page;\n        this.currentPage = this.students.pagination.current;\n        this.maxPages = this.students.pagination.maxPages;\n        this.maxPagesArray = new Array(this.maxPages);\n        this.pages = Object.values(this.students.pagination);\n\n        console.log('Data requested...');\n\n        //this.pendingEnrollmentsNotification(this.courses.res);\n        this.router.navigate(['/admin/promotion', { page: page }]);\n      });\n  }\n\n  fetchPageStudents(pageNo) {\n    //console.log(\"pageNo: \" + pageNo);\n    if (pageNo < 0) {\n      return;\n    }\n    this.studentService.getStudents(pageNo, this.numberPerPage)\n      .subscribe((data: any = {}) => {\n        this.students = data;\n        this.page = pageNo;\n        this.currentPage = this.students.pagination.current;\n        this.maxPages = this.students.pagination.maxPages;\n\n        console.log('Data requested...' + pageNo);\n\n        this.router.navigate(['/admin/promotion', { page: this.students.pagination.current }]);\n      });\n  }\n\n  updateRole(student, newRole) {\n    console.log(student);\n    const updatedStudent = {\n      id: student.id,\n      email: student.email,\n      f_name: student.f_name,\n      l_name: student.l_name,\n      active: null,\n      role: newRole\n    }\n    console.log(updatedStudent);\n    this.studentService.updateStudent(updatedStudent).subscribe(() => {\n      console.log(\"changed student \" + student.id + \" from role \" + student.role + \" to role \" + newRole);\n      alert(\"changed student \" + student.id + \" from role \" + student.role + \" to role \" + newRole);\n    });\n  }\n\n  delete(id) {\n    this.studentService.deleteStudent(id).subscribe(() => {\n      console.log(\"deleted student with id \" + id);\n      alert(\"deleted student with id \" + id);\n    });\n  }\n}\n\n","<!-- <h2 class=\"center-form\">Admin Dashboard</h2> -->\n\n<!-- <div *ngIf=\"isAdmin\" class=\"center-form\"> -->\n\n<app-sidebar-admin></app-sidebar-admin>\n<div id=\"main\">\n    <div class=\"center-form\">\n        <!-- <div *ngIf=\"currentUser\"> -->\n        <h2>User Manager</h2>\n\n        <!-- </div> -->\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let student of students.res; let i = index\" class=\"trstyle\">\n                    <th scope=\"row\">{{ student.id }}</th>\n                    <td style=\"max-width: 250px; word-wrap: break-word;\">{{ student.email }}</td>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ student.f_name }} {{ student.l_name }}</td>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ student.role}}</td>\n                    <td>\n                        <button type=\"button\" (click)=\"updateRole(student, 'student')\" class=\"btn btn-primary\"><i\n                                class=\"fas fa-user\"></i> Make Student</button>\n                        <button type=\"button\" (click)=\"updateRole(student, 'instructor')\" class=\"btn btn-info\"><i\n                                class=\"fas fa-chalkboard-teacher\"></i> Make Instructor</button>\n                        <button type=\"button\" (click)=\"updateRole(student, 'admin')\" class=\"btn btn-warning\"><i\n                                class=\"fas fa-user-cog\"></i> Make Admin</button>\n                        <button type=\"button\" (click)=\"delete(student.id)\" class=\"btn btn-danger\"><i\n                                class=\"fas fa-minus-circle\"></i> Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <nav aria-label=\"Page navigation course-library\">\n            <ul class=\"pagination\">\n\n                <ng-container *ngIf=\"page == 0; else elseBlock\">\n                    <li class=\"page-item disabled\"><button class=\"page-link\"\n                            (click)=\"fetchPageStudents(page-1)\">Previous</button></li>\n                </ng-container>\n                <ng-template #elseBlock>\n                    <li class=\"page-item\"><button class=\"page-link\"\n                            (click)=\"fetchPageStudents(page-1)\">Previous</button>\n                    </li>\n                </ng-template>\n\n                <ng-container *ngFor=\"let maxPages of maxPagesArray; let i = index\">\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageStudents(i)\">{{i}}</button></li>\n                </ng-container>\n\n                <ng-container *ngIf=\"page == maxPages - 1; else elseBlock2\">\n                    <li class=\"page-item disabled\"><button class=\"page-link\"\n                            (click)=\"fetchPageStudents(page+1)\">Next</button></li>\n                </ng-container>\n                <ng-template #elseBlock2>\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageStudents(page+1)\">Next</button>\n                    </li>\n                </ng-template>\n\n            </ul>\n        </nav>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar-admin',\n  templateUrl: './sidebar-admin.component.html',\n  styleUrls: ['./sidebar-admin.component.scss']\n})\nexport class SidebarAdminComponent implements OnInit {\n\n  courseId: number;\n  routeName: string;\n  constructor(private route: ActivatedRoute) { };\n\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n    });\n\n    this.route.url.subscribe(url => {\n      console.log(url);\n      if (url[0]) {\n        this.routeName = url[0].path;\n      }\n      else {\n        this.routeName = 'home';\n      }\n      console.log(\"ROUTE: \" + this.routeName);\n    });\n  }\n\n  ngAfterViewChecked() {\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\n    document.getElementById(\"mySidenav\").style.display = \"block\";\n    document.getElementById(this.routeName).style.color = \"#ffffff\";\n    document.getElementById(this.routeName).style.backgroundColor = \"#2d3d97\";\n  }\n\n  ngOnDestroy() {\n    //console.log(\"sidebar destroy\");\n    document.getElementById(\"mySidenav\").style.display = \"none\";\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n    document.getElementById(\"main\").style.marginLeft = \"0\";\n  }\n}\n","<div id=\"mySidenav\" class=\"sidenav\">\n    <a class=\"nav-link\" id=\"dashboard\" routerLink=\"/admin/dashboard\" routerLinkActive=\"active\">Course Manager</a>\n    <a class=\"nav-link\" id=\"promotion\"routerLink=\"/admin/promotion\" routerLinkActive=\"active\">User Manager</a>   \n</div>\n"],"sourceRoot":"webpack:///"}