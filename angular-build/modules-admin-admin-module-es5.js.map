{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///src/app/modules/admin/admin-routing.module.ts","webpack:///src/app/modules/admin/admin.module.ts","webpack:///src/app/modules/admin/create-course/create-course.component.ts","webpack:///src/app/modules/admin/create-course/create-course.component.html","webpack:///src/app/modules/admin/dashboard/dashboard.component.ts","webpack:///src/app/modules/admin/dashboard/dashboard.component.html","webpack:///src/app/modules/admin/edit-course/edit-course.component.ts","webpack:///src/app/modules/admin/edit-course/edit-course.component.html","webpack:///src/app/modules/admin/pending-enrollment/pending-enrollment.component.ts","webpack:///src/app/modules/admin/pending-enrollment/pending-enrollment.component.html","webpack:///src/app/modules/admin/promotion/promotion.component.ts","webpack:///src/app/modules/admin/promotion/promotion.component.html","webpack:///src/app/modules/admin/sidebar-admin/sidebar-admin.component.ts","webpack:///src/app/modules/admin/sidebar-admin/sidebar-admin.component.html"],"names":["_c0","_c1","MatSelect_span_4_Template","rf","ctx","ctx_r2","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","undefined","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","$event","ctx_r8","_panelDoneAnimatingStream","next","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","ctx_r4","_getPanelTheme","_transformOrigin","_triggerFontSize","panelClass","multiple","_c2","_c3","matSelectAnimations","transformPanelWrap","optional","transformPanel","transform","minWidth","opacity","getMatSelectDynamicMultipleError","Error","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","MatSelectChange","source","value","MatSelectBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MatSelectTrigger","ɵfac","MatSelectTrigger_Factory","t","ɵdir","type","selectors","args","selector","MatSelect","_viewportRuler","_changeDetectorRef","_ngZone","elementRef","_dir","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","defaults","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","controlType","ariaLabel","optionSelectionChanges","options","changes","pipe","map","option","onSelectionChange","onStable","asObservable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","id","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","stateChanges","subscribe","panelOpen","emit","overlayDir","offsetX","markForCheck","change","_triggerRect","trigger","nativeElement","getBoundingClientRect","_initKeyManager","changed","event","added","forEach","select","removed","deselect","_resetOptions","_initializeSelection","updateErrorState","_keyManager","withTypeAhead","_typeaheadDebounceInterval","complete","close","open","disabled","length","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayRef","overlayElement","style","_isRtl","_setSelectionByValue","fn","isDisabled","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","selected","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","color","Promise","resolve","then","_value","Array","isArray","clear","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","error","console","warn","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","join","empty","activeOptionIndex","labelCount","optionGroups","_getItemHeight","reduce","result","current","index","itemHeight","items","_getItemCount","panelHeight","Math","min","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","max","ariaLabelledby","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","first","group","leftOverflow","left","rightOverflow","right","width","round","updatePosition","optionHeightAdjustment","height","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","ids","_ariaDescribedby","_placeholder","newValue","writeValue","_id","selectedOptions","reverse","isEmpty","MatSelect_Factory","ɵcmp","contentQueries","MatSelect_ContentQueries","dirIndex","_t","viewQuery","MatSelect_Query","hostAttrs","hostVars","hostBindings","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","required","toString","errorState","_getAriaActiveDescendant","inputs","disableRipple","compareWith","errorStateMatcher","outputs","exportAs","features","useExisting","ngContentSelectors","decls","vars","consts","template","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","directives","styles","encapsulation","data","animation","changeDetection","ctorParameters","decorators","String","propDecorators","descendants","None","OnPush","host","animations","providers","MatSelectModule","ɵmod","ɵinj","factory","MatSelectModule_Factory","imports","ngJitMode","declarations","exports","routes","path","component","canActivate","expectedRole","AdminRoutingModule","forChild","AdminModule","CreateCourseComponent","courseService","studentService","studentCourseService","courseDetailsService","fb","router","labels","submitted","todayDate","startDateEvent","endDateEvent","startDateSelected","endDateSelected","courseForm","name","instructor","description","seats","start_date","end_date","today","Date","dd","getDate","padStart","mm","getMonth","yyyy","getFullYear","reject","instructors","getInstructors","formatDate","log","valid","addCourse","course","JSON","stringify","enrollStudentToCourse","createCourseDetails","navigate","month","day","year","date","newDate","dateRes","controls","onStartDateSelect","onEndDateSelect","templateUrl","styleUrls","DashboardComponent","route","authenticationService","courses","displayedColumns","page","pages","students","numberPerPage","currentUser","x","snapshot","paramMap","get","fetchCourses","isAdmin","parse","localStorage","getItem","role","arr","toLocaleDateString","getStudentsByCourseId","res","val","enrollment_status","getCourses","currentPage","pagination","maxPages","maxPagesArray","Object","values","pendingEnrollmentsNotification","pageNo","r","confirm","deleteCourse","item","splice","EditCourseComponent","startDate","endDate","CreateForm","updateForm","params","getCourseById","hDateFormat","setValue","getInstructorByCourseId","oldInstructor","email","oldInstructorId","student_id","relect","updateCourse","declineStudentEnrollment","PendingEnrollmentComponent","noSeats","studentId","courseId","ret","acceptStudentEnrollment","i","updateCourseSeats","PromotionComponent","fetchStudents","getStudents","student","newRole","updatedStudent","f_name","l_name","active","updateStudent","alert","deleteStudent","SidebarAdminComponent","url","routeName","document","getElementById","marginLeft","display","backgroundColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAgBA;;;;;;AAKA;;;;;;;;;;AAkBA,QAAMA,GAAG,GAAG,CAAC,SAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,aAASC,yBAAT,CAAmCC,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACtD,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAME,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACC,WAAP,IAAsB,MAA/C;AACH;AAAE;;AACH,aAASC,gCAAT,CAA0CJ,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,qEAAsB,CAAtB,EAAyB,MAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMK,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACC,YAAP,IAAuB,MAAhD;AACH;AAAE;;AACH,aAASC,2BAAT,CAAqCP,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACxD,mEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,aAASQ,yBAAT,CAAmCR,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACtD,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,iEAAkB,CAAlB,EAAqBI,gCAArB,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,MAA7D,EAAqE,EAArE;;AACA,iEAAkB,CAAlB,EAAqBG,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwDE,SAAxD,EAAmE,EAAnE;;AACA;AACH;;AAAC,UAAIT,EAAE,GAAG,CAAT,EAAY;AACV,YAAMU,MAAM,GAAG,6DAAf;;AACA,iEAAkB,UAAlB,EAA8B,CAAC,CAACA,MAAM,CAACC,aAAvC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkC,IAAlC;AACH;AAAE;;AACH,aAASC,gCAAT,CAA0CZ,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,YAAMa,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,iEAAkB,sBAAlB,EAA0C,SAASC,6EAAT,CAAuFC,MAAvF,EAA+F;AAAE,sEAAqBF,GAArB;;AAA2B,cAAMG,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACC,yBAAP,CAAiCC,IAAjC,CAAsCH,MAAM,CAACI,OAA7C,CAAP;AAA+D,SAA5Q,EAA8Q,SAA9Q,EAAyR,SAASC,uDAAT,CAAiEL,MAAjE,EAAyE;AAAE,sEAAqBF,GAArB;;AAA2B,cAAMQ,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,cAAR,CAAuBP,MAAvB,CAAP;AAAwC,SAA/c;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA;AACH;;AAAC,UAAIf,EAAE,GAAG,CAAT,EAAY;AACV,YAAMuB,MAAM,GAAG,6DAAf;;AACA,iEAAkB,qBAAlB,EAAyCd,SAAzC;;AACA,gEAAiB,CAAjB;;AACA,6EAA8B,mBAA9B,EAAmDc,MAAM,CAACC,cAAP,EAAnD,EAA4E,EAA5E;;AACA,kEAAmB,kBAAnB,EAAuCD,MAAM,CAACE,gBAA9C,EAAgE,WAAhE,EAA6EF,MAAM,CAACG,gBAApF,EAAsG,IAAtG;;AACA,iEAAkB,SAAlB,EAA6BH,MAAM,CAACI,UAApC,EAAgD,iBAAhD,EAAmEJ,MAAM,CAACK,QAAP,GAAkB,kBAAlB,GAAuC,SAA1G;AACH;AAAE;;AACH,QAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,oBAAD,CAAD,CAAD,EAA2B,GAA3B,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,oBAAD,EAAuB,GAAvB,CAAZ;AACA,QAAMC,mBAAmB,GAAG;AACxB;;;;;AAKAC,wBAAkB,EAAE,qEAAQ,oBAAR,EAA8B,CAC9C,wEAAW,WAAX,EAAwB,mEAAM,iBAAN,EAAyB,CAAC,2EAAD,CAAzB,EAA2C;AAAEC,gBAAQ,EAAE;AAAZ,OAA3C,CAAxB,CAD8C,CAA9B,CANI;;AASxB;;;;;;;;;AASAC,oBAAc,EAAE,qEAAQ,gBAAR,EAA0B,CACtC,mEAAM,MAAN,EAAc,mEAAM;AAChBC,iBAAS,EAAE,aADK;AAEhBC,gBAAQ,EAAE,MAFM;AAGhBC,eAAO,EAAE;AAHO,OAAN,CAAd,CADsC,EAMtC,mEAAM,SAAN,EAAiB,mEAAM;AACnBA,eAAO,EAAE,CADU;AAEnBD,gBAAQ,EAAE,mBAFS;AAGnB;AACAD,iBAAS,EAAE;AAJQ,OAAN,CAAjB,CANsC,EAYtC,mEAAM,kBAAN,EAA0B,mEAAM;AAC5BE,eAAO,EAAE,CADmB;AAE5BD,gBAAQ,EAAE,mBAFkB;AAG5B;AACAD,iBAAS,EAAE;AAJiB,OAAN,CAA1B,CAZsC,EAkBtC,wEAAW,WAAX,EAAwB,qEAAQ,kCAAR,CAAxB,CAlBsC,EAmBtC,wEAAW,WAAX,EAAwB,qEAAQ,mBAAR,EAA6B,mEAAM;AAAEE,eAAO,EAAE;AAAX,OAAN,CAA7B,CAAxB,CAnBsC,CAA1B;AAlBQ,KAA5B;AAyCA;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAMA,aAASC,gCAAT,GAA4C;AACxC,aAAOC,KAAK,CAAC,+DAAD,CAAZ;AACH;AACD;;;;;;;;;AAOA,aAASC,8BAAT,GAA0C;AACtC,aAAOD,KAAK,CAAC,oDAAD,CAAZ;AACH;AACD;;;;;;;;AAMA,aAASE,iCAAT,GAA6C;AACzC,aAAOF,KAAK,CAAC,mCAAD,CAAZ;AACH;AAED;;;;;;AAKA;;;AACA,QAAIG,YAAY,GAAG,CAAnB;AACA;;;;;AAIA,QAAMC,uBAAuB,GAAG,GAAhC;AACA;;;;;AAIA,QAAMC,sBAAsB,GAAG,EAA/B;AACA;;;;;AAIA,QAAMC,6BAA6B,GAAGD,sBAAsB,GAAG,CAA/D;AACA;;;;;AAIA,QAAME,qBAAqB,GAAG,CAA9B,C,CACA;;AACA;;;;;;;;;;;AAUA,QAAMC,+BAA+B,GAAGH,sBAAsB,GAAG,GAAzB,GAA+B,EAAvE;AACA;;;;;;AAKA,QAAMI,6BAA6B,GAAG,CAAtC;AACA;;;;;AAIA,QAAMC,0BAA0B,GAAG,IAAI,4DAAJ,CAAmB,4BAAnB,CAAnC;AACA;;;;;;AAKA,aAASC,2CAAT,CAAqDC,OAArD,EAA8D;AAC1D;AAAQ;;;AAGR;AAAA,iBAAMA,OAAO,CAACC,gBAAR,CAAyBC,UAAzB,EAAN;AAAA;AAHA;AAIH;AACD;;;;;;AAIA,aAASC,eAAT,GAA2B,CAAG;;AAC9B,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;AAIA,QAAMC,iBAAiB,GAAG,IAAI,4DAAJ,CAAmB,mBAAnB,CAA1B;AACA;;;;;AAIA,QAAMC,mCAAmC,GAAG;AACxCC,aAAO,EAAER,0BAD+B;AAExCS,UAAI,EAAE,CAAC,4DAAD,CAFkC;AAGxCC,gBAAU,EAAET;AAH4B,KAA5C;AAKA;;;;QAGMU,e;AACF;;;;AAIA,6BAAYC,MAAZ,EAAoBC,KAApB,EAA2B;AAAA;;AACvB,WAAKD,MAAL,GAAcA,MAAd;AACA,WAAKC,KAAL,GAAaA,KAAb;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;;;QAGMC,a;AACF;;;;;;;AAOA,2BAAYC,WAAZ,EAAyBC,yBAAzB,EAAoDC,WAApD,EAAiEC,gBAAjE,EAAmFC,SAAnF,EAA8F;AAAA;;AAC1F,WAAKJ,WAAL,GAAmBA,WAAnB;AACA,WAAKC,yBAAL,GAAiCA,yBAAjC;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;AACA,QAAMC,mBAAmB,GAAG,kFAAmB,6EAAc,6EAAc,+EAAgBN,aAAhB,CAAd,CAAd,CAAnB,CAA5B;AACA;;;;;QAGMO,gB;;;;AAENA,oBAAgB,CAACC,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIH,gBAAV,GAAP;AAAuC,KAAtG;;AACAA,oBAAgB,CAACI,IAAjB,GAAwB,gEAAyB;AAAEC,UAAI,EAAEL,gBAAR;AAA0BM,eAAS,EAAE,CAAC,CAAC,oBAAD,CAAD;AAArC,KAAzB,CAAxB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBN,gBAAzB,EAA2C,CAAC;AACjEK,YAAI,EAAE,uDAD2D;AAEjEE,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE;AADX,SAAD;AAF2D,OAAD,CAA3C,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;;QAMRC,S;;;;;AACF;;;;;;;;;;;;;;;;AAgBA,yBAAYC,cAAZ,EAA4BC,kBAA5B,EAAgDC,OAAhD,EAAyDjB,yBAAzD,EAAoFkB,UAApF,EAAgGC,IAAhG,EAAsGlB,WAAtG,EAAmHC,gBAAnH,EAAqIkB,gBAArI,EAAuJjB,SAAvJ,EAAkKkB,QAAlK,EAA4KC,qBAA5K,EAAmMC,cAAnM,EAAmNC,QAAnN,EAA6N;AAAA;;AAAA;;AACzN,uFAAMN,UAAN,EAAkBlB,yBAAlB,EAA6CC,WAA7C,EAA0DC,gBAA1D,EAA4EC,SAA5E;AACA,cAAKY,cAAL,GAAsBA,cAAtB;AACA,cAAKC,kBAAL,GAA0BA,kBAA1B;AACA,cAAKC,OAAL,GAAeA,OAAf;AACA,cAAKE,IAAL,GAAYA,IAAZ;AACA,cAAKC,gBAAL,GAAwBA,gBAAxB;AACA,cAAKjB,SAAL,GAAiBA,SAAjB;AACA,cAAKoB,cAAL,GAAsBA,cAAtB;AACA;;;;AAGA,cAAKE,UAAL,GAAkB,KAAlB;AACA;;;;AAGA,cAAKC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,cAAKC,UAAL,GAAkB,CAAlB;AACA;;;;AAGA,cAAKC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,cAAKC,YAAL;AAAqB;;;;;AAKrB,kBAACC,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA,SALA;AAMA;;;;;AAGA,cAAKC,IAAL,wBAA0BvD,YAAY,EAAtC;AACA;;;;AAGA,cAAKwD,QAAL,GAAgB,IAAI,6CAAJ,EAAhB;AACA;;;;AAGA,cAAKxE,gBAAL,GAAwB,CAAxB;AACA;;;;AAGA,cAAKyE,SAAL;AAAkB;;;AAGlB,oBAAM,CAAG,CAHT;AAIA;;;;;AAGA,cAAKC,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;AAIA;;;;;AAGA,cAAKC,UAAL,GAAkB,EAAlB;AACA;;;;AAGA,cAAK5E,gBAAL,GAAwB,KAAxB;AACA;;;;AAGA,cAAKR,yBAAL,GAAiC,IAAI,6CAAJ,EAAjC;AACA;;;;;;AAKA,cAAKqF,QAAL,GAAgB,CAAhB;AACA;;;;;;;AAMA,cAAKC,UAAL,GAAkB,CACd;AACIC,iBAAO,EAAE,OADb;AAEIC,iBAAO,EAAE,KAFb;AAGIC,kBAAQ,EAAE,OAHd;AAIIC,kBAAQ,EAAE;AAJd,SADc,EAOd;AACIH,iBAAO,EAAE,OADb;AAEIC,iBAAO,EAAE,QAFb;AAGIC,kBAAQ,EAAE,OAHd;AAIIC,kBAAQ,EAAE;AAJd,SAPc,CAAlB;AAcA;;;;AAGA,cAAKC,uBAAL,GAA+B,KAA/B;AACA,cAAKC,QAAL,GAAgB,KAAhB;AACA;;;;AAGA,cAAKC,WAAL,GAAmB,YAAnB;AACA;;;;AAGA,cAAKC,SAAL,GAAiB,EAAjB;AACA;;;;AAGA,cAAKC,sBAAL;AAA+B;AAAkB;AAAO;;;AAGxD,oBAAM;AACF;AACA,cAAMC,OAAO,GAAG,MAAKA,OAArB;;AACA,cAAIA,OAAJ,EAAa;AACT,mBAAOA,OAAO,CAACC,OAAR,CAAgBC,IAAhB,CAAqB,kEAAUF,OAAV,CAArB,EAAyC;AAAW;;;AAG3D;AAAA,qBAAM,qFAASA,OAAO,CAACG,GAAR;AAAa;;;;AAI5B,wBAAAC,MAAM;AAAA,uBAAIA,MAAM,CAACC,iBAAX;AAAA,eAJS,CAAT,EAAN;AAAA,aAHgD,CAAzC,CAAP;AAQH;;AACD,iBAAO,MAAKpC,OAAL,CAAaqC,QAAb,CACFC,YADE,GAEFL,IAFE,CAEG,6DAAK,CAAL,CAFH,EAEY;AAAW;;;AAG9B;AAAA,mBAAM,MAAKH,sBAAX;AAAA,WAHmB,CAFZ,CAAP;AAMH,SAtBgD,CAAjD;AAuBA;;;;AAGA,cAAKS,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;AAGA,cAAKC,aAAL,GAAqB,MAAKD,YAAL,CAAkBN,IAAlB,CAAuB;AAAQ;;;;AAIpD,kBAAAQ,CAAC;AAAA,iBAAIA,CAAJ;AAAA,SAJ2C,CAAvB,EAIX;AAAK;;;AAGf,oBAAM,CAAG,CAHC,CAJW,CAArB;AAQA;;;;AAGA,cAAKC,aAAL,GAAqB,MAAKH,YAAL,CAAkBN,IAAlB,CAAuB;AAAQ;;;;AAIpD,kBAAAQ,CAAC;AAAA,iBAAI,CAACA,CAAL;AAAA,SAJ2C,CAAvB,EAIV;AAAK;;;AAGhB,oBAAM,CAAG,CAHE,CAJU,CAArB;AAQA;;;;AAGA,cAAKE,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;;;;;;AAKA,cAAKC,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;;AACA,YAAI,MAAK1D,SAAT,EAAoB;AAChB;AACA;AACA,gBAAKA,SAAL,CAAe2D,aAAf;AACH;;AACD,cAAKC,sBAAL,GAA8BzC,qBAA9B;AACA,cAAK0C,eAAL,GAAuB,MAAKD,sBAAL,EAAvB;AACA,cAAK1C,QAAL,GAAgB4C,QAAQ,CAAC5C,QAAD,CAAR,IAAsB,CAAtC,CApLyN,CAqLzN;;AACA,cAAK6C,EAAL,GAAU,MAAKA,EAAf;;AACA,YAAI1C,QAAJ,EAAc;AACV,cAAIA,QAAQ,CAAC2C,sBAAT,IAAmC,IAAvC,EAA6C;AACzC,kBAAKA,sBAAL,GAA8B3C,QAAQ,CAAC2C,sBAAvC;AACH;;AACD,cAAI3C,QAAQ,CAAC4C,yBAAT,IAAsC,IAA1C,EAAgD;AAC5C,kBAAKA,yBAAL,GAAiC5C,QAAQ,CAAC4C,yBAA1C;AACH;AACJ;;AA9LwN;AA+L5N;AACD;;;;;;;;;AAyHA;;;mCAGW;AAAA;;AACP,eAAKC,eAAL,GAAuB,IAAI,uEAAJ,CAAmB,KAAK1G,QAAxB,CAAvB;AACA,eAAK2G,YAAL,CAAkBrH,IAAlB,GAFO,CAGP;AACA;AACA;;AACA,eAAKD,yBAAL,CACKkG,IADL,CACU,8EADV,EACkC,kEAAU,KAAKjB,QAAf,CADlC,EAEKsC,SAFL;AAEgB;;;AAGhB,sBAAM;AACF,gBAAI,MAAI,CAACC,SAAT,EAAoB;AAChB,oBAAI,CAAC7C,UAAL,GAAkB,CAAlB;;AACA,oBAAI,CAAC6B,YAAL,CAAkBiB,IAAlB,CAAuB,IAAvB;AACH,aAHD,MAIK;AACD,oBAAI,CAACjB,YAAL,CAAkBiB,IAAlB,CAAuB,KAAvB;;AACA,oBAAI,CAACC,UAAL,CAAgBC,OAAhB,GAA0B,CAA1B;;AACA,oBAAI,CAAC3D,kBAAL,CAAwB4D,YAAxB;AACH;AACJ,WAfD;;AAgBA,eAAK7D,cAAL,CAAoB8D,MAApB,GACK3B,IADL,CACU,kEAAU,KAAKjB,QAAf,CADV,EAEKsC,SAFL;AAEgB;;;AAGhB,sBAAM;AACF,gBAAI,MAAI,CAAC9C,UAAT,EAAqB;AACjB,oBAAI,CAACqD,YAAL,GAAoB,MAAI,CAACC,OAAL,CAAaC,aAAb,CAA2BC,qBAA3B,EAApB;;AACA,oBAAI,CAACjE,kBAAL,CAAwB4D,YAAxB;AACH;AACJ,WAVD;AAWH;AACD;;;;;;6CAGqB;AAAA;;AACjB,eAAKM,eAAL;;AACA,eAAKb,eAAL,CAAqBc,OAArB,CAA6BjC,IAA7B,CAAkC,kEAAU,KAAKjB,QAAf,CAAlC,EAA4DsC,SAA5D;AAAuE;;;;AAIvE,oBAAAa,KAAK,EAAI;AACLA,iBAAK,CAACC,KAAN,CAAYC,OAAZ;AAAqB;;;;AAIrB,sBAAAlC,MAAM;AAAA,qBAAIA,MAAM,CAACmC,MAAP,EAAJ;AAAA,aAJN;AAKAH,iBAAK,CAACI,OAAN,CAAcF,OAAd;AAAuB;;;;AAIvB,sBAAAlC,MAAM;AAAA,qBAAIA,MAAM,CAACqC,QAAP,EAAJ;AAAA,aAJN;AAKH,WAfD;;AAgBA,eAAKzC,OAAL,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,kEAAU,IAAV,CAA1B,EAA2C,kEAAU,KAAKjB,QAAf,CAA3C,EAAqEsC,SAArE;AAAgF;;;AAGhF,sBAAM;AACF,kBAAI,CAACmB,aAAL;;AACA,kBAAI,CAACC,oBAAL;AACH,WAND;AAOH;AACD;;;;;;oCAGY;AACR,cAAI,KAAKxF,SAAT,EAAoB;AAChB,iBAAKyF,gBAAL;AACH;AACJ;AACD;;;;;;;oCAIY3C,O,EAAS;AACjB;AACA;AACA,cAAIA,OAAO,CAAC,UAAD,CAAX,EAAyB;AACrB,iBAAKqB,YAAL,CAAkBrH,IAAlB;AACH;;AACD,cAAIgG,OAAO,CAAC,2BAAD,CAAP,IAAwC,KAAK4C,WAAjD,EAA8D;AAC1D,iBAAKA,WAAL,CAAiBC,aAAjB,CAA+B,KAAKC,0BAApC;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAK9D,QAAL,CAAchF,IAAd;;AACA,eAAKgF,QAAL,CAAc+D,QAAd;;AACA,eAAK1B,YAAL,CAAkB0B,QAAlB;AACH;AACD;;;;;;;iCAIS;AACL,eAAKxB,SAAL,GAAiB,KAAKyB,KAAL,EAAjB,GAAgC,KAAKC,IAAL,EAAhC;AACH;AACD;;;;;;;+BAIO;AAAA;;AACH,cAAI,KAAKC,QAAL,IAAiB,CAAC,KAAKnD,OAAvB,IAAkC,CAAC,KAAKA,OAAL,CAAaoD,MAAhD,IAA0D,KAAK3E,UAAnE,EAA+E;AAC3E;AACH;;AACD,eAAKqD,YAAL,GAAoB,KAAKC,OAAL,CAAaC,aAAb,CAA2BC,qBAA3B,EAApB,CAJG,CAKH;AACA;;AACA,eAAKxH,gBAAL,GAAwBwG,QAAQ,CAACoC,gBAAgB,CAAC,KAAKtB,OAAL,CAAaC,aAAd,CAAhB,CAA6CsB,QAA7C,IAAyD,GAA1D,CAAhC;AACA,eAAK7E,UAAL,GAAkB,IAAlB;;AACA,eAAKoE,WAAL,CAAiBU,yBAAjB,CAA2C,IAA3C;;AACA,eAAKC,yBAAL;;AACA,eAAKC,uBAAL;;AACA,eAAKzF,kBAAL,CAAwB4D,YAAxB,GAZG,CAaH;;;AACA,eAAK3D,OAAL,CAAaqC,QAAb,CAAsBC,YAAtB,GAAqCL,IAArC,CAA0C,6DAAK,CAAL,CAA1C,EAAmDqB,SAAnD;AAA8D;;;AAG9D,sBAAM;AACF,gBAAI,MAAI,CAAC9G,gBAAL,IAAyB,MAAI,CAACiH,UAAL,CAAgBgC,UAAzC,IACA,MAAI,CAAChC,UAAL,CAAgBgC,UAAhB,CAA2BC,cAD/B,EAC+C;AAC3C,oBAAI,CAACjC,UAAL,CAAgBgC,UAAhB,CAA2BC,cAA3B,CAA0CC,KAA1C,CAAgDN,QAAhD,aAA8D,MAAI,CAAC7I,gBAAnE;AACH;AACJ,WARD;AASH;AACD;;;;;;;gCAIQ;AACJ,cAAI,KAAKgE,UAAT,EAAqB;AACjB,iBAAKA,UAAL,GAAkB,KAAlB;;AACA,iBAAKoE,WAAL,CAAiBU,yBAAjB,CAA2C,KAAKM,MAAL,KAAgB,KAAhB,GAAwB,KAAnE;;AACA,iBAAK7F,kBAAL,CAAwB4D,YAAxB;;AACA,iBAAKzC,UAAL;AACH;AACJ;AACD;;;;;;;;;;mCAOWtC,K,EAAO;AACd,cAAI,KAAKmD,OAAT,EAAkB;AACd,iBAAK8D,oBAAL,CAA0BjH,KAA1B;AACH;AACJ;AACD;;;;;;;;;;;yCAQiBkH,E,EAAI;AACjB,eAAK7E,SAAL,GAAiB6E,EAAjB;AACH;AACD;;;;;;;;;;;0CAQkBA,E,EAAI;AAClB,eAAK5E,UAAL,GAAkB4E,EAAlB;AACH;AACD;;;;;;;;;;yCAOiBC,U,EAAY;AACzB,eAAKb,QAAL,GAAgBa,UAAhB;;AACA,eAAKhG,kBAAL,CAAwB4D,YAAxB;;AACA,eAAKN,YAAL,CAAkBrH,IAAlB;AACH;AACD;;;;;;;;AAqCA;;;;iCAIS;AACL,iBAAO,KAAKkE,IAAL,GAAY,KAAKA,IAAL,CAAUtB,KAAV,KAAoB,KAAhC,GAAwC,KAA/C;AACH;AACD;;;;;;;;uCAKeuF,K,EAAO;AAClB,cAAI,CAAC,KAAKe,QAAV,EAAoB;AAChB,iBAAK3B,SAAL,GAAiB,KAAKyC,kBAAL,CAAwB7B,KAAxB,CAAjB,GAAkD,KAAK8B,oBAAL,CAA0B9B,KAA1B,CAAlD;AACH;AACJ;AACD;;;;;;;;;6CAMqBA,K,EAAO;AACxB;AACA,cAAM+B,OAAO,GAAG/B,KAAK,CAAC+B,OAAtB;AACA;;AACA,cAAMC,UAAU,GAAGD,OAAO,KAAK,gEAAZ,IAA0BA,OAAO,KAAK,8DAAtC,IACfA,OAAO,KAAK,gEADG,IACWA,OAAO,KAAK,iEAD1C;AAEA;;AACA,cAAME,SAAS,GAAGF,OAAO,KAAK,2DAAZ,IAAqBA,OAAO,KAAK,2DAAnD;AACA;;AACA,cAAMG,OAAO,GAAG,KAAKzB,WAArB,CATwB,CAUxB;;AACA,cAAI,CAACyB,OAAO,CAACC,QAAR,EAAD,IAAwBF,SAAS,IAAI,CAAC,6EAAejC,KAAf,CAAtC,IACC,CAAC,KAAKzH,QAAL,IAAiByH,KAAK,CAACoC,MAAxB,KAAmCJ,UADxC,EACqD;AACjDhC,iBAAK,CAACqC,cAAN,GADiD,CACzB;;AACxB,iBAAKvB,IAAL;AACH,WAJD,MAKK,IAAI,CAAC,KAAKvI,QAAV,EAAoB;AACrB;AACA,gBAAM+J,wBAAwB,GAAG,KAAKC,QAAtC;;AACA,gBAAIR,OAAO,KAAK,0DAAZ,IAAoBA,OAAO,KAAK,yDAApC,EAAyC;AACrCA,qBAAO,KAAK,0DAAZ,GAAmBG,OAAO,CAACM,kBAAR,EAAnB,GAAkDN,OAAO,CAACO,iBAAR,EAAlD;AACAzC,mBAAK,CAACqC,cAAN;AACH,aAHD,MAIK;AACDH,qBAAO,CAACQ,SAAR,CAAkB1C,KAAlB;AACH;AACD;;;AACA,gBAAM2C,cAAc,GAAG,KAAKJ,QAA5B,CAXqB,CAYrB;;AACA,gBAAII,cAAc,IAAIL,wBAAwB,KAAKK,cAAnD,EAAmE;AAC/D;AACA;AACA,mBAAKxG,cAAL,CAAoByG,QAApB;AAA+B;AAAkBD,4BAApB,CAAsCE,SAAnE,EAA8E,KAA9E;AACH;AACJ;AACJ;AACD;;;;;;;;;2CAMmB7C,K,EAAO;AACtB;AACA,cAAMkC,OAAO,GAAG,KAAKzB,WAArB;AACA;;AACA,cAAMsB,OAAO,GAAG/B,KAAK,CAAC+B,OAAtB;AACA;;AACA,cAAMC,UAAU,GAAGD,OAAO,KAAK,gEAAZ,IAA0BA,OAAO,KAAK,8DAAzD;AACA;;AACA,cAAMI,QAAQ,GAAGD,OAAO,CAACC,QAAR,EAAjB;;AACA,cAAIJ,OAAO,KAAK,0DAAZ,IAAoBA,OAAO,KAAK,yDAApC,EAAyC;AACrC/B,iBAAK,CAACqC,cAAN;AACAN,mBAAO,KAAK,0DAAZ,GAAmBG,OAAO,CAACM,kBAAR,EAAnB,GAAkDN,OAAO,CAACO,iBAAR,EAAlD;AACH,WAHD,MAIK,IAAIT,UAAU,IAAIhC,KAAK,CAACoC,MAAxB,EAAgC;AACjC;AACApC,iBAAK,CAACqC,cAAN;AACA,iBAAKxB,KAAL,GAHiC,CAIjC;AACA;AACH,WANI,MAOA,IAAI,CAACsB,QAAD,KAAcJ,OAAO,KAAK,2DAAZ,IAAqBA,OAAO,KAAK,2DAA/C,KAAyDG,OAAO,CAACY,UAAjE,IACL,CAAC,6EAAe9C,KAAf,CADA,EACuB;AACxBA,iBAAK,CAACqC,cAAN;;AACAH,mBAAO,CAACY,UAAR,CAAmBC,qBAAnB;AACH,WAJI,MAKA,IAAI,CAACZ,QAAD,IAAa,KAAK3F,SAAlB,IAA+BuF,OAAO,KAAK,uDAA3C,IAAgD/B,KAAK,CAACgD,OAA1D,EAAmE;AACpEhD,iBAAK,CAACqC,cAAN;AACA;;AACA,gBAAMY,oBAAoB,GAAG,KAAKrF,OAAL,CAAasF,IAAb;AAAmB;;;;AAIhD,sBAAAC,GAAG;AAAA,qBAAI,CAACA,GAAG,CAACpC,QAAL,IAAiB,CAACoC,GAAG,CAACZ,QAA1B;AAAA,aAJ0B,CAA7B;AAKA,iBAAK3E,OAAL,CAAasC,OAAb;AAAsB;;;;AAItB,sBAAAlC,MAAM,EAAI;AACN,kBAAI,CAACA,MAAM,CAAC+C,QAAZ,EAAsB;AAClBkC,oCAAoB,GAAGjF,MAAM,CAACmC,MAAP,EAAH,GAAqBnC,MAAM,CAACqC,QAAP,EAAzC;AACH;AACJ,aARD;AASH,WAjBI,MAkBA;AACD;AACA,gBAAM+C,sBAAsB,GAAGlB,OAAO,CAACmB,eAAvC;AACAnB,mBAAO,CAACQ,SAAR,CAAkB1C,KAAlB;;AACA,gBAAI,KAAKxD,SAAL,IAAkBwF,UAAlB,IAAgChC,KAAK,CAACsD,QAAtC,IAAkDpB,OAAO,CAACY,UAA1D,IACAZ,OAAO,CAACmB,eAAR,KAA4BD,sBADhC,EACwD;AACpDlB,qBAAO,CAACY,UAAR,CAAmBC,qBAAnB;AACH;AACJ;AACJ;AACD;;;;;;mCAGW;AACP,cAAI,CAAC,KAAKhC,QAAV,EAAoB;AAChB,iBAAKvD,QAAL,GAAgB,IAAhB;AACA,iBAAK0B,YAAL,CAAkBrH,IAAlB;AACH;AACJ;AACD;;;;;;;;kCAKU;AACN,eAAK2F,QAAL,GAAgB,KAAhB;;AACA,cAAI,CAAC,KAAKuD,QAAN,IAAkB,CAAC,KAAK3B,SAA5B,EAAuC;AACnC,iBAAKrC,UAAL;;AACA,iBAAKnB,kBAAL,CAAwB4D,YAAxB;;AACA,iBAAKN,YAAL,CAAkBrH,IAAlB;AACH;AACJ;AACD;;;;;;;sCAIc;AAAA;;AACV,eAAKyH,UAAL,CAAgBiE,cAAhB,CAA+BzF,IAA/B,CAAoC,6DAAK,CAAL,CAApC,EAA6CqB,SAA7C;AAAwD;;;AAGxD,sBAAM;AACF,kBAAI,CAACvD,kBAAL,CAAwB4H,aAAxB;;AACA,kBAAI,CAACC,wBAAL;;AACA,kBAAI,CAACC,KAAL,CAAW9D,aAAX,CAAyB+D,SAAzB,GAAqC,MAAI,CAACpH,UAA1C;AACH,WAPD;AAQH;AACD;;;;;;;yCAIiB;AACb,iBAAO,KAAKP,gBAAL,iBAA+B,KAAKA,gBAAL,CAAsB4H,KAArD,IAA+D,EAAtE;AACH;AACD;;;;;;;;AAOA;;;;+CAIuB;AAAA;;AACnB;AACA;AACAC,iBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,sBAAM;AACF,kBAAI,CAACrC,oBAAL,CAA0B,MAAI,CAAC3G,SAAL,GAAiB,MAAI,CAACA,SAAL,CAAeN,KAAhC,GAAwC,MAAI,CAACuJ,MAAvE;;AACA,kBAAI,CAAC9E,YAAL,CAAkBrH,IAAlB;AACH,WAND;AAOH;AACD;;;;;;;;;;6CAOqB4C,K,EAAO;AAAA;;AACxB,cAAI,KAAKlC,QAAL,IAAiBkC,KAArB,EAA4B;AACxB,gBAAI,CAACwJ,KAAK,CAACC,OAAN,CAAczJ,KAAd,CAAL,EAA2B;AACvB,oBAAMtB,8BAA8B,EAApC;AACH;;AACD,iBAAK8F,eAAL,CAAqBkF,KAArB;;AACA1J,iBAAK,CAACyF,OAAN;AAAe;;;;AAIf,sBAACkE,YAAD;AAAA,qBAAkB,MAAI,CAACC,YAAL,CAAkBD,YAAlB,CAAlB;AAAA,aAJA;;AAKA,iBAAKE,WAAL;AACH,WAXD,MAYK;AACD,iBAAKrF,eAAL,CAAqBkF,KAArB;AACA;;;AACA,gBAAMI,mBAAmB,GAAG,KAAKF,YAAL,CAAkB5J,KAAlB,CAA5B,CAHC,CAID;AACA;;;AACA,gBAAI8J,mBAAJ,EAAyB;AACrB,mBAAK9D,WAAL,CAAiB+D,aAAjB,CAA+BD,mBAA/B;AACH,aAFD,MAGK,IAAI,CAAC,KAAKnF,SAAV,EAAqB;AACtB;AACA;AACA,mBAAKqB,WAAL,CAAiB+D,aAAjB,CAA+B,CAAC,CAAhC;AACH;AACJ;;AACD,eAAK5I,kBAAL,CAAwB4D,YAAxB;AACH;AACD;;;;;;;;;qCAMa/E,K,EAAO;AAAA;;AAChB;AACA,cAAM8J,mBAAmB,GAAG,KAAK3G,OAAL,CAAa6G,IAAb;AAAmB;;;;AAI/C,oBAACzG,MAAD,EAAY;AACR,gBAAI;AACA;AACA,qBAAOA,MAAM,CAACvD,KAAP,IAAgB,IAAhB,IAAwB,MAAI,CAACgC,YAAL,CAAkBuB,MAAM,CAACvD,KAAzB,EAAgCA,KAAhC,CAA/B;AACH,aAHD,CAIA,OAAOiK,KAAP,EAAc;AACV,kBAAI,iEAAJ,EAAiB;AACb;AACAC,uBAAO,CAACC,IAAR,CAAaF,KAAb;AACH;;AACD,qBAAO,KAAP;AACH;AACJ,WAhB2B,CAA5B;;AAiBA,cAAIH,mBAAJ,EAAyB;AACrB,iBAAKtF,eAAL,CAAqBkB,MAArB,CAA4BoE,mBAA5B;AACH;;AACD,iBAAOA,mBAAP;AACH;AACD;;;;;;;;0CAKkB;AAAA;;AACd,eAAK9D,WAAL,GAAmB,IAAI,4EAAJ,CAA+B,KAAK7C,OAApC,EACd8C,aADc,CACA,KAAKC,0BADL,EAEdkE,uBAFc,GAGd1D,yBAHc,CAGY,KAAKM,MAAL,KAAgB,KAAhB,GAAwB,KAHpC,EAIdqD,uBAJc,CAIU,CAAC,UAAD,CAJV,CAAnB;;AAKA,eAAKrE,WAAL,CAAiBsE,MAAjB,CAAwBjH,IAAxB,CAA6B,kEAAU,KAAKjB,QAAf,CAA7B,EAAuDsC,SAAvD;AAAkE;;;AAGlE,sBAAM;AACF;AACA;AACA,gBAAI,CAAC,MAAI,CAAC5G,QAAN,IAAkB,MAAI,CAACkI,WAAL,CAAiBqC,UAAvC,EAAmD;AAC/C,oBAAI,CAACrC,WAAL,CAAiBqC,UAAjB,CAA4BC,qBAA5B;AACH,aALC,CAMF;AACA;;;AACA,kBAAI,CAACiC,KAAL;;AACA,kBAAI,CAACnE,KAAL;AACH,WAbD;;AAcA,eAAKJ,WAAL,CAAiBhB,MAAjB,CAAwB3B,IAAxB,CAA6B,kEAAU,KAAKjB,QAAf,CAA7B,EAAuDsC,SAAvD;AAAkE;;;AAGlE,sBAAM;AACF,gBAAI,MAAI,CAAC9C,UAAL,IAAmB,MAAI,CAACqH,KAA5B,EAAmC;AAC/B,oBAAI,CAACuB,2BAAL;AACH,aAFD,MAGK,IAAI,CAAC,MAAI,CAAC5I,UAAN,IAAoB,CAAC,MAAI,CAAC9D,QAA1B,IAAsC,MAAI,CAACkI,WAAL,CAAiBqC,UAA3D,EAAuE;AACxE,oBAAI,CAACrC,WAAL,CAAiBqC,UAAjB,CAA4BC,qBAA5B;AACH;AACJ,WAVD;AAWH;AACD;;;;;;;;wCAKgB;AAAA;;AACZ;AACA,cAAMmC,kBAAkB,GAAG,oDAAM,KAAKtH,OAAL,CAAaC,OAAnB,EAA4B,KAAKhB,QAAjC,CAA3B;AACA,eAAKc,sBAAL,CAA4BG,IAA5B,CAAiC,kEAAUoH,kBAAV,CAAjC,EAAgE/F,SAAhE;AAA2E;;;;AAI3E,oBAAAa,KAAK,EAAI;AACL,mBAAI,CAACmF,SAAL,CAAenF,KAAK,CAACxF,MAArB,EAA6BwF,KAAK,CAACoF,WAAnC;;AACA,gBAAIpF,KAAK,CAACoF,WAAN,IAAqB,CAAC,OAAI,CAAC7M,QAA3B,IAAuC,OAAI,CAAC8D,UAAhD,EAA4D;AACxD,qBAAI,CAACwE,KAAL;;AACA,qBAAI,CAACmE,KAAL;AACH;AACJ,WAVD,EAHY,CAcZ;AACA;;AACA,+FAAS,KAAKpH,OAAL,CAAaG,GAAb;AAAkB;;;;AAI3B,oBAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACqH,aAAX;AAAA,WAJG,CAAT,GAKKvH,IALL,CAKU,kEAAUoH,kBAAV,CALV,EAMK/F,SANL;AAMgB;;;AAGhB,sBAAM;AACF,mBAAI,CAACvD,kBAAL,CAAwB4D,YAAxB;;AACA,mBAAI,CAACN,YAAL,CAAkBrH,IAAlB;AACH,WAZD;;AAaA,eAAKyN,aAAL;AACH;AACD;;;;;;;;;;kCAOUtH,M,EAAQoH,W,EAAa;AAC3B;AACA,cAAMG,WAAW,GAAG,KAAKtG,eAAL,CAAqBuG,UAArB,CAAgCxH,MAAhC,CAApB;;AACA,cAAIA,MAAM,CAACvD,KAAP,IAAgB,IAAhB,IAAwB,CAAC,KAAK+B,SAAlC,EAA6C;AACzCwB,kBAAM,CAACqC,QAAP;;AACA,iBAAKpB,eAAL,CAAqBkF,KAArB;;AACA,iBAAKsB,iBAAL,CAAuBzH,MAAM,CAACvD,KAA9B;AACH,WAJD,MAKK;AACD,gBAAI8K,WAAW,KAAKvH,MAAM,CAACuE,QAA3B,EAAqC;AACjCvE,oBAAM,CAACuE,QAAP,GAAkB,KAAKtD,eAAL,CAAqBkB,MAArB,CAA4BnC,MAA5B,CAAlB,GACI,KAAKiB,eAAL,CAAqBoB,QAArB,CAA8BrC,MAA9B,CADJ;AAEH;;AACD,gBAAIoH,WAAJ,EAAiB;AACb,mBAAK3E,WAAL,CAAiB+D,aAAjB,CAA+BxG,MAA/B;AACH;;AACD,gBAAI,KAAKzF,QAAT,EAAmB;AACf,mBAAK+L,WAAL;;AACA,kBAAIc,WAAJ,EAAiB;AACb;AACA;AACA;AACA;AACA,qBAAKJ,KAAL;AACH;AACJ;AACJ;;AACD,cAAIO,WAAW,KAAK,KAAKtG,eAAL,CAAqBuG,UAArB,CAAgCxH,MAAhC,CAApB,EAA6D;AACzD,iBAAKyH,iBAAL;AACH;;AACD,eAAKvG,YAAL,CAAkBrH,IAAlB;AACH;AACD;;;;;;;;sCAKc;AAAA;;AACV,cAAI,KAAKU,QAAT,EAAmB;AACf;AACA,gBAAMqF,OAAO,GAAG,KAAKA,OAAL,CAAa8H,OAAb,EAAhB;;AACA,iBAAKzG,eAAL,CAAqB0G,IAArB;AAA2B;;;;;AAK3B,sBAACC,CAAD,EAAIC,CAAJ,EAAU;AACN,qBAAO,OAAI,CAACC,cAAL,GAAsB,OAAI,CAACA,cAAL,CAAoBF,CAApB,EAAuBC,CAAvB,EAA0BjI,OAA1B,CAAtB,GACHA,OAAO,CAACmI,OAAR,CAAgBH,CAAhB,IAAqBhI,OAAO,CAACmI,OAAR,CAAgBF,CAAhB,CADzB;AAEH,aARD;;AASA,iBAAK3G,YAAL,CAAkBrH,IAAlB;AACH;AACJ;AACD;;;;;;;;;0CAMkBmO,a,EAAe;AAC7B;AACA,cAAIC,WAAW,GAAG,IAAlB;;AACA,cAAI,KAAK1N,QAAT,EAAmB;AACf0N,uBAAW;AAAK;AAAkB,iBAAK1D,QAAzB,CAAqCxE,GAArC;AAA0C;;;;AAIxD,sBAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACvD,KAAX;AAAA,aAJQ,CAAd;AAKH,WAND,MAOK;AACDwL,uBAAW,GAAG,KAAK1D,QAAL;AAAkB;AAAkB,iBAAKA,QAAzB,CAAqC9H,KAArD,GAA6DuL,aAA3E;AACH;;AACD,eAAKhC,MAAL,GAAciC,WAAd;AACA,eAAKxH,WAAL,CAAiBY,IAAjB,CAAsB4G,WAAtB;;AACA,eAAKnJ,SAAL,CAAemJ,WAAf;;AACA,eAAKzH,eAAL,CAAqBa,IAArB,CAA0B,IAAI9E,eAAJ,CAAoB,IAApB,EAA0B0L,WAA1B,CAA1B;;AACA,eAAKrK,kBAAL,CAAwB4D,YAAxB;AACH;AACD;;;;;;;;wCAKgB;AACZ,eAAKxC,UAAL,GAAkB,KAAKY,OAAL,CAAaG,GAAb;AAAkB;;;;AAIpC,oBAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACc,EAAX;AAAA,WAJY,EAIIoH,IAJJ,CAIS,GAJT,CAAlB;AAKH;AACD;;;;;;;;;kDAM0B;AACtB,cAAI,KAAKzF,WAAT,EAAsB;AAClB,gBAAI,KAAK0F,KAAT,EAAgB;AACZ,mBAAK1F,WAAL,CAAiB+B,kBAAjB;AACH,aAFD,MAGK;AACD,mBAAK/B,WAAL,CAAiB+D,aAAjB,CAA+B,KAAKvF,eAAL,CAAqBsD,QAArB,CAA8B,CAA9B,CAA/B;AACH;AACJ;AACJ;AACD;;;;;;;;sDAK8B;AAC1B;AACA,cAAM6D,iBAAiB,GAAG,KAAK3F,WAAL,CAAiB4C,eAAjB,IAAoC,CAA9D;AACA;;AACA,cAAMgD,UAAU,GAAG,6FAA8BD,iBAA9B,EAAiD,KAAKxI,OAAtD,EAA+D,KAAK0I,YAApE,CAAnB;AACA,eAAK5C,KAAL,CAAW9D,aAAX,CAAyB+D,SAAzB,GAAqC,wFAAyByC,iBAAiB,GAAGC,UAA7C,EAAyD,KAAKE,cAAL,EAAzD,EAAgF,KAAK7C,KAAL,CAAW9D,aAAX,CAAyB+D,SAAzG,EAAoHrK,uBAApH,CAArC;AACH;AACD;;;;;;;;8BAKMsE,O,EAAS;AACX,eAAKjD,WAAL,CAAiBiF,aAAjB,CAA+BoF,KAA/B,CAAqCpH,OAArC;AACH;AACD;;;;;;;;;wCAMgBI,M,EAAQ;AACpB,iBAAO,KAAKJ,OAAL,CAAa4I,MAAb;AAAqB;;;;;;AAM5B,oBAACC,MAAD,EAASC,OAAT,EAAkBC,KAAlB,EAA4B;AACxB,gBAAIF,MAAM,KAAKrP,SAAf,EAA0B;AACtB,qBAAOqP,MAAP;AACH;;AACD,mBAAOzI,MAAM,KAAK0I,OAAX,GAAqBC,KAArB,GAA6BvP,SAApC;AACH,WAXM,EAWHA,SAXG,CAAP;AAYH;AACD;;;;;;;;oDAK4B;AACxB;AACA,cAAMwP,UAAU,GAAG,KAAKL,cAAL,EAAnB;AACA;;;AACA,cAAMM,KAAK,GAAG,KAAKC,aAAL,EAAd;AACA;;;AACA,cAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASJ,KAAK,GAAGD,UAAjB,EAA6BtN,uBAA7B,CAApB;AACA;;AACA,cAAM4N,qBAAqB,GAAGL,KAAK,GAAGD,UAAtC,CARwB,CASxB;;AACA;;AACA,cAAMO,SAAS,GAAGD,qBAAqB,GAAGH,WAA1C,CAXwB,CAYxB;;AACA;;AACA,cAAIK,oBAAoB,GAAG,KAAKjB,KAAL,GAAa,CAAb;AAAkB;AAAkB,eAAKkB,eAAL,CAAqB,KAAKpI,eAAL,CAAqBsD,QAArB,CAA8B,CAA9B,CAArB,CAA/D;AACA6E,8BAAoB,IAAI,6FAA8BA,oBAA9B,EAAoD,KAAKxJ,OAAzD,EAAkE,KAAK0I,YAAvE,CAAxB,CAfwB,CAgBxB;AACA;;AACA;;AACA,cAAMgB,YAAY,GAAGP,WAAW,GAAG,CAAnC;AACA,eAAKxK,UAAL,GAAkB,KAAKgL,uBAAL,CAA6BH,oBAA7B,EAAmDE,YAAnD,EAAiEH,SAAjE,CAAlB;AACA,eAAKlK,QAAL,GAAgB,KAAKuK,wBAAL,CAA8BJ,oBAA9B,EAAoDE,YAApD,EAAkEH,SAAlE,CAAhB;;AACA,eAAKM,2BAAL,CAAiCN,SAAjC;AACH;AACD;;;;;;;;;;;;;;gDAWwBO,a,EAAeJ,Y,EAAcH,S,EAAW;AAC5D;AACA,cAAMP,UAAU,GAAG,KAAKL,cAAL,EAAnB;AACA;;;AACA,cAAMoB,yBAAyB,GAAGf,UAAU,GAAGc,aAA/C;AACA;;AACA,cAAME,gBAAgB,GAAGhB,UAAU,GAAG,CAAtC,CAN4D,CAO5D;AACA;AACA;AACA;;AACA;;AACA,cAAMiB,qBAAqB,GAAGF,yBAAyB,GAAGL,YAA5B,GAA2CM,gBAAzE;AACA,iBAAOZ,IAAI,CAACC,GAAL,CAASD,IAAI,CAACc,GAAL,CAAS,CAAT,EAAYD,qBAAZ,CAAT,EAA6CV,SAA7C,CAAP;AACH;AACD;;;;;;;wCAIgB;AACZ;AACA;AACA,iBAAO,KAAKY,cAAL,GAAsB,IAAtB,GAA6B,KAAKrK,SAAL,IAAkB,KAAK5G,WAA3D;AACH;AACD;;;;;;;6CAIqB;AACjB,cAAI,KAAKiR,cAAT,EAAyB;AACrB,mBAAO,KAAKA,cAAZ;AACH,WAHgB,CAIjB;AACA;;;AACA,cAAI,CAAC,KAAK/L,gBAAN,IAA0B,CAAC,KAAKA,gBAAL,CAAsBgM,iBAAtB,EAA3B,IACA,KAAKC,aAAL,EADJ,EAC0B;AACtB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAKjM,gBAAL,CAAsBkM,QAAtB,IAAkC,IAAzC;AACH;AACD;;;;;;;mDAI2B;AACvB,cAAI,KAAK9I,SAAL,IAAkB,KAAKqB,WAAvB,IAAsC,KAAKA,WAAL,CAAiBqC,UAA3D,EAAuE;AACnE,mBAAO,KAAKrC,WAAL,CAAiBqC,UAAjB,CAA4BhE,EAAnC;AACH;;AACD,iBAAO,IAAP;AACH;AACD;;;;;;;;;;;;mDAS2B;AACvB;AACA,cAAMqJ,WAAW,GAAG,KAAK7I,UAAL,CAAgBgC,UAAhB,CAA2BC,cAA3B,CAA0C1B,qBAA1C,EAApB;AACA;;AACA,cAAMuI,YAAY,GAAG,KAAKzM,cAAL,CAAoB0M,eAApB,EAArB;AACA;;;AACA,cAAMC,KAAK,GAAG,KAAK7G,MAAL,EAAd;AACA;;;AACA,cAAM8G,YAAY,GAAG,KAAKhQ,QAAL,GAAgBmB,+BAA+B,GAAGH,sBAAlD,GACjBA,sBAAsB,GAAG,CAD7B;AAEA;;AACA,cAAIgG,OAAJ,CAXuB,CAYvB;;AACA,cAAI,KAAKhH,QAAT,EAAmB;AACfgH,mBAAO,GAAG7F,+BAAV;AACH,WAFD,MAGK;AACD;AACA,gBAAI6I,QAAQ,GAAG,KAAKtD,eAAL,CAAqBsD,QAArB,CAA8B,CAA9B,KAAoC,KAAK3E,OAAL,CAAa4K,KAAhE;AACAjJ,mBAAO,GAAGgD,QAAQ,IAAIA,QAAQ,CAACkG,KAArB,GAA6BjP,6BAA7B,GAA6DD,sBAAvE;AACH,WApBsB,CAqBvB;;;AACA,cAAI,CAAC+O,KAAL,EAAY;AACR/I,mBAAO,IAAI,CAAC,CAAZ;AACH,WAxBsB,CAyBvB;;AACA;;;AACA,cAAMmJ,YAAY,GAAG,KAAKP,WAAW,CAACQ,IAAZ,GAAmBpJ,OAAnB,IAA8B+I,KAAK,GAAGC,YAAH,GAAkB,CAArD,CAAL,CAArB;AACA;;AACA,cAAMK,aAAa,GAAGT,WAAW,CAACU,KAAZ,GAAoBtJ,OAApB,GAA8B6I,YAAY,CAACU,KAA3C,IACfR,KAAK,GAAG,CAAH,GAAOC,YADG,CAAtB,CA7BuB,CA+BvB;;AACA,cAAIG,YAAY,GAAG,CAAnB,EAAsB;AAClBnJ,mBAAO,IAAImJ,YAAY,GAAG/O,6BAA1B;AACH,WAFD,MAGK,IAAIiP,aAAa,GAAG,CAApB,EAAuB;AACxBrJ,mBAAO,IAAIqJ,aAAa,GAAGjP,6BAA3B;AACH,WArCsB,CAsCvB;AACA;AACA;;;AACA,eAAK2F,UAAL,CAAgBC,OAAhB,GAA0ByH,IAAI,CAAC+B,KAAL,CAAWxJ,OAAX,CAA1B;AACA,eAAKD,UAAL,CAAgBgC,UAAhB,CAA2B0H,cAA3B;AACH;AACD;;;;;;;;;;;;;iDAUyBtB,a,EAAeJ,Y,EAAcH,S,EAAW;AAC7D;AACA,cAAMP,UAAU,GAAG,KAAKL,cAAL,EAAnB;AACA;;;AACA,cAAM0C,sBAAsB,GAAG,CAACrC,UAAU,GAAG,KAAKlH,YAAL,CAAkBwJ,MAAhC,IAA0C,CAAzE;AACA;;AACA,cAAMC,mBAAmB,GAAGnC,IAAI,CAACoC,KAAL,CAAW9P,uBAAuB,GAAGsN,UAArC,CAA5B;AACA;;AACA,cAAIyC,wBAAJ,CAR6D,CAS7D;;AACA,cAAI,KAAK9L,uBAAT,EAAkC;AAC9B,mBAAO,CAAP;AACH;;AACD,cAAI,KAAKhB,UAAL,KAAoB,CAAxB,EAA2B;AACvB8M,oCAAwB,GAAG3B,aAAa,GAAGd,UAA3C;AACH,WAFD,MAGK,IAAI,KAAKrK,UAAL,KAAoB4K,SAAxB,EAAmC;AACpC;AACA,gBAAMmC,mBAAmB,GAAG,KAAKxC,aAAL,KAAuBqC,mBAAnD;AACA;;AACA,gBAAMI,oBAAoB,GAAG7B,aAAa,GAAG4B,mBAA7C,CAJoC,CAKpC;AACA;;AACA;;AACA,gBAAIE,iBAAiB,GAAG5C,UAAU,GAAG,CAAC,KAAKE,aAAL,KAAuBF,UAAvB,GAAoCtN,uBAArC,IAAgEsN,UAArG,CARoC,CASpC;AACA;AACA;AACA;;AACAyC,oCAAwB,GAAGE,oBAAoB,GAAG3C,UAAvB,GAAoC4C,iBAA/D;AACH,WAdI,MAeA;AACD;AACA;AACA;AACAH,oCAAwB,GAAG/B,YAAY,GAAGV,UAAU,GAAG,CAAvD;AACH,WApC4D,CAqC7D;AACA;AACA;;;AACA,iBAAOI,IAAI,CAAC+B,KAAL,CAAWM,wBAAwB,GAAG,CAAC,CAA5B,GAAgCJ,sBAA3C,CAAP;AACH;AACD;;;;;;;;;;;;oDAS4B9B,S,EAAW;AACnC;AACA,cAAMP,UAAU,GAAG,KAAKL,cAAL,EAAnB;AACA;;;AACA,cAAM6B,YAAY,GAAG,KAAKzM,cAAL,CAAoB0M,eAApB,EAArB;AACA;;;AACA,cAAMoB,iBAAiB,GAAG,KAAK/J,YAAL,CAAkBgK,GAAlB,GAAwB/P,6BAAlD;AACA;;AACA,cAAMgQ,oBAAoB,GAAGvB,YAAY,CAACc,MAAb,GAAsB,KAAKxJ,YAAL,CAAkBkK,MAAxC,GAAiDjQ,6BAA9E;AACA;;AACA,cAAMkQ,cAAc,GAAG7C,IAAI,CAAC8C,GAAL,CAAS,KAAK7M,QAAd,CAAvB;AACA;;AACA,cAAM8M,gBAAgB,GAAG/C,IAAI,CAACC,GAAL,CAAS,KAAKH,aAAL,KAAuBF,UAAhC,EAA4CtN,uBAA5C,CAAzB;AACA;;AACA,cAAM0Q,iBAAiB,GAAGD,gBAAgB,GAAGF,cAAnB,GAAoC,KAAKnK,YAAL,CAAkBwJ,MAAhF;;AACA,cAAIc,iBAAiB,GAAGL,oBAAxB,EAA8C;AAC1C,iBAAKM,cAAL,CAAoBD,iBAApB,EAAuCL,oBAAvC;AACH,WAFD,MAGK,IAAIE,cAAc,GAAGJ,iBAArB,EAAwC;AACzC,iBAAKS,gBAAL,CAAsBL,cAAtB,EAAsCJ,iBAAtC,EAAyDtC,SAAzD;AACH,WAFI,MAGA;AACD,iBAAK/O,gBAAL,GAAwB,KAAK+R,uBAAL,EAAxB;AACH;AACJ;AACD;;;;;;;;;;uCAOeH,iB,EAAmBL,oB,EAAsB;AACpD;;AACA;AACA,cAAMS,qBAAqB,GAAGpD,IAAI,CAAC+B,KAAL,CAAWiB,iBAAiB,GAAGL,oBAA/B,CAA9B,CAHoD,CAIpD;AACA;;AACA,eAAKpN,UAAL,IAAmB6N,qBAAnB;AACA,eAAKnN,QAAL,IAAiBmN,qBAAjB;AACA,eAAKhS,gBAAL,GAAwB,KAAK+R,uBAAL,EAAxB,CARoD,CASpD;AACA;AACA;;AACA,cAAI,KAAK5N,UAAL,IAAmB,CAAvB,EAA0B;AACtB,iBAAKA,UAAL,GAAkB,CAAlB;AACA,iBAAKU,QAAL,GAAgB,CAAhB;AACA,iBAAK7E,gBAAL;AACH;AACJ;AACD;;;;;;;;;;;yCAQiByR,c,EAAgBJ,iB,EAAmBtC,S,EAAW;AAC3D;;AACA;AACA,cAAMkD,qBAAqB,GAAGrD,IAAI,CAAC+B,KAAL,CAAWc,cAAc,GAAGJ,iBAA5B,CAA9B,CAH2D,CAI3D;AACA;;AACA,eAAKlN,UAAL,IAAmB8N,qBAAnB;AACA,eAAKpN,QAAL,IAAiBoN,qBAAjB;AACA,eAAKjS,gBAAL,GAAwB,KAAK+R,uBAAL,EAAxB,CAR2D,CAS3D;AACA;AACA;;AACA,cAAI,KAAK5N,UAAL,IAAmB4K,SAAvB,EAAkC;AAC9B,iBAAK5K,UAAL,GAAkB4K,SAAlB;AACA,iBAAKlK,QAAL,GAAgB,CAAhB;AACA,iBAAK7E,gBAAL;AACA;AACH;AACJ;AACD;;;;;;;;kDAK0B;AACtB;AACA,cAAMwO,UAAU,GAAG,KAAKL,cAAL,EAAnB;AACA;;;AACA,cAAM0C,sBAAsB,GAAG,CAACrC,UAAU,GAAG,KAAKlH,YAAL,CAAkBwJ,MAAhC,IAA0C,CAAzE;AACA;;AACA,cAAM9L,OAAO,GAAG4J,IAAI,CAAC8C,GAAL,CAAS,KAAK7M,QAAd,IAA0BgM,sBAA1B,GAAmDrC,UAAU,GAAG,CAAhF;AACA,+BAAcxJ,OAAd;AACH;AACD;;;;;;;;wCAKgB;AACZ,iBAAO,KAAKQ,OAAL,CAAaoD,MAAb,GAAsB,KAAKsF,YAAL,CAAkBtF,MAA/C;AACH;AACD;;;;;;;;yCAKiB;AACb,iBAAO,KAAK3I,gBAAL,GAAwBoB,qBAA/B;AACH;AACD;;;;;;;;;0CAMkB6Q,G,EAAK;AACnB,eAAKC,gBAAL,GAAwBD,GAAG,CAACpE,IAAJ,CAAS,GAAT,CAAxB;AACH;AACD;;;;;;;;2CAKmB;AACf,eAAKlB,KAAL;AACA,eAAKlE,IAAL;AACH;AACD;;;;;;;;4BA5nCc;AACV,iBAAO,KAAKtD,QAAL,IAAiB,KAAKnB,UAA7B;AACH;AACD;;;;;;;4BAIkB;AAAE,iBAAO,KAAKmO,YAAZ;AAA2B;AAC/C;;;;;0BAIgB/P,K,EAAO;AACnB,eAAK+P,YAAL,GAAoB/P,KAApB;AACA,eAAKyE,YAAL,CAAkBrH,IAAlB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKyE,SAAZ;AAAwB;AACzC;;;;;0BAIa7B,K,EAAO;AAChB,eAAK6B,SAAL,GAAiB,oFAAsB7B,KAAtB,CAAjB;AACA,eAAKyE,YAAL,CAAkBrH,IAAlB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAK2E,SAAZ;AAAwB;AACzC;;;;;0BAIa/B,K,EAAO;AAChB,cAAI,KAAKwE,eAAT,EAA0B;AACtB,kBAAMhG,gCAAgC,EAAtC;AACH;;AACD,eAAKuD,SAAL,GAAiB,oFAAsB/B,KAAtB,CAAjB;AACH;AACD;;;;;;;4BAI6B;AAAE,iBAAO,KAAK8C,uBAAZ;AAAsC;AACrE;;;;;0BAI2B9C,K,EAAO;AAC9B,eAAK8C,uBAAL,GAA+B,oFAAsB9C,KAAtB,CAA/B;AACH;AACD;;;;;;;;;4BAMkB;AAAE,iBAAO,KAAKgC,YAAZ;AAA2B;AAC/C;;;;;0BAIgBkF,E,EAAI;AAChB,cAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC1B,kBAAMvI,iCAAiC,EAAvC;AACH;;AACD,eAAKqD,YAAL,GAAoBkF,EAApB;;AACA,cAAI,KAAK1C,eAAT,EAA0B;AACtB;AACA,iBAAKsB,oBAAL;AACH;AACJ;AACD;;;;;;;4BAIY;AAAE,iBAAO,KAAKyD,MAAZ;AAAqB;AACnC;;;;;0BAIUyG,Q,EAAU;AAChB,cAAIA,QAAQ,KAAK,KAAKzG,MAAtB,EAA8B;AAC1B,iBAAK0G,UAAL,CAAgBD,QAAhB;AACA,iBAAKzG,MAAL,GAAcyG,QAAd;AACH;AACJ;AACD;;;;;;;4BAIgC;AAAE,iBAAO,KAAK9J,0BAAZ;AAAyC;AAC3E;;;;;0BAI8BlG,K,EAAO;AACjC,eAAKkG,0BAAL,GAAkC,mFAAqBlG,KAArB,CAAlC;AACH;AACD;;;;;;;4BAIS;AAAE,iBAAO,KAAKkQ,GAAZ;AAAkB;AAC7B;;;;;0BAIOlQ,K,EAAO;AACV,eAAKkQ,GAAL,GAAWlQ,KAAK,IAAI,KAAKmC,IAAzB;AACA,eAAKsC,YAAL,CAAkBrH,IAAlB;AACH;;;4BAkMe;AACZ,iBAAO,KAAKwE,UAAZ;AACH;AACD;;;;;;;4BAIe;AACX,iBAAO,KAAK9D,QAAL,GAAgB,KAAK0G,eAAL,CAAqBsD,QAArC,GAAgD,KAAKtD,eAAL,CAAqBsD,QAArB,CAA8B,CAA9B,CAAvD;AACH;AACD;;;;;;;4BAImB;AACf,cAAI,KAAK4D,KAAT,EAAgB;AACZ,mBAAO,EAAP;AACH;;AACD,cAAI,KAAK3J,SAAT,EAAoB;AAChB;AACA,gBAAMoO,eAAe,GAAG,KAAK3L,eAAL,CAAqBsD,QAArB,CAA8BxE,GAA9B;AAAmC;;;;AAI3D,sBAAAC,MAAM;AAAA,qBAAIA,MAAM,CAAC6E,SAAX;AAAA,aAJkB,CAAxB;;AAKA,gBAAI,KAAKpB,MAAL,EAAJ,EAAmB;AACfmJ,6BAAe,CAACC,OAAhB;AACH,aATe,CAUhB;;;AACA,mBAAOD,eAAe,CAAC1E,IAAhB,CAAqB,IAArB,CAAP;AACH;;AACD,iBAAO,KAAKjH,eAAL,CAAqBsD,QAArB,CAA8B,CAA9B,EAAiCM,SAAxC;AACH;;;4BAsKW;AACR,iBAAO,CAAC,KAAK5D,eAAN,IAAyB,KAAKA,eAAL,CAAqB6L,OAArB,EAAhC;AACH;;;4BAmoBsB;AACnB,iBAAO,KAAKzO,UAAL,IAAmB,CAAC,KAAK8J,KAAhC;AACH;;;;MAx1CmBnL,mB;;AA01CxBU,aAAS,CAACR,IAAV,GAAiB,SAAS6P,iBAAT,CAA2B3P,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAIM,SAAV,EAAqB,gEAAyB,qEAAzB,CAArB,EAAqE,gEAAyB,+DAAzB,CAArE,EAAyH,gEAAyB,oDAAzB,CAAzH,EAAkK,gEAAyB,wEAAzB,CAAlK,EAAsN,gEAAyB,wDAAzB,CAAtN,EAAmQ,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAnQ,EAAuT,gEAAyB,sDAAzB,EAAwC,CAAxC,CAAvT,EAAmW,gEAAyB,kEAAzB,EAAoD,CAApD,CAAnW,EAA2Z,gEAAyB,yEAAzB,EAA8C,CAA9C,CAA3Z,EAA6c,gEAAyB,yDAAzB,EAA2C,EAA3C,CAA7c,EAA6f,gEAAyB,UAAzB,CAA7f,EAAmiB,gEAAyB9B,0BAAzB,CAAniB,EAAylB,gEAAyB,+DAAzB,CAAzlB,EAAyoB,gEAAyBM,iBAAzB,EAA4C,CAA5C,CAAzoB,CAAP;AAAksB,KAAnvB;;AACAwB,aAAS,CAACsP,IAAV,GAAiB,gEAAyB;AAAE1P,UAAI,EAAEI,SAAR;AAAmBH,eAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;AAAgD0P,oBAAc,EAAE,SAASC,wBAAT,CAAkCvU,EAAlC,EAAsCC,GAAtC,EAA2CuU,QAA3C,EAAqD;AAAE,YAAIxU,EAAE,GAAG,CAAT,EAAY;AACrK,uEAAsBwU,QAAtB,EAAgClQ,gBAAhC,EAAkD,IAAlD;;AACA,uEAAsBkQ,QAAtB,EAAgC,gEAAhC,EAA2C,IAA3C;;AACA,uEAAsBA,QAAtB,EAAgC,kEAAhC,EAA6C,IAA7C;AACH;;AAAC,YAAIxU,EAAE,GAAG,CAAT,EAAY;AACV,cAAIyU,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDxU,GAAG,CAACU,aAAJ,GAAoB8T,EAAE,CAAC5C,KAA5E;AACA,uEAAsB4C,EAAE,GAAG,2DAA3B,MAAqDxU,GAAG,CAACgH,OAAJ,GAAcwN,EAAnE;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDxU,GAAG,CAAC0P,YAAJ,GAAmB8E,EAAxE;AACH;AAAE,OATmC;AASjCC,eAAS,EAAE,SAASC,eAAT,CAAyB3U,EAAzB,EAA6BC,GAA7B,EAAkC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC5D,oEAAmBH,GAAnB,EAAwB,IAAxB;;AACA,oEAAmBC,GAAnB,EAAwB,IAAxB;;AACA,oEAAmB,wEAAnB,EAAwC,IAAxC;AACH;;AAAC,YAAIE,EAAE,GAAG,CAAT,EAAY;AACV,cAAIyU,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDxU,GAAG,CAAC+I,OAAJ,GAAcyL,EAAE,CAAC5C,KAAtE;AACA,uEAAsB4C,EAAE,GAAG,2DAA3B,MAAqDxU,GAAG,CAAC8M,KAAJ,GAAY0H,EAAE,CAAC5C,KAApE;AACA,uEAAsB4C,EAAE,GAAG,2DAA3B,MAAqDxU,GAAG,CAAC0I,UAAJ,GAAiB8L,EAAE,CAAC5C,KAAzE;AACH;AAAE,OAlBmC;AAkBjC+C,eAAS,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,CAApB,EAAuB,YAAvB,CAlBsB;AAkBgBC,cAAQ,EAAE,EAlB1B;AAkB8BC,kBAAY,EAAE,SAASC,sBAAT,CAAgC/U,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrI,mEAAkB,SAAlB,EAA6B,SAASgV,oCAAT,CAA8CjU,MAA9C,EAAsD;AAAE,mBAAOd,GAAG,CAACqB,cAAJ,CAAmBP,MAAnB,CAAP;AAAoC,WAAzH,EAA2H,OAA3H,EAAoI,SAASkU,kCAAT,GAA8C;AAAE,mBAAOhV,GAAG,CAACiV,QAAJ,EAAP;AAAwB,WAA5M,EAA8M,MAA9M,EAAsN,SAASC,iCAAT,GAA6C;AAAE,mBAAOlV,GAAG,CAACmV,OAAJ,EAAP;AAAuB,WAA5R;AACH;;AAAC,YAAIpV,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,IAAnB,EAAyBC,GAAG,CAACkI,EAA7B,EAAiC,UAAjC,EAA6ClI,GAAG,CAACqF,QAAjD,EAA2D,YAA3D,EAAyErF,GAAG,CAACqR,aAAJ,EAAzE,EAA8F,iBAA9F,EAAiHrR,GAAG,CAACoV,kBAAJ,EAAjH,EAA2I,eAA3I,EAA4JpV,GAAG,CAACqV,QAAJ,CAAaC,QAAb,EAA5J,EAAqL,eAArL,EAAsMtV,GAAG,CAACmK,QAAJ,CAAamL,QAAb,EAAtM,EAA+N,cAA/N,EAA+OtV,GAAG,CAACuV,UAAnP,EAA+P,WAA/P,EAA4QvV,GAAG,CAACwI,SAAJ,GAAgBxI,GAAG,CAACoG,UAApB,GAAiC,IAA7S,EAAmT,sBAAnT,EAA2UpG,GAAG,CAAC2B,QAA/U,EAAyV,kBAAzV,EAA6W3B,GAAG,CAAC2T,gBAAJ,IAAwB,IAArY,EAA2Y,uBAA3Y,EAAoa3T,GAAG,CAACwV,wBAAJ,EAApa;;AACA,oEAAmB,qBAAnB,EAA0CxV,GAAG,CAACmK,QAA9C,EAAwD,oBAAxD,EAA8EnK,GAAG,CAACuV,UAAlF,EAA8F,qBAA9F,EAAqHvV,GAAG,CAACqV,QAAzH,EAAmI,kBAAnI,EAAuJrV,GAAG,CAACuP,KAA3J;AACH;AAAE,OAvBmC;AAuBjCkG,YAAM,EAAE;AAAEtL,gBAAQ,EAAE,UAAZ;AAAwBuL,qBAAa,EAAE,eAAvC;AAAwDrQ,gBAAQ,EAAE,UAAlE;AAA8EyB,iBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAzF;AAAsHoB,UAAE,EAAE,IAA1H;AAAgIC,8BAAsB,EAAE,wBAAxJ;AAAkLC,iCAAyB,EAAE,2BAA7M;AAA0OlI,mBAAW,EAAE,aAAvP;AAAsQmV,gBAAQ,EAAE,UAAhR;AAA4R1T,gBAAQ,EAAE,UAAtS;AAAkTgU,mBAAW,EAAE,aAA/T;AAA8U9R,aAAK,EAAE,OAArV;AAA8VnC,kBAAU,EAAE,YAA1W;AAAwXyP,sBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAAxY;AAA+ayE,yBAAiB,EAAE,mBAAlc;AAAud1G,sBAAc,EAAE;AAAve,OAvByB;AAuBke2G,aAAO,EAAE;AAAErO,oBAAY,EAAE,cAAhB;AAAgCC,qBAAa,EAAE,QAA/C;AAAyDE,qBAAa,EAAE,QAAxE;AAAkFC,uBAAe,EAAE,iBAAnG;AAAsHC,mBAAW,EAAE;AAAnI,OAvB3e;AAuB+nBiO,cAAQ,EAAE,CAAC,WAAD,CAvBzoB;AAuBwpBC,cAAQ,EAAE,CAAC,iEAA0B,CAC3tB;AAAEvS,eAAO,EAAE,gFAAX;AAAgCwS,mBAAW,EAAElR;AAA7C,OAD2tB,EAE3tB;AAAEtB,eAAO,EAAE,kFAAX;AAAwCwS,mBAAW,EAAElR;AAArD,OAF2tB,CAA1B,CAAD,EAGhsB,wEAHgsB,EAG7pB,kEAH6pB,CAvBlqB;AA0BmCmR,wBAAkB,EAAEpU,GA1BvD;AA0B4DqU,WAAK,EAAE,CA1BnE;AA0BsEC,UAAI,EAAE,CA1B5E;AA0B+EC,YAAM,EAAE,CAAC,CAAC,oBAAD,EAAuB,EAAvB,EAA2B,aAA3B,EAA0C,MAA1C,EAAkD,CAAlD,EAAqD,oBAArD,EAA2E,CAA3E,EAA8E,OAA9E,CAAD,EAAyF,CAAC,QAAD,EAAW,kBAAX,EAA+B,SAA/B,EAA0C,EAA1C,CAAzF,EAAwI,CAAC,CAAD,EAAI,kBAAJ,EAAwB,CAAxB,EAA2B,UAA3B,CAAxI,EAAgL,CAAC,OAAD,EAAU,wBAAV,EAAoC,CAApC,EAAuC,cAAvC,CAAhL,EAAwO,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,UAAtC,EAAkD,CAAlD,EAAqD,cAArD,CAAxO,EAA8S,CAAC,CAAD,EAAI,0BAAJ,CAA9S,EAA+U,CAAC,CAAD,EAAI,kBAAJ,CAA/U,EAAwW,CAAC,uBAAD,EAA0B,EAA1B,EAA8B,iCAA9B,EAAiE,EAAjE,EAAqE,gCAArE,EAAuG,EAAvG,EAA2G,kCAA3G,EAA+I,kCAA/I,EAAmL,CAAnL,EAAsL,mCAAtL,EAA2N,2BAA3N,EAAwP,yBAAxP,EAAmR,8BAAnR,EAAmT,6BAAnT,EAAkV,4BAAlV,EAAgX,eAAhX,EAAiY,QAAjY,EAA2Y,QAA3Y,CAAxW,EAA8vB,CAAC,CAAD,EAAI,wBAAJ,CAA9vB,EAA6xB,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,UAAhC,CAA7xB,EAA00B,CAAC,CAAD,EAAI,iBAAJ,CAA10B,EAAk2B,CAAC,CAAD,EAAI,cAAJ,CAAl2B,EAAu3B,CAAC,CAAD,EAAI,uBAAJ,CAAv3B,EAAq5B,CAAC,CAAD,EAAI,SAAJ,EAAe,SAAf,CAAr5B,EAAg7B,CAAC,OAAD,EAAU,EAAV,CAAh7B,CA1BvF;AA0BuhCC,cAAQ,EAAE,SAASC,kBAAT,CAA4BvW,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtnC,wEAAuB6B,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAAS2U,uCAAT,GAAmD;AAAE,mBAAOvW,GAAG,CAACwW,MAAJ,EAAP;AAAsB,WAAtG;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqB1W,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;;AACA,mEAAkB,CAAlB,EAAqBS,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA;;AACA,mEAAkB,CAAlB,EAAqBI,gCAArB,EAAuD,CAAvD,EAA0D,EAA1D,EAA8D,aAA9D,EAA6E,CAA7E;;AACA,mEAAkB,eAAlB,EAAmC,SAAS8V,uDAAT,GAAmE;AAAE,mBAAOzW,GAAG,CAACiK,KAAJ,EAAP;AAAqB,WAA7H,EAA+H,QAA/H,EAAyI,SAASyM,gDAAT,GAA4D;AAAE,mBAAO1W,GAAG,CAAC2W,WAAJ,EAAP;AAA2B,WAAlO,EAAoO,QAApO,EAA8O,SAASC,gDAAT,GAA4D;AAAE,mBAAO5W,GAAG,CAACiK,KAAJ,EAAP;AAAqB,WAAjU;AACH;;AAAC,YAAIlK,EAAE,GAAG,CAAT,EAAY;AACV,cAAM8W,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8B7W,GAAG,CAACuP,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,IAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,mCAAlB,EAAuDvP,GAAG,CAACgI,eAA3D,EAA4E,2BAA5E,EAAyG6O,GAAzG,EAA8G,yBAA9G,EAAyI7W,GAAG,CAACwI,SAA7I,EAAwJ,8BAAxJ,EAAwLxI,GAAG,CAACsG,UAA5L,EAAwM,6BAAxM,EAAuOtG,GAAG,CAAC8I,YAAJ,IAAoB,IAApB,GAA2B,IAA3B,GAAkC9I,GAAG,CAAC8I,YAAJ,CAAiBoJ,KAA1R,EAAiS,4BAAjS,EAA+TlS,GAAG,CAACqG,QAAnU;AACH;AAAE,OAlDmC;AAkDjCyQ,gBAAU,EAAE,CAAC,qEAAD,EAA0B,wDAA1B,EAA2C,4DAA3C,EAAgE,wEAAhE,EAA4F,+DAA5F,EAAoH,uDAApH,CAlDqB;AAkDgHC,YAAM,EAAE,CAAC,ioEAAD,CAlDxH;AAkD6vEC,mBAAa,EAAE,CAlD5wE;AAkD+wEC,UAAI,EAAE;AAAEC,iBAAS,EAAE,CACh0EpV,mBAAmB,CAACC,kBAD4yE,EAEh0ED,mBAAmB,CAACG,cAF4yE;AAAb,OAlDrxE;AAqD7BkV,qBAAe,EAAE;AArDY,KAAzB,CAAjB;AAsDA;;AACArS,aAAS,CAACsS,cAAV,GAA2B;AAAA,aAAM,CAC7B;AAAE1S,YAAI,EAAE;AAAR,OAD6B,EAE7B;AAAEA,YAAI,EAAE;AAAR,OAF6B,EAG7B;AAAEA,YAAI,EAAE;AAAR,OAH6B,EAI7B;AAAEA,YAAI,EAAE;AAAR,OAJ6B,EAK7B;AAAEA,YAAI,EAAE;AAAR,OAL6B,EAM7B;AAAEA,YAAI,EAAE,gEAAR;AAAwB2S,kBAAU,EAAE,CAAC;AAAE3S,cAAI,EAAE;AAAR,SAAD;AAApC,OAN6B,EAO7B;AAAEA,YAAI,EAAE,sDAAR;AAAgB2S,kBAAU,EAAE,CAAC;AAAE3S,cAAI,EAAE;AAAR,SAAD;AAA5B,OAP6B,EAQ7B;AAAEA,YAAI,EAAE,kEAAR;AAA4B2S,kBAAU,EAAE,CAAC;AAAE3S,cAAI,EAAE;AAAR,SAAD;AAAxC,OAR6B,EAS7B;AAAEA,YAAI,EAAE,yEAAR;AAAsB2S,kBAAU,EAAE,CAAC;AAAE3S,cAAI,EAAE;AAAR,SAAD;AAAlC,OAT6B,EAU7B;AAAEA,YAAI,EAAE,yDAAR;AAAmB2S,kBAAU,EAAE,CAAC;AAAE3S,cAAI,EAAE;AAAR,SAAD,EAAiB;AAAEA,cAAI,EAAE;AAAR,SAAjB;AAA/B,OAV6B,EAW7B;AAAEA,YAAI,EAAE4S,MAAR;AAAgBD,kBAAU,EAAE,CAAC;AAAE3S,cAAI,EAAE,uDAAR;AAAmBE,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAX6B,EAY7B;AAAEF,YAAI,EAAElE,SAAR;AAAmB6W,kBAAU,EAAE,CAAC;AAAE3S,cAAI,EAAE,oDAAR;AAAgBE,cAAI,EAAE,CAAC5B,0BAAD;AAAtB,SAAD;AAA/B,OAZ6B,EAa7B;AAAE0B,YAAI,EAAE;AAAR,OAb6B,EAc7B;AAAEA,YAAI,EAAElE,SAAR;AAAmB6W,kBAAU,EAAE,CAAC;AAAE3S,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBE,cAAI,EAAE,CAACtB,iBAAD;AAAtB,SAArB;AAA/B,OAd6B,CAAN;AAAA,KAA3B;;AAgBAwB,aAAS,CAACyS,cAAV,GAA2B;AACvBxO,aAAO,EAAE,CAAC;AAAErE,YAAI,EAAE,uDAAR;AAAmBE,YAAI,EAAE,CAAC,SAAD;AAAzB,OAAD,CADc;AAEvBkI,WAAK,EAAE,CAAC;AAAEpI,YAAI,EAAE,uDAAR;AAAmBE,YAAI,EAAE,CAAC,OAAD;AAAzB,OAAD,CAFgB;AAGvB8D,gBAAU,EAAE,CAAC;AAAEhE,YAAI,EAAE,uDAAR;AAAmBE,YAAI,EAAE,CAAC,wEAAD;AAAzB,OAAD,CAHW;AAIvBoC,aAAO,EAAE,CAAC;AAAEtC,YAAI,EAAE,6DAAR;AAAyBE,YAAI,EAAE,CAAC,gEAAD,EAAY;AAAE4S,qBAAW,EAAE;AAAf,SAAZ;AAA/B,OAAD,CAJc;AAKvB9H,kBAAY,EAAE,CAAC;AAAEhL,YAAI,EAAE,6DAAR;AAAyBE,YAAI,EAAE,CAAC,kEAAD,EAAc;AAAE4S,qBAAW,EAAE;AAAf,SAAd;AAA/B,OAAD,CALS;AAMvB9V,gBAAU,EAAE,CAAC;AAAEgD,YAAI,EAAE;AAAR,OAAD,CANW;AAOvBhE,mBAAa,EAAE,CAAC;AAAEgE,YAAI,EAAE,0DAAR;AAAsBE,YAAI,EAAE,CAACP,gBAAD;AAA5B,OAAD,CAPQ;AAQvBnE,iBAAW,EAAE,CAAC;AAAEwE,YAAI,EAAE;AAAR,OAAD,CARU;AASvB2Q,cAAQ,EAAE,CAAC;AAAE3Q,YAAI,EAAE;AAAR,OAAD,CATa;AAUvB/C,cAAQ,EAAE,CAAC;AAAE+C,YAAI,EAAE;AAAR,OAAD,CAVa;AAWvByD,4BAAsB,EAAE,CAAC;AAAEzD,YAAI,EAAE;AAAR,OAAD,CAXD;AAYvBiR,iBAAW,EAAE,CAAC;AAAEjR,YAAI,EAAE;AAAR,OAAD,CAZU;AAavBb,WAAK,EAAE,CAAC;AAAEa,YAAI,EAAE;AAAR,OAAD,CAbgB;AAcvBoC,eAAS,EAAE,CAAC;AAAEpC,YAAI,EAAE,mDAAR;AAAeE,YAAI,EAAE,CAAC,YAAD;AAArB,OAAD,CAdY;AAevBuM,oBAAc,EAAE,CAAC;AAAEzM,YAAI,EAAE,mDAAR;AAAeE,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CAfO;AAgBvBgR,uBAAiB,EAAE,CAAC;AAAElR,YAAI,EAAE;AAAR,OAAD,CAhBI;AAiBvB0D,+BAAyB,EAAE,CAAC;AAAE1D,YAAI,EAAE;AAAR,OAAD,CAjBJ;AAkBvBwK,oBAAc,EAAE,CAAC;AAAExK,YAAI,EAAE;AAAR,OAAD,CAlBO;AAmBvBwD,QAAE,EAAE,CAAC;AAAExD,YAAI,EAAE;AAAR,OAAD,CAnBmB;AAoBvB8C,kBAAY,EAAE,CAAC;AAAE9C,YAAI,EAAE;AAAR,OAAD,CApBS;AAqBvB+C,mBAAa,EAAE,CAAC;AAAE/C,YAAI,EAAE,oDAAR;AAAgBE,YAAI,EAAE,CAAC,QAAD;AAAtB,OAAD,CArBQ;AAsBvB+C,mBAAa,EAAE,CAAC;AAAEjD,YAAI,EAAE,oDAAR;AAAgBE,YAAI,EAAE,CAAC,QAAD;AAAtB,OAAD,CAtBQ;AAuBvBgD,qBAAe,EAAE,CAAC;AAAElD,YAAI,EAAE;AAAR,OAAD,CAvBM;AAwBvBmD,iBAAW,EAAE,CAAC;AAAEnD,YAAI,EAAE;AAAR,OAAD;AAxBU,KAA3B;AA0BA;;AAAc,KAAC,YAAY;AAAE,sEAAyBI,SAAzB,EAAoC,CAAC;AAC1DJ,YAAI,EAAE,uDADoD;AAE1DE,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,YADX;AAECiR,kBAAQ,EAAE,WAFX;AAGCO,kBAAQ,EAAE,ixDAHX;AAICZ,gBAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,UAA9B,CAJT;AAKCuB,uBAAa,EAAE,gEAAkBS,IALlC;AAMCN,yBAAe,EAAE,sEAAwBO,MAN1C;AAOCC,cAAI,EAAE;AACF,oBAAQ,SADN;AAEF,yBAAa,IAFX;AAGF,+BAAmB,UAHjB;AAIF,iCAAqB,iBAJnB;AAKF,sCAA0B,sBALxB;AAMF,oCAAwB,qBANtB;AAOF,oCAAwB,qBAPtB;AAQF,mCAAuB,YARrB;AASF,gCAAoB,+BATlB;AAUF,2CAA+B,UAV7B;AAWF,uCAA2B,0BAXzB;AAYF,4CAAgC,4BAZ9B;AAaF,2CAA+B,UAb7B;AAcF,0CAA8B,YAd5B;AAeF,2CAA+B,UAf7B;AAgBF,wCAA4B,OAhB1B;AAiBF,qBAAS,YAjBP;AAkBF,yBAAa,wBAlBX;AAmBF,uBAAW,YAnBT;AAoBF,sBAAU;AApBR,WAPP;AA6BCC,oBAAU,EAAE,CACR9V,mBAAmB,CAACC,kBADZ,EAERD,mBAAmB,CAACG,cAFZ,CA7Bb;AAiCC4V,mBAAS,EAAE,CACP;AAAErU,mBAAO,EAAE,gFAAX;AAAgCwS,uBAAW,EAAElR;AAA7C,WADO,EAEP;AAAEtB,mBAAO,EAAE,kFAAX;AAAwCwS,uBAAW,EAAElR;AAArD,WAFO,CAjCZ;AAqCCiS,gBAAM,EAAE,CAAC,ioEAAD;AArCT,SAAD;AAFoD,OAAD,CAApC,EAyCrB,YAAY;AAAE,eAAO,CAAC;AAAErS,cAAI,EAAE;AAAR,SAAD,EAAiC;AAAEA,cAAI,EAAE;AAAR,SAAjC,EAAqE;AAAEA,cAAI,EAAE;AAAR,SAArE,EAA8F;AAAEA,cAAI,EAAE;AAAR,SAA9F,EAAkI;AAAEA,cAAI,EAAE;AAAR,SAAlI,EAA+J;AAAEA,cAAI,EAAE,gEAAR;AAA+B2S,oBAAU,EAAE,CAAC;AACxN3S,gBAAI,EAAE;AADkN,WAAD;AAA3C,SAA/J,EAEX;AAAEA,cAAI,EAAE,sDAAR;AAAuB2S,oBAAU,EAAE,CAAC;AACtC3S,gBAAI,EAAE;AADgC,WAAD;AAAnC,SAFW,EAIX;AAAEA,cAAI,EAAE,kEAAR;AAAmC2S,oBAAU,EAAE,CAAC;AAClD3S,gBAAI,EAAE;AAD4C,WAAD;AAA/C,SAJW,EAMX;AAAEA,cAAI,EAAE,yEAAR;AAA6B2S,oBAAU,EAAE,CAAC;AAC5C3S,gBAAI,EAAE;AADsC,WAAD;AAAzC,SANW,EAQX;AAAEA,cAAI,EAAE,yDAAR;AAA0B2S,oBAAU,EAAE,CAAC;AACzC3S,gBAAI,EAAE;AADmC,WAAD,EAEzC;AACCA,gBAAI,EAAE;AADP,WAFyC;AAAtC,SARW,EAYX;AAAEA,cAAI,EAAE4S,MAAR;AAAgBD,oBAAU,EAAE,CAAC;AAC/B3S,gBAAI,EAAE,uDADyB;AAE/BE,gBAAI,EAAE,CAAC,UAAD;AAFyB,WAAD;AAA5B,SAZW,EAeX;AAAEF,cAAI,EAAElE,SAAR;AAAmB6W,oBAAU,EAAE,CAAC;AAClC3S,gBAAI,EAAE,oDAD4B;AAElCE,gBAAI,EAAE,CAAC5B,0BAAD;AAF4B,WAAD;AAA/B,SAfW,EAkBX;AAAE0B,cAAI,EAAE;AAAR,SAlBW,EAkBqB;AAAEA,cAAI,EAAElE,SAAR;AAAmB6W,oBAAU,EAAE,CAAC;AAClE3S,gBAAI,EAAE;AAD4D,WAAD,EAElE;AACCA,gBAAI,EAAE,oDADP;AAECE,gBAAI,EAAE,CAACtB,iBAAD;AAFP,WAFkE;AAA/B,SAlBrB,CAAP;AAuBF,OAhES,EAgEP;AAAEwD,iBAAS,EAAE,CAAC;AACxBpC,cAAI,EAAE,mDADkB;AAExBE,cAAI,EAAE,CAAC,YAAD;AAFkB,SAAD,CAAb;AAGV4C,oBAAY,EAAE,CAAC;AACf9C,cAAI,EAAE;AADS,SAAD,CAHJ;AAKV+C,qBAAa,EAAE,CAAC;AAChB/C,cAAI,EAAE,oDADU;AAEhBE,cAAI,EAAE,CAAC,QAAD;AAFU,SAAD,CALL;AAQV+C,qBAAa,EAAE,CAAC;AAChBjD,cAAI,EAAE,oDADU;AAEhBE,cAAI,EAAE,CAAC,QAAD;AAFU,SAAD,CARL;AAWVgD,uBAAe,EAAE,CAAC;AAClBlD,cAAI,EAAE;AADY,SAAD,CAXP;AAaVmD,mBAAW,EAAE,CAAC;AACdnD,cAAI,EAAE;AADQ,SAAD,CAbH;AAeVwD,UAAE,EAAE,CAAC;AACLxD,cAAI,EAAE;AADD,SAAD,CAfM;AAiBVyD,8BAAsB,EAAE,CAAC;AACzBzD,cAAI,EAAE;AADmB,SAAD,CAjBd;AAmBV0D,iCAAyB,EAAE,CAAC;AAC5B1D,cAAI,EAAE;AADsB,SAAD,CAnBjB;AAqBVxE,mBAAW,EAAE,CAAC;AACdwE,cAAI,EAAE;AADQ,SAAD,CArBH;AAuBV2Q,gBAAQ,EAAE,CAAC;AACX3Q,cAAI,EAAE;AADK,SAAD,CAvBA;AAyBV/C,gBAAQ,EAAE,CAAC;AACX+C,cAAI,EAAE;AADK,SAAD,CAzBA;AA2BViR,mBAAW,EAAE,CAAC;AACdjR,cAAI,EAAE;AADQ,SAAD,CA3BH;AA6BVb,aAAK,EAAE,CAAC;AACRa,cAAI,EAAE;AADE,SAAD,CA7BG;AA+BVqE,eAAO,EAAE,CAAC;AACVrE,cAAI,EAAE,uDADI;AAEVE,cAAI,EAAE,CAAC,SAAD;AAFI,SAAD,CA/BC;AAkCVkI,aAAK,EAAE,CAAC;AACRpI,cAAI,EAAE,uDADE;AAERE,cAAI,EAAE,CAAC,OAAD;AAFE,SAAD,CAlCG;AAqCV8D,kBAAU,EAAE,CAAC;AACbhE,cAAI,EAAE,uDADO;AAEbE,cAAI,EAAE,CAAC,wEAAD;AAFO,SAAD,CArCF;AAwCVoC,eAAO,EAAE,CAAC;AACVtC,cAAI,EAAE,6DADI;AAEVE,cAAI,EAAE,CAAC,gEAAD,EAAY;AAAE4S,uBAAW,EAAE;AAAf,WAAZ;AAFI,SAAD,CAxCC;AA2CV9H,oBAAY,EAAE,CAAC;AACfhL,cAAI,EAAE,6DADS;AAEfE,cAAI,EAAE,CAAC,kEAAD,EAAc;AAAE4S,uBAAW,EAAE;AAAf,WAAd;AAFS,SAAD,CA3CJ;AA8CV9V,kBAAU,EAAE,CAAC;AACbgD,cAAI,EAAE;AADO,SAAD,CA9CF;AAgDVhE,qBAAa,EAAE,CAAC;AAChBgE,cAAI,EAAE,0DADU;AAEhBE,cAAI,EAAE,CAACP,gBAAD;AAFU,SAAD,CAhDL;AAmDV8M,sBAAc,EAAE,CAAC;AACjBzM,cAAI,EAAE,mDADW;AAEjBE,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD,CAnDN;AAsDVgR,yBAAiB,EAAE,CAAC;AACpBlR,cAAI,EAAE;AADc,SAAD,CAtDT;AAwDVwK,sBAAc,EAAE,CAAC;AACjBxK,cAAI,EAAE;AADW,SAAD;AAxDN,OAhEO;AA0Hb,KA1HF;;AA2Hd,QAAI,KAAJ,EAAW,CAkSV;AAED;;;;;;;QAKMoT,e;;;;AAENA,mBAAe,CAACC,IAAhB,GAAuB,+DAAwB;AAAErT,UAAI,EAAEoT;AAAR,KAAxB,CAAvB;AACAA,mBAAe,CAACE,IAAhB,GAAuB,+DAAwB;AAAEC,aAAO,EAAE,SAASC,uBAAT,CAAiC1T,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIsT,eAAV,GAAP;AAAsC,OAAvF;AAAyFD,eAAS,EAAE,CAACtU,mCAAD,CAApG;AAA2I4U,aAAO,EAAE,CAAC,CACxL,4DADwL,EAExL,kEAFwL,EAGxL,sEAHwL,EAIxL,sEAJwL,CAAD,EAM3L,+EAN2L,EAMvK,sEANuK,EAMtJ,sEANsJ;AAApJ,KAAxB,CAAvB;;AAOA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BN,eAA1B,EAA2C;AAAEO,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACvT,SAAD,EAC1IT,gBAD0I,CAAP;AAC/G,SADiF;AAC/E8T,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EACpD,kEADoD,EAEpD,sEAFoD,EAGpD,sEAHoD,CAAP;AAG1B,SAJkF;AAIhFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,+EAAD,EACnDxT,SADmD,EAEnDT,gBAFmD,EAGnD,sEAHmD,EAGlC,sEAHkC,CAAP;AAGR;AAPiE,OAA3C,CAAnD;AAOmC,KAPlD;AAQA;;;AAAc,KAAC,YAAY;AAAE,sEAAyByT,eAAzB,EAA0C,CAAC;AAChEpT,YAAI,EAAE,sDAD0D;AAEhEE,YAAI,EAAE,CAAC;AACCuT,iBAAO,EAAE,CACL,4DADK,EAEL,kEAFK,EAGL,sEAHK,EAIL,sEAJK,CADV;AAOCG,iBAAO,EAAE,CAAC,+EAAD,EAAqBxT,SAArB,EAAgCT,gBAAhC,EAAkD,sEAAlD,EAAmE,sEAAnE,CAPV;AAQCgU,sBAAY,EAAE,CAACvT,SAAD,EAAYT,gBAAZ,CARf;AASCwT,mBAAS,EAAE,CAACtU,mCAAD;AATZ,SAAD;AAF0D,OAAD,CAA1C,EAarB,IAbqB,EAaf,IAbe;AAaP,KAbR;AAed;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC9tEA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMgV,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE,iFAAhC;AAAoDC,iBAAW,EAAE,CAAC,+FAAD,CAAjE;AAA8EzB,UAAI,EAAE;AAAE0B,oBAAY,EAAE;AAAhB;AAApF,KADqB,EAErB;AAAEH,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE,4FAApC;AAA2DC,iBAAW,EAAE,CAAC,+FAAD,CAAxE;AAAqFzB,UAAI,EAAE;AAAE0B,oBAAY,EAAE;AAAhB;AAA3F,KAFqB,EAGrB;AAAEH,UAAI,EAAE,iBAAR;AAA2BC,eAAS,EAAE,sFAAtC;AAA2DC,iBAAW,EAAE,CAAC,+FAAD,CAAxE;AAAqFzB,UAAI,EAAE;AAAE0B,oBAAY,EAAE;AAAhB;AAA3F,KAHqB,EAIrB;AAAEH,UAAI,EAAE,wBAAR;AAAkCC,eAAS,EAAE,2GAA7C;AAAyEC,iBAAW,EAAE,CAAC,+FAAD,CAAtF;AAAmGzB,UAAI,EAAE;AAAE0B,oBAAY,EAAE;AAAhB;AAAzG,KAJqB,EAKrB;AAAEH,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE,iFAAhC;AAAoDC,iBAAW,EAAE,CAAC,+FAAD,CAAjE;AAA8EzB,UAAI,EAAE;AAAC0B,oBAAY,EAAE;AAAf;AAApF,KALqB,CAAvB;;QAeaC,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBALpB,CACP,6DAAaC,QAAb,CAAsBN,MAAtB,CADO,CAKoB,EAFnB,4DAEmB;;;;0HAAlBK,kB,EAAkB;AAAA;AAAA,kBAFnB,4DAEmB;AAAA,O;AAFP,K;;;;;sEAEXA,kB,EAAkB;cAP9B,sDAO8B;eAPrB;AACRP,sBAAY,EAAE,EADN;AAERF,iBAAO,EAAE,CACP,6DAAaU,QAAb,CAAsBN,MAAtB,CADO,CAFD;AAKRD,iBAAO,EAAE,CAAC,4DAAD;AALD,S;AAOqB,Q;;;;;;;;;;;;;;;;;;AC1B/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAyBaQ,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBARb,CACP,4DADO,EAEP,wEAFO,EAGP,kEAHO,EAIP,oEAJO,EAKP,wEALO,CAQa;;;;0HAAXA,W,EAAW;AAAA,uBATP,4FASO,EATgB,iFAShB,EAToC,sFASpC,EATyD,2GASzD,EATqF,kFASrF,EATyG,6FASzG;AAT8H,kBAElJ,4DAFkJ,EAGlJ,wEAHkJ,EAIlJ,kEAJkJ,EAKlJ,oEALkJ,EAMlJ,wEANkJ;AAS9H,O;AAHL,K;;;;;sEAGNA,W,EAAW;cAVvB,sDAUuB;eAVd;AACRT,sBAAY,EAAE,CAAC,4FAAD,EAAwB,iFAAxB,EAA4C,sFAA5C,EAAiE,2GAAjE,EAA6F,kFAA7F,EAAiH,6FAAjH,CADN;AAERF,iBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,kEAHO,EAIP,oEAJO,EAKP,wEALO;AAFD,S;AAUc,Q;;;;;;;;;;;;;;;;;;ACzBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWoB;;AAAoC;;AAAgB;;;;;;AADxD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;;;;AAUD;;AAC2D;;AAAoB;;;;;;AAA3E;;AAAuD;;AAAA;;;;;;AAK/D;;AAA0C;;AAAsB;;;;;;AADpE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AASL;;AAA2C;;AAAuB;;;;;;AADtE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AASL;;AAAqC;;AAAiB;;;;;;AAD1D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAgBD;;AAA0C;;AAAsB;;;;;;AADpE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAiBL;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;QD7DhBY,qB;;;AAYX,qCAAoBC,aAApB,EAA0DC,cAA1D,EAAkGC,oBAAlG,EAAsJC,oBAAtJ,EAA0MC,EAA1M,EAAmOC,MAAnO,EAAmP;AAAA;;AAA/N,aAAAL,aAAA,GAAAA,aAAA;AAAsC,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAC,oBAAA,GAAAA,oBAAA;AAAoD,aAAAC,oBAAA,GAAAA,oBAAA;AAAoD,aAAAC,EAAA,GAAAA,EAAA;AAAyB,aAAAC,MAAA,GAAAA,MAAA;AATnO,aAAAC,MAAA,GAAS,CAAC,MAAD,EAAS,aAAT,EAAwB,OAAxB,EAAiC,YAAjC,EAA+C,UAA/C,CAAT;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,SAAA,GAAoC,IAApC;AACA,aAAAC,cAAA,GAAyC,IAAzC;AACA,aAAAC,YAAA,GAAuC,IAAvC;AACA,aAAAC,iBAAA,GAAoB,KAApB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AAIE,aAAKC,UAAL,GAAkB,KAAKT,EAAL,CAAQvH,KAAR,CAAc;AAC9BiI,cAAI,EAAE,CAAC,EAAD,EAAK,0DAAWzE,QAAhB,CADwB;AAE9B0E,oBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW1E,QAAhB,CAFkB;AAG9B2E,qBAAW,EAAE,CAAC,EAAD,EAAK,0DAAW3E,QAAhB,CAHiB;AAI9B4E,eAAK,EAAE,CAAC,EAAD,EAAK,0DAAW5E,QAAhB,CAJuB;AAK9B6E,oBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW7E,QAAhB,CALkB;AAM9B8E,kBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW9E,QAAhB;AANoB,SAAd,CAAlB;AAQD;;;;mCAIU;AACT,cAAI+E,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,cAAIC,EAAE,GAAGhD,MAAM,CAAC8C,KAAK,CAACG,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,cAAIC,EAAE,GAAGnD,MAAM,CAAC8C,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT,CAHS,CAG+C;;AACxD,cAAIG,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAX;AAEA,eAAKpB,SAAL,GAAiB,IAAIvM,OAAJ,CAAoB,UAACC,OAAD,EAAU2N,MAAV,EAAqB;AAAE3N,mBAAO,CAACuN,EAAE,GAAG,GAAL,GAAWH,EAAX,GAAgB,GAAhB,GAAsBK,IAAvB,CAAP;AAAsC,WAAjF,CAAjB,CANS,CAOT;AACA;;AACA,eAAKG,WAAL,GAAmB,KAAK7B,cAAL,CAAoB8B,cAApB,EAAnB;AACD;AAED;;;;;;;;;kCAOUjB,I,EAAMC,U,EAAYC,W,EAAaC,K,EAAOC,U,EAAYC,Q,EAAU;AAAA;;AACpE,eAAKZ,SAAL,GAAiB,IAAjB;AAEAW,oBAAU,GAAG,KAAKc,UAAL,CAAgBd,UAAhB,CAAb;AACAnM,iBAAO,CAACkN,GAAR,CAAY,iCAAiCf,UAA7C;AAEAC,kBAAQ,GAAG,KAAKa,UAAL,CAAgBb,QAAhB,CAAX;AACApM,iBAAO,CAACkN,GAAR,CAAY,+BAA+Bd,QAA3C;AAEApM,iBAAO,CAACkN,GAAR,CAAYlB,UAAZ;AAEAhM,iBAAO,CAACkN,GAAR,CAAYlB,UAAU,CAAC7R,EAAvB;;AACA,cAAI,CAAC,KAAK2R,UAAL,CAAgBqB,KAArB,EAA4B;AAC1BnN,mBAAO,CAACkN,GAAR,CAAY,SAAZ;AACA;AACD;;AAED,eAAKjC,aAAL,CAAmBmC,SAAnB,CAA6BrB,IAA7B,EAAmCE,WAAnC,EAAgDC,KAAhD,EAAuDC,UAAvD,EAAmEC,QAAnE,EAA6E5R,SAA7E,CAAuF,UAAC6S,MAAD,EAAoB;AACzGrN,mBAAO,CAACkN,GAAR,CAAY,aAAaI,IAAI,CAACC,SAAL,CAAeF,MAAf,CAAzB;;AACA,mBAAI,CAAClC,oBAAL,CAA0BqC,qBAA1B,CAAgDxB,UAAU,CAAC7R,EAA3D,EAA+DkT,MAAM,CAAClT,EAAtE,EAA0E,UAA1E,EAAsFK,SAAtF,CAAgG,YAAM;AACpGwF,qBAAO,CAACkN,GAAR,CAAY,4BAAZ;AACD,aAFD;;AAGA,mBAAI,CAAC9B,oBAAL,CAA0BqC,mBAA1B,CAA8CJ,MAAM,CAAClT,EAArD,EAAyD,4GAAzD,EAAuKK,SAAvK,CAAiL,YAAM;AACrLwF,qBAAO,CAACkN,GAAR,CAAY,wBAAZ;AACD,aAFD;;AAGA,mBAAI,CAAC5B,MAAL,CAAYoC,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,WATD;AAUD;;;0CAEiBrS,K,EAAO;AACvB2E,iBAAO,CAACkN,GAAR,CAAY,mBAAZ;AACA,eAAKxB,cAAL,GAAsB,IAAIxM,OAAJ,CAAoB,UAACC,OAAD,EAAU2N,MAAV,EAAqB;AAC7D3N,mBAAO,CAACoK,MAAM,CAAClO,KAAK,CAACsS,KAAP,CAAN,CAAoBlB,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,IAAuC,GAAvC,GAA6ClD,MAAM,CAAClO,KAAK,CAACuS,GAAP,CAAN,CAAkBnB,QAAlB,CAA2B,CAA3B,EAA8B,GAA9B,CAA7C,GAAkF,GAAlF,GAAwFpR,KAAK,CAACwS,IAA/F,CAAP;AACD,WAFqB,CAAtB;AAGA,eAAKjC,iBAAL,GAAyB,IAAzB;AACD;;;wCAEevQ,K,EAAO;AACrB2E,iBAAO,CAACkN,GAAR,CAAY,iBAAZ;AACA,eAAKvB,YAAL,GAAoB,IAAIzM,OAAJ,CAAoB,UAACC,OAAD,EAAU2N,MAAV,EAAqB;AAC3D3N,mBAAO,CAACoK,MAAM,CAAClO,KAAK,CAACsS,KAAP,CAAN,CAAoBlB,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,IAAuC,GAAvC,GAA6ClD,MAAM,CAAClO,KAAK,CAACuS,GAAP,CAAN,CAAkBnB,QAAlB,CAA2B,CAA3B,EAA8B,GAA9B,CAA7C,GAAkF,GAAlF,GAAwFpR,KAAK,CAACwS,IAA/F,CAAP;AACD,WAFmB,CAApB;AAGA,eAAKhC,eAAL,GAAuB,IAAvB;AACD;;;mCAEUiC,I,EAAM;AACf,cAAIC,OAAO,GAAG,IAAIzB,IAAJ,CAASwB,IAAT,CAAd;AACA,cAAIvB,EAAE,GAAGhD,MAAM,CAACwE,OAAO,CAACvB,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAT;AACA,cAAIC,EAAE,GAAGnD,MAAM,CAACwE,OAAO,CAACpB,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAT,CAHe,CAG2C;;AAC1D,cAAIG,IAAI,GAAGmB,OAAO,CAAClB,WAAR,EAAX;AAEA,cAAImB,OAAO,GAAWpB,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBH,EAA9C;AACA,iBAAOyB,OAAP;AACD;;;4BA1EO;AAAE,iBAAO,KAAKlC,UAAL,CAAgBmC,QAAvB;AAAkC;;;;;;;uBAvBjCjD,qB,EAAqB,4I,EAAA,kJ,EAAA,+J,EAAA,+J,EAAA,2H,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,c;AAAA,6hD;AAAA;AAAA;;;ACjBlC;;AACA;;AACI;;AACI;;AAAI;;AAAiB;;AACrB;;AAEI;;AACI;;AAAkB;;AAAyB;;AAAC;;AAAO;;AAAI;;AACvD;;AAEA;;AAGJ;;AAEA;;AACI;;AACI;;AAAW;;AAAU;;AACrB;;AAEI;;AAAY;;AAAI;;AAChB;;;;AAEJ;;AACJ;;AAEA;;AAGJ;;AAEA;;AACI;;AAAyB;;AAAyB;;AAAC;;AAAO;;AAAW;;AACrE;;AAEA;;AAGJ;;AAEA;;AACI;;AAAmB;;AAAyB;;AAAC;;AAAO;;AAAe;;AACnE;;AAEA;;AAGJ;;AAEA;;AACI;;AAAwB;;AAAyB;;AAAC;;AAAO;;AAAU;;AACnE;;AACI;;AAAoD;AAAA,mBAAc,IAAAkD,iBAAA,QAAd;AAAuC,WAAvC;;;;;;AAApD;;AAIA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA,mBAAS,aAAT;AAAmB,WAAnB;;AAC5C;;AACtB;;AACA;;AAGJ;;AACJ;;AAEA;;AACI;;AAAsB;;AAAyB;;AAAC;;AAAO;;AAAQ;;AAC/D;;AACI;;AACI;AAAA,mBAAc,IAAAC,eAAA,QAAd;AAAqC,WAArC;;;;;;AADJ;;AAIA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA,mBAAS,aAAT;AAAoB,WAApB;;AAC5C;;AACtB;;AACA;;AAGJ;;AACJ;;AAEA;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAf,SAAA,wEAAT;AAAkH,WAAlH;;AACwB;;AAAmC;;AAAa;;AAC5E;;AAAyD;;AAAyC;;AAAO;;AAC7G;;AACJ;;AACJ;;;;AArFc;;AAAA;;AAKM;;AAAA;;AACC;;AAAA;;AASG;;AAAA;;AAEY;;AAAA;;AAKf;;AAAA;;AAQD;;AAAA;;AACC;;AAAA;;AAQD;;AAAA;;AACC;;AAAA;;AAUG;;AAAA,8QAA4E,SAA5E,EAA4E,gHAA5E;;AAMC;;AAAA;;AAWQ;;AAAA,0QAAwE,SAAxE,EAAwE,8GAAxE;;AAMR;;AAAA;;;;;;;;;;sED5DZpC,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTlU,kBAAQ,EAAE,mBADD;AAETsX,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBoB;;AAAyD;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAiBvB;;AACI;;AAAe;;;;;;;;AAAf;;AAAA;;;;;;;;AAd1C;;AACI;;AAAgB;;AAAe;;AAC/B;;AAAqD;;AAAiB;;AACtE;;AAAqD;;AAAwB;;AAC7E;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAqB;;AACzB;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwD;;AAC7C;;AAAI;;AACrC;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyD;;AACtC;;AAAM;;AAC/C;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACQ;;AAC2B;;AAAmB;;AAChF;;AACJ;;;;;;;;;AAfoB;;AAAA;;AACqC;;AAAA;;AACA;;AAAA;;AACjD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAOoC;;AAAA;;;;;;;;AAU5C;;AACI;;AAA+B;;AACvB;AAAA;;AAAA;;AAAA,2DAA+B,CAA/B;AAAgC,SAAhC;;AAAmC;;AAAQ;;AAAS;;AAChE;;;;;;;;AAEI;;AAAsB;;AAA0B;AAAA;;AAAA;;AAAA,2DAA+B,CAA/B;AAAgC,SAAhC;;AAAmC;;AAAQ;;AAC3F;;;;;;;;AAGJ;;AACI;;AAAsB;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAK;;AAAS;;AAChG;;;;;;AADkF;;AAAA;;;;;;;;AAGlF;;AACI;;AAA+B;;AACvB;AAAA;;AAAA;;AAAA,2DAA+B,CAA/B;AAAgC,SAAhC;;AAAmC;;AAAI;;AAAS;;AAC5D;;;;;;;;AAEI;;AAAsB;;AAA0B;AAAA;;AAAA;;AAAA,2DAA+B,CAA/B;AAAgC,SAAhC;;AAAmC;;AAAI;;AACvF;;;;QDhDPC,kB;;;AAcX,kCAAoBrD,aAApB,EAA0DK,MAA1D,EAAkFiD,KAAlF,EAAiHC,qBAAjH,EAAuKrD,oBAAvK,EAAmN;AAAA;;AAAA;;AAA/L,aAAAF,aAAA,GAAAA,aAAA;AAAsC,aAAAK,MAAA,GAAAA,MAAA;AAAwB,aAAAiD,KAAA,GAAAA,KAAA;AAA+B,aAAAC,qBAAA,GAAAA,qBAAA;AAAsD,aAAArD,oBAAA,GAAAA,oBAAA;AAVvK,aAAAsD,OAAA,GAAe,EAAf;AACA,aAAAC,gBAAA,GAAmB,CAAC,IAAD,EAAO,MAAP,EAAe,aAAf,EAA8B,OAA9B,EAAuC,YAAvC,EAAqD,UAArD,EAAiE,SAAjE,CAAnB;AACA,aAAAC,IAAA,GAAO,CAAP;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,QAAA,GAAqB,EAArB;AAIA,aAAAC,aAAA,GAAgB,CAAhB;AAGE,aAAKN,qBAAL,CAA2BO,WAA3B,CAAuCvU,SAAvC,CAAiD,UAAAwU,CAAC;AAAA,iBAAI,OAAI,CAACD,WAAL,GAAmBC,CAAvB;AAAA,SAAlD;AACD;;;;mCAEU;AACT,cAAIL,IAAI,GAAG,KAAKJ,KAAL,CAAWU,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,KAA4C,KAAKR,IAA5D;AACA,eAAKS,YAAL,CAAkBT,IAAlB;AACA3O,iBAAO,CAACkN,GAAR,CAAY,KAAK6B,WAAjB;AACA,eAAKM,OAAL,GAAgB/B,IAAI,CAACgC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CC,IAA5C,IAAoD,OAApE;AAEA;;;;;;;;;AASD;;;uDAE8BhB,O,EAAa;AAAA;;AAC1CA,iBAAO,CAAClT,OAAR,CAAgB,UAAC8R,MAAD,EAAiBrL,KAAjB,EAAwB0N,GAAxB,EAAgC;AAC9C,gBAAIvD,UAAU,GAAG,IAAIG,IAAJ,CAASe,MAAM,CAAClB,UAAP,CAAkB5E,QAAlB,EAAT,CAAjB;AACA,gBAAI6E,QAAQ,GAAG,IAAIE,IAAJ,CAASe,MAAM,CAACjB,QAAP,CAAgB7E,QAAhB,EAAT,CAAf;AAEA8F,kBAAM,CAAClB,UAAP,GAAoBA,UAAU,CAACwD,kBAAX,EAApB;AACAtC,kBAAM,CAACjB,QAAP,GAAkBA,QAAQ,CAACuD,kBAAT,EAAlB;;AACA,gBAAItC,MAAM,CAACnB,KAAP,GAAe,CAAnB,EAAsB;AACpB;AACD;;AACD,mBAAI,CAAC2C,QAAL,CAAc7M,KAAd,IAAuB,CAAvB;;AACA,mBAAI,CAACmJ,oBAAL,CAA0ByE,qBAA1B,CAAgDvC,MAAM,CAAClT,EAAvD,EAA2DK,SAA3D,CAAqE,UAACqV,GAAD,EAAa;AAChFA,iBAAG,CAACtU,OAAJ,CAAY,UAACuU,GAAD,EAAc;AACxB,oBAAIA,GAAG,CAACC,iBAAJ,IAAyB,SAA7B,EAAwC;AACtC,yBAAI,CAAClB,QAAL,CAAc7M,KAAd;AACD;AACF,eAJD;AAKAhC,qBAAO,CAACkN,GAAR,CAAYG,MAAM,CAACtB,IAAP,GAAc,qBAAd,GAAsC,OAAI,CAAC8C,QAAL,CAAc7M,KAAd,CAAlD,EANgF,CAOhF;AACA;AACA;AACD,aAVD;AAWD,WArBD;AAsBD;;;qCAEY2M,I,EAAM;AAAA;;AACjB,eAAK1D,aAAL,CAAmB+E,UAAnB,CAA8BrB,IAA9B,EAAoC,KAAKG,aAAzC,EACGtU,SADH,CACa,UAAC0O,IAAD,EAAc;AACvB,mBAAI,CAACuF,OAAL,GAAevF,IAAf;AACA,mBAAI,CAACyF,IAAL,GAAYA,IAAZ;AACA,mBAAI,CAACsB,WAAL,GAAmB,OAAI,CAACxB,OAAL,CAAayB,UAAb,CAAwBnO,OAA3C;AACA,mBAAI,CAACoO,QAAL,GAAgB,OAAI,CAAC1B,OAAL,CAAayB,UAAb,CAAwBC,QAAxC;AACA,mBAAI,CAACC,aAAL,GAAqB,IAAI9Q,KAAJ,CAAU,OAAI,CAAC6Q,QAAf,CAArB;AACA,mBAAI,CAACvB,KAAL,GAAayB,MAAM,CAACC,MAAP,CAAc,OAAI,CAAC7B,OAAL,CAAayB,UAA3B,CAAb;AAEAlQ,mBAAO,CAACkN,GAAR,CAAY,mBAAZ;;AAEA,mBAAI,CAACqD,8BAAL,CAAoC,OAAI,CAAC9B,OAAL,CAAaoB,GAAjD;;AACA,mBAAI,CAACvE,MAAL,CAAYoC,QAAZ,CAAqB,CAAC,kBAAD,EAAqB;AAAEiB,kBAAI,EAAEA;AAAR,aAArB,CAArB;AACD,WAbH;AAcD;;;yCAEgB6B,M,EAAQ;AAAA;;AACvB;AACA,cAAIA,MAAM,GAAG,CAAb,EAAgB;AACd;AACD;;AACD,eAAKvF,aAAL,CAAmB+E,UAAnB,CAA8BQ,MAA9B,EAAsC,KAAK1B,aAA3C,EACGtU,SADH,CACa,YAAoB;AAAA,gBAAnB0O,IAAmB,uEAAP,EAAO;AAC7B,mBAAI,CAACuF,OAAL,GAAevF,IAAf;AACA,mBAAI,CAACyF,IAAL,GAAY6B,MAAZ;AACA,mBAAI,CAACP,WAAL,GAAmB,OAAI,CAACxB,OAAL,CAAayB,UAAb,CAAwBnO,OAA3C;AACA,mBAAI,CAACoO,QAAL,GAAgB,OAAI,CAAC1B,OAAL,CAAayB,UAAb,CAAwBC,QAAxC;;AAEA,mBAAI,CAACI,8BAAL,CAAoC,OAAI,CAAC9B,OAAL,CAAaoB,GAAjD;;AAEA7P,mBAAO,CAACkN,GAAR,CAAY,sBAAsBsD,MAAlC;;AAEA,mBAAI,CAAClF,MAAL,CAAYoC,QAAZ,CAAqB,CAAC,kBAAD,EAAqB;AAAEiB,kBAAI,EAAE,OAAI,CAACF,OAAL,CAAayB,UAAb,CAAwBnO;AAAhC,aAArB,CAArB;AACD,WAZH;AAaD;;;mCAEU5H,E,EAAI;AACb,eAAKmR,MAAL,CAAYoC,QAAZ,CAAqB,6BAAsBvT,EAAtB,EAArB;AACD;;;qCAEYA,E,EAAI;AACf,cAAIsW,CAAC,GAAGC,OAAO,yBAAkBvW,EAAlB,qBAAf;;AACA,cAAIsW,CAAC,IAAI,IAAT,EAAe;AACb,iBAAKxF,aAAL,CAAmB0F,YAAnB,CAAgCxW,EAAhC,EAAoCK,SAApC,CAA8C,YAAM,CAClD;AACD,aAFD;AAGA,gBAAMoW,IAAI,GAAG,KAAKnC,OAAL,CAAaoB,GAAb,CAAiB/P,IAAjB,CAAsB,UAAA8Q,IAAI;AAAA,qBAAIA,IAAI,CAACzW,EAAL,KAAYA,EAAhB;AAAA,aAA1B,CAAb;AACA,iBAAKsU,OAAL,CAAaoB,GAAb,CAAiBgB,MAAjB,CAAwB,KAAKpC,OAAL,CAAaoB,GAAb,CAAiBzO,OAAjB,CAAyBwP,IAAzB,CAAxB;AACD;AACF;;;0CAEiBzW,E,EAAI;AACpB,eAAKmR,MAAL,CAAYoC,QAAZ,CAAqB,oCAA6BvT,EAA7B,EAArB;AACD;;;;;;;uBAlHUmU,kB,EAAkB,4I,EAAA,uH,EAAA,+H,EAAA,gK,EAAA,kK;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,ohC;AAAA;AAAA;ACb/B;;AACA;;AACI;;AAEI;;AAAI;;AAAc;;AAClB;;AACI;;AAAgG;;AACxD;;AAAiB;;AAC7D;;AAIA;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAiBJ;;AACJ;;AAEA;;AACI;;AAEI;;AAIA;;AAKA;;AAIA;;AAIA;;AAKJ;;AACJ;;AAEJ;;AACJ;;;;;;;;AArDwB;;AAAA;;AAIJ;;AAAA;;AAuBU;;AAAA,0FAAiC,UAAjC,EAAiC,KAAjC;;AASA;;AAAA;;AAIA;;AAAA,yGAA6C,UAA7C,EAA6C,KAA7C;;;;;;;;;sED1CjBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTxX,kBAAQ,EAAE,eADD;AAETsX,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWoB;;AAAqC;;AAAgB;;;;;;AADzD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;;;;AAUD;;AAC2D;;AAAoB;;;;;;AAA3E;;AAAuD;;AAAA;;;;;;AAK/D;;AAA2C;;AAAsB;;;;;;AADrE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AASL;;AAA4C;;AAAuB;;;;;;AADvE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AASL;;AAAsC;;AAAiB;;;;;;AAD3D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAiBD;;AAA2C;;AAAsB;;;;;;AADrE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAiBL;;AAAyC;;AAAoB;;;;;;AADjE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;QDhEhByC,mB;;;AAgBX,mCAAoB7F,aAApB,EAA0DE,oBAA1D,EAA8GD,cAA9G,EAAsJI,MAAtJ,EAA8KiD,KAA9K,EAA6MlD,EAA7M,EAA8N;AAAA;;AAA1M,aAAAJ,aAAA,GAAAA,aAAA;AAAsC,aAAAE,oBAAA,GAAAA,oBAAA;AAAoD,aAAAD,cAAA,GAAAA,cAAA;AAAwC,aAAAI,MAAA,GAAAA,MAAA;AAAwB,aAAAiD,KAAA,GAAAA,KAAA;AAA+B,aAAAlD,EAAA,GAAAA,EAAA;AAX7M,aAAAG,SAAA,GAAY,KAAZ;AACA,aAAAuF,SAAA,GAAoC,IAApC;AACA,aAAAnF,iBAAA,GAAoB,KAApB;AACA,aAAAF,cAAA,GAAyC,IAAzC;AACA,aAAAsF,OAAA,GAAkC,IAAlC;AACA,aAAAnF,eAAA,GAAkB,KAAlB;AACA,aAAAF,YAAA,GAAuC,IAAvC;AAME,aAAKsF,UAAL;AACD;;;;qCAEY;AACX,eAAKC,UAAL,GAAkB,KAAK7F,EAAL,CAAQvH,KAAR,CAAc;AAC9BiI,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWzE,QAAhB,CADwB;AAE9B0E,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW1E,QAAhB,CAFkB;AAG9B2E,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAW3E,QAAhB,CAHiB;AAI9B4E,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAW5E,QAAhB,CAJuB;AAK9B6E,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW7E,QAAhB,CALkB;AAM9B8E,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW9E,QAAhB;AANoB,WAAd,CAAlB;AAQD;;;mCAIU;AAAA;;AACT,eAAKyF,WAAL,GAAmB,KAAK7B,cAAL,CAAoB8B,cAApB,EAAnB;AACA,eAAKuB,KAAL,CAAW4C,MAAX,CAAkB3W,SAAlB,CAA4B,UAAA2W,MAAM,EAAI;AACpC,mBAAI,CAAChX,EAAL,GAAUgX,MAAM,CAAChX,EAAjB;;AACA,mBAAI,CAAC8Q,aAAL,CAAmBmG,aAAnB,CAAiC,OAAI,CAACjX,EAAtC,EAA0CK,SAA1C,CAAoD,UAACqV,GAAD,EAAiB;AACnE,qBAAI,CAACxC,MAAL,GAAcwC,GAAd,CADmE,CAGnE;;AAEA,qBAAI,CAACwB,WAAL,CAAiB,OAAI,CAAChE,MAAtB,EALmE,CAOnE;;;AAEA,qBAAI,CAAC6D,UAAL,CAAgB/B,GAAhB,CAAoB,MAApB,EAA4BmC,QAA5B,CAAqC,OAAI,CAACjE,MAAL,CAAYtB,IAAjD;;AACA,qBAAI,CAACmF,UAAL,CAAgB/B,GAAhB,CAAoB,aAApB,EAAmCmC,QAAnC,CAA4C,OAAI,CAACjE,MAAL,CAAYpB,WAAxD;;AACA,qBAAI,CAACiF,UAAL,CAAgB/B,GAAhB,CAAoB,OAApB,EAA6BmC,QAA7B,CAAsC,OAAI,CAACjE,MAAL,CAAYnB,KAAlD;;AAEA,qBAAI,CAACf,oBAAL,CAA0BoG,uBAA1B,CAAkD,OAAI,CAACpX,EAAvD,EAA2DK,SAA3D,CAAqE,UAACwR,UAAD,EAAqB;AACxFhM,uBAAO,CAACkN,GAAR,CAAYlB,UAAZ,EADwF,CAExF;;AACA,uBAAI,CAACwF,aAAL,GAAqBxF,UAAU,CAACyF,KAAhC;AACA,uBAAI,CAACC,eAAL,GAAuB1F,UAAU,CAAC2F,UAAlC;AACD,eALD;;AAMA,kBAAI5D,OAAO,GAAG,IAAIzB,IAAJ,CAAS,OAAI,CAACe,MAAL,CAAYlB,UAAZ,CAAuB5E,QAAvB,EAAT,CAAd;AACA,kBAAIgF,EAAE,GAAGhD,MAAM,CAACwE,OAAO,CAACvB,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAT;AACA,kBAAIC,EAAE,GAAGnD,MAAM,CAACwE,OAAO,CAACpB,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAT,CArBmE,CAqBT;;AAC1D,kBAAIG,IAAI,GAAGmB,OAAO,CAAClB,WAAR,EAAX;AAEA,qBAAI,CAACkE,SAAL,GAAiB,IAAI7R,OAAJ,CAAoB,UAACC,OAAD,EAAU2N,MAAV,EAAqB;AAAE3N,uBAAO,CAACuN,EAAE,GAAG,GAAL,GAAWH,EAAX,GAAgB,GAAhB,GAAsBK,IAAvB,CAAP;AAAsC,eAAjF,CAAjB;AAEAmB,qBAAO,GAAG,IAAIzB,IAAJ,CAAS,OAAI,CAACe,MAAL,CAAYjB,QAAZ,CAAqB7E,QAArB,EAAT,CAAV;AACAgF,gBAAE,GAAGhD,MAAM,CAACwE,OAAO,CAACvB,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAL;AACAC,gBAAE,GAAGnD,MAAM,CAACwE,OAAO,CAACpB,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAL,CA5BmE,CA4Bb;;AACtDG,kBAAI,GAAGmB,OAAO,CAAClB,WAAR,EAAP;AAEA,qBAAI,CAACmE,OAAL,GAAe,IAAI9R,OAAJ,CAAoB,UAACC,OAAD,EAAUyS,MAAV,EAAqB;AAAEzS,uBAAO,CAACuN,EAAE,GAAG,GAAL,GAAWH,EAAX,GAAgB,GAAhB,GAAsBK,IAAvB,CAAP;AAAsC,eAAjF,CAAf,CA/BmE,CAgCnE;AACA;AACD,aAlCD;AAmCD,WArCD;AAsCD;;;qCAEYb,I,EAAMC,U,EAAYC,W,EAAaC,K,EAAOC,U,EAAYC,Q,EAAU;AAAA;;AACvE,eAAKZ,SAAL,GAAiB,IAAjB;AAEAW,oBAAU,GAAG,KAAKc,UAAL,CAAgBd,UAAhB,CAAb;AACAnM,iBAAO,CAACkN,GAAR,CAAY,iCAAiCf,UAA7C;AAEAC,kBAAQ,GAAG,KAAKa,UAAL,CAAgBb,QAAhB,CAAX;AACApM,iBAAO,CAACkN,GAAR,CAAY,+BAA+Bd,QAA3C;AAEApM,iBAAO,CAACkN,GAAR,CAAYlB,UAAZ;AACAhM,iBAAO,CAACkN,GAAR,CAAYlB,UAAU,CAAC7R,EAAvB;;AACA,cAAI,CAAC,KAAK+W,UAAL,CAAgB/D,KAArB,EAA4B;AAC1B;AACD;;AAED,eAAKlC,aAAL,CAAmB4G,YAAnB,CAAgC,KAAK1X,EAArC,EAAyC4R,IAAzC,EAA+CE,WAA/C,EAA4DC,KAA5D,EAAmEC,UAAnE,EAA+EC,QAA/E,EAAyF5R,SAAzF,CAAmG,UAAAqV,GAAG,EAAI;AACxG;AACA,mBAAI,CAAC1E,oBAAL,CAA0B2G,wBAA1B,CAAmD,OAAI,CAACJ,eAAxD,EAAyE,OAAI,CAACvX,EAA9E,EAAkFK,SAAlF,CAA4F,YAAM;AAChGwF,qBAAO,CAACkN,GAAR,CAAY,oCAAZ;AACD,aAFD,EAFwG,CAKxG;;;AACA,mBAAI,CAAC/B,oBAAL,CAA0BqC,qBAA1B,CAAgDxB,UAAU,CAAC7R,EAA3D,EAA+D,OAAI,CAACA,EAApE,EAAwE,UAAxE,EAAoFK,SAApF,CAA8F,YAAM;AAClGwF,qBAAO,CAACkN,GAAR,CAAY,gCAAZ;AACD,aAFD;;AAGA,mBAAI,CAAC5B,MAAL,CAAYoC,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,WAVD;AAWD;;;oCAEWL,M,EAAgB;AAC1B,cAAIlB,UAAU,GAAG,IAAIG,IAAJ,CAASe,MAAM,CAAClB,UAAP,CAAkB5E,QAAlB,EAAT,CAAjB;AACA,cAAI6E,QAAQ,GAAG,IAAIE,IAAJ,CAASe,MAAM,CAACjB,QAAP,CAAgB7E,QAAhB,EAAT,CAAf;AAEA8F,gBAAM,CAAClB,UAAP,GAAoBA,UAAU,CAACwD,kBAAX,EAApB;AACAtC,gBAAM,CAACjB,QAAP,GAAkBA,QAAQ,CAACuD,kBAAT,EAAlB;AACD;;;mCAEU7B,I,EAAM;AACf,cAAIC,OAAO,GAAG,IAAIzB,IAAJ,CAASwB,IAAT,CAAd;AACA,cAAIvB,EAAE,GAAGhD,MAAM,CAACwE,OAAO,CAACvB,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAT;AACA,cAAIC,EAAE,GAAGnD,MAAM,CAACwE,OAAO,CAACpB,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAT,CAHe,CAG2C;;AAC1D,cAAIG,IAAI,GAAGmB,OAAO,CAAClB,WAAR,EAAX;AAEA,cAAImB,OAAO,GAAWpB,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBH,EAA9C;AACA,iBAAOyB,OAAP;AACD;;;0CAEiB3S,K,EAAO;AACvB,eAAKuQ,iBAAL,GAAyB,IAAzB;AACA,eAAKF,cAAL,GAAsB,IAAIxM,OAAJ,CAAoB,UAACC,OAAD,EAAU2N,MAAV,EAAqB;AAC7D3N,mBAAO,CAACoK,MAAM,CAAClO,KAAK,CAACsS,KAAP,CAAN,CAAoBlB,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,IAAuC,GAAvC,GAA6ClD,MAAM,CAAClO,KAAK,CAACuS,GAAP,CAAN,CAAkBnB,QAAlB,CAA2B,CAA3B,EAA8B,GAA9B,CAA7C,GAAkF,GAAlF,GAAwFpR,KAAK,CAACwS,IAA/F,CAAP;AACD,WAFqB,CAAtB;AAGD;;;wCAEexS,K,EAAO;AACrB,eAAKwQ,eAAL,GAAuB,IAAvB;AACA,eAAKF,YAAL,GAAoB,IAAIzM,OAAJ,CAAoB,UAACC,OAAD,EAAU2N,MAAV,EAAqB;AAC3D3N,mBAAO,CAACoK,MAAM,CAAClO,KAAK,CAACsS,KAAP,CAAN,CAAoBlB,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,IAAuC,GAAvC,GAA6ClD,MAAM,CAAClO,KAAK,CAACuS,GAAP,CAAN,CAAkBnB,QAAlB,CAA2B,CAA3B,EAA8B,GAA9B,CAA7C,GAAkF,GAAlF,GAAwFpR,KAAK,CAACwS,IAA/F,CAAP;AACD,WAFmB,CAApB;AAGD;;;4BAtGQ;AAAE,iBAAO,KAAKqD,UAAL,CAAgBjD,QAAvB;AAAkC;;;;;;;uBA/BlC6C,mB,EAAmB,4I,EAAA,+J,EAAA,kJ,EAAA,uH,EAAA,+H,EAAA,2H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,ulD;AAAA;AAAA;;;ACfhC;;AACA;;AACI;;AACI;;AAAI;;AAAkB;;AACtB;;AAEI;;AACI;;AAAkB;;AAAyB;;AAAC;;AAAO;;AAAI;;AACvD;;AAEA;;AAGJ;;AAEA;;AACI;;AACI;;AAAW;;AAAU;;AACrB;;AAEI;;AAAY;;AAAI;;AAChB;;;;AAEJ;;AACJ;;AACA;;AAAO;;AAAI;;AAAqB;;AAAhC;;AACA;;AAGJ;;AAEA;;AACI;;AAAyB;;AAAyB;;AAAC;;AAAO;;AAAW;;AACrE;;AAEA;;AAGJ;;AAEA;;AACI;;AAAmB;;AAAyB;;AAAC;;AAAO;;AAAe;;AACnE;;AAEA;;AAGJ;;AAEA;;AACI;;AAAwB;;AAAyB;;AAAC;;AAAO;;AAAU;;AACnE;;AACI;;AACI;AAAA,mBAAc,IAAA5C,iBAAA,QAAd;AAAuC,WAAvC;;;;;;AADJ;;AAKA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA,mBAAS,cAAT;AAAmB,WAAnB;;AAC5C;;AACtB;;AACA;;AAGJ;;AACJ;;AAEA;;AACI;;AAAsB;;AAAyB;;AAAC;;AAAO;;AAAQ;;AAC/D;;AACI;;AACI;AAAA,mBAAc,IAAAC,eAAA,QAAd;AAAqC,WAArC;;;;;;AADJ;;AAIA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA,mBAAS,cAAT;AAAoB,WAApB;;AAC5C;;AACtB;;AACA;;AAGJ;;AACJ;;AAEA;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAA0D,YAAA,8EAAT;AAAqH,WAArH;;AACwB;;AAAmC;;AAAa;;AAC5E;;AAAyD;;AAAyC;;AAAO;;AAC7G;;AACJ;;AACJ;;;;AAvFY;;AAAA;;AACE;;AAAA;;AAKM;;AAAA;;AACC;;AAAA;;AASG;;AAAA;;AAEY;;AAAA;;AAI+B;;AAAA;;AAC9C;;AAAA;;AAQD;;AAAA;;AACC;;AAAA;;AAQD;;AAAA;;AACC;;AAAA;;AAWG;;AAAA,8QAA4E,SAA5E,EAA4E,iHAA5E;;AAMC;;AAAA;;AAWQ;;AAAA,wQAAsE,SAAtE,EAAsE,+GAAtE;;AAMR;;AAAA;;;;;;;;;;sED/DZf,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTha,kBAAQ,EAAE,iBADD;AAETsX,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAAmB;;AAAkB;;AAA2B;;AAAyB;;AAAO;;;;;;AAA7E;;AAAA;;AAA6C;;AAAA;;;;;;;;AAcpD;;AACA;;AAAgB;;AAAuB;;AACvC;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAoB;;AACxB;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA,4FAAiE,UAAjE;AAA2E,SAA3E;;AAAsG;;AAAM;;AAClI;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0F;;AAAO;;AAC3H;;AACA;;;;;;AARgB;;AAAA;;AACZ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AALR;;AACI;;AAUJ;;;;;;AAVkB;;AAAA;;;;;;AAZ1B;;AACI;;AACI;;AACI;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAM;;AAC1B;;AACJ;;AACA;;AACI;;AAYJ;;AACJ;;;;;;AAbY;;AAAA;;;;;;AAgBR;;AAAwB;;AAAmB;;;;QDhBlC0D,0B;;;AAOX,0CAAoB5G,oBAApB,EAAwEF,aAAxE,EAA8GsD,KAA9G,EAAqI;AAAA;;AAAjH,aAAApD,oBAAA,GAAAA,oBAAA;AAAoD,aAAAF,aAAA,GAAAA,aAAA;AAAsC,aAAAsD,KAAA,GAAAA,KAAA;AAH9G,aAAAM,QAAA,GAAgB,EAAhB;AACA,aAAAmD,OAAA,GAAmB,KAAnB;AAEwI;;;;mCAE7H;AAAA;;AACT,eAAKzD,KAAL,CAAW4C,MAAX,CAAkB3W,SAAlB,CAA4B,UAAA2W,MAAM,EAAI;AACpC,mBAAI,CAAChX,EAAL,GAAUgX,MAAM,CAAChX,EAAjB;;AAEA,mBAAI,CAAC8Q,aAAL,CAAmBmG,aAAnB,CAAiC,OAAI,CAACjX,EAAtC,EAA0CK,SAA1C,CAAoD,UAACqV,GAAD,EAAiB;AACnE,qBAAI,CAACxC,MAAL,GAAcwC,GAAd;;AACA,kBAAG,OAAI,CAACxC,MAAL,CAAYnB,KAAZ,GAAoB,CAAvB,EAA0B;AACxB,uBAAI,CAAC8F,OAAL,GAAe,IAAf;AACAhS,uBAAO,CAACkN,GAAR,CAAY,eAAe,OAAI,CAAC8E,OAAhC;AACD;;AACDhS,qBAAO,CAACkN,GAAR,CAAY,OAAI,CAACG,MAAjB;;AACA,kBAAG,CAAC,OAAI,CAAC2E,OAAT,EAAiB;AACf,uBAAI,CAAC7G,oBAAL,CAA0ByE,qBAA1B,CAAgD,OAAI,CAACzV,EAArD,EAAyDK,SAAzD,CAAmE,UAAAqV,GAAG,EAAI;AACxE,yBAAI,CAAChB,QAAL,GAAgBgB,GAAhB;AACA7P,yBAAO,CAACkN,GAAR,CAAY,OAAI,CAAC2B,QAAjB;AACD,iBAHD;AAID;AACF,aAbD;AAcA;;;;;AAID,WArBD;AAsBD;;;yCAEgBoD,S,EAAWC,Q,EAAUnC,iB,EAAmB;AAAA;;AACvD;AACA,cAAIoC,GAAG,GAAGzB,OAAO,0BAAmBuB,SAAnB,kBAAjB;;AACA,cAAGE,GAAG,IAAI,IAAV,EAAe;AACb,iBAAKhH,oBAAL,CAA0BiH,uBAA1B,CAAkDH,SAAlD,EAA6DC,QAA7D,EAAuEnC,iBAAvE,EAA0FvV,SAA1F,CAAoG,UAAAqV,GAAG,EAAI;AACzG;AAEA;AACA,mBAAK,IAAIwC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACxD,QAAL,CAAcxS,MAAlC,EAA0CgW,CAAC,EAA3C,EAA8C;AAC5C,oBAAG,OAAI,CAACxD,QAAL,CAAcwD,CAAd,EAAiBV,UAAjB,KAAgCM,SAAnC,EAA8C;AAC5C,yBAAI,CAACpD,QAAL,CAAcgC,MAAd,CAAqBwB,CAArB,EAAwB,CAAxB;AACD;AACF;;AAED,qBAAI,CAACpH,aAAL,CAAmBqH,iBAAnB,CAAqCJ,QAArC,EAA+C,OAAI,CAAC7E,MAAL,CAAYnB,KAAZ,GAAoB,CAAnE,EAAsE1R,SAAtE,CAAgF,YAAM;AACpFwF,uBAAO,CAACkN,GAAR,CAAY,wBAAZ;AACA,uBAAI,CAACG,MAAL,CAAYnB,KAAZ,GAAoB,OAAI,CAACmB,MAAL,CAAYnB,KAAZ,GAAoB,CAAxC;AACD,eAHD;AAKD,aAfD;AAgBD;AACF;;;0CAEiB+F,S,EAAWC,Q,EAAU;AAAA;;AAErC,cAAIC,GAAG,GAAGzB,OAAO,2BAAoBuB,SAApB,kBAAjB;;AACA,cAAGE,GAAG,IAAI,IAAV,EAAe;AACb,iBAAKhH,oBAAL,CAA0B2G,wBAA1B,CAAmDG,SAAnD,EAA8DC,QAA9D,EAAwE1X,SAAxE,CAAkF,UAAAqV,GAAG,EAAI;AACvF;AAEA;AACA,mBAAK,IAAIwC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACxD,QAAL,CAAcxS,MAAlC,EAA0CgW,CAAC,EAA3C,EAA8C;AAC5C,oBAAG,OAAI,CAACxD,QAAL,CAAcwD,CAAd,EAAiBV,UAAjB,KAAgCM,SAAnC,EAA8C;AAC5C,yBAAI,CAACpD,QAAL,CAAcgC,MAAd,CAAqBwB,CAArB,EAAwB,CAAxB;AACD;AACF;AAEF,aAVD;AAWD;AACF;;;;;;;uBAzEUN,0B,EAA0B,kK,EAAA,mJ,EAAA,+H;AAAA,K;;;YAA1BA,0B;AAA0B,6C;AAAA,c;AAAA,a;AAAA,uZ;AAAA;AAAA;ACbvC;;AAEA;;AA0BA;;AAIA;;AAA+C;;AAAyC;;AAAO;;;;;;AAhC3F;;AAEiB;;AAAA,yFAAgC,UAAhC,EAAgC,KAAhC;;;;;;;;;sEDWRA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTjb,kBAAQ,EAAE,wBADD;AAETsX,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEbvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeoB;;AAAyD;;AAAa;;;;;;AAAb;;AAAA;;;;;;;;AAI7D;;AACI;;AAAgB;;AAAgB;;AAChC;;AAAqD;;AAAmB;;AACxE;;AAAqD;;AAAyC;;AAC9F;;AAAqD;;AAAiB;;AACtE;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA,mDAA6B,SAA7B;AAAsC,SAAtC;;AAAiE;;AACtD;;AAAY;;AAC7C;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA,mDAA6B,YAA7B;AAAyC,SAAzC;;AAAiE;;AACxC;;AAAe;;AAC9D;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA,mDAA6B,OAA7B;AAAoC,SAApC;;AAA+D;;AAChD;;AAAU;;AAC/C;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoD;;AACjC;;AAAM;;AACnD;;AACJ;;;;;;AAdoB;;AAAA;;AACqC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAkBzD;;AACI;;AAA+B;;AACvB;AAAA;;AAAA;;AAAA,4DAAgC,CAAhC;AAAiC,SAAjC;;AAAoC;;AAAQ;;AAAS;;AACjE;;;;;;;;AAEI;;AAAsB;;AACd;AAAA;;AAAA;;AAAA,4DAAgC,CAAhC;AAAiC,SAAjC;;AAAoC;;AAAQ;;AACpD;;;;;;;;AAGJ;;AACI;;AAAsB;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAK;;AAAS;;AACjG;;;;;;AADmF;;AAAA;;;;;;;;AAGnF;;AACI;;AAA+B;;AACvB;AAAA;;AAAA;;AAAA,4DAAgC,CAAhC;AAAiC,SAAjC;;AAAoC;;AAAI;;AAAS;;AAC7D;;;;;;;;AAEI;;AAAsB;;AAA0B;AAAA;;AAAA;;AAAA,4DAAgC,CAAhC;AAAiC,SAAjC;;AAAoC;;AAAI;;AACxF;;;;QD7CPkE,kB;;;AAaX,kCAAoBrH,cAApB,EAA4DI,MAA5D,EAAoFiD,KAApF,EAAmHC,qBAAnH,EAAyKrD,oBAAzK,EAAqN;AAAA;;AAAA;;AAAjM,aAAAD,cAAA,GAAAA,cAAA;AAAwC,aAAAI,MAAA,GAAAA,MAAA;AAAwB,aAAAiD,KAAA,GAAAA,KAAA;AAA+B,aAAAC,qBAAA,GAAAA,qBAAA;AAAsD,aAAArD,oBAAA,GAAAA,oBAAA;AATzK,aAAA0D,QAAA,GAAgB,EAAhB;AACA,aAAAH,gBAAA,GAAmB,CAAC,IAAD,EAAO,OAAP,EAAgB,MAAhB,EAAwB,MAAxB,EAAgC,SAAhC,CAAnB;AACA,aAAAC,IAAA,GAAO,CAAP;AACA,aAAAC,KAAA,GAAQ,EAAR;AAIA,aAAAE,aAAA,GAAgB,CAAhB;AAGE,aAAKN,qBAAL,CAA2BO,WAA3B,CAAuCvU,SAAvC,CAAiD,UAAAwU,CAAC;AAAA,iBAAI,OAAI,CAACD,WAAL,GAAmBC,CAAvB;AAAA,SAAlD;AACD;;;;mCAEU;AACT,cAAIL,IAAI,GAAG,KAAKJ,KAAL,CAAWU,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,KAA4C,KAAKR,IAA5D;AACA,eAAK6D,aAAL,CAAmB7D,IAAnB;AACA3O,iBAAO,CAACkN,GAAR,CAAY,KAAK6B,WAAjB;AACA,eAAKM,OAAL,GAAgB/B,IAAI,CAACgC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CC,IAA5C,IAAoD,OAApE;AACD;;;sCAEad,I,EAAM;AAAA;;AAClB,eAAKzD,cAAL,CAAoBuH,WAApB,CAAgC9D,IAAhC,EAAsC,KAAKG,aAA3C,EACGtU,SADH,CACa,UAAC0O,IAAD,EAAc;AACvB,mBAAI,CAAC2F,QAAL,GAAgB3F,IAAhB;AACA,mBAAI,CAACyF,IAAL,GAAYA,IAAZ;AACA,mBAAI,CAACsB,WAAL,GAAmB,OAAI,CAACpB,QAAL,CAAcqB,UAAd,CAAyBnO,OAA5C;AACA,mBAAI,CAACoO,QAAL,GAAgB,OAAI,CAACtB,QAAL,CAAcqB,UAAd,CAAyBC,QAAzC;AACA,mBAAI,CAACC,aAAL,GAAqB,IAAI9Q,KAAJ,CAAU,OAAI,CAAC6Q,QAAf,CAArB;AACA,mBAAI,CAACvB,KAAL,GAAayB,MAAM,CAACC,MAAP,CAAc,OAAI,CAACzB,QAAL,CAAcqB,UAA5B,CAAb;AAEAlQ,mBAAO,CAACkN,GAAR,CAAY,mBAAZ,EARuB,CAUvB;;AACA,mBAAI,CAAC5B,MAAL,CAAYoC,QAAZ,CAAqB,CAAC,kBAAD,EAAqB;AAAEiB,kBAAI,EAAEA;AAAR,aAArB,CAArB;AACD,WAbH;AAcD;;;0CAEiB6B,M,EAAQ;AAAA;;AACxB;AACA,cAAIA,MAAM,GAAG,CAAb,EAAgB;AACd;AACD;;AACD,eAAKtF,cAAL,CAAoBuH,WAApB,CAAgCjC,MAAhC,EAAwC,KAAK1B,aAA7C,EACGtU,SADH,CACa,YAAoB;AAAA,gBAAnB0O,IAAmB,uEAAP,EAAO;AAC7B,mBAAI,CAAC2F,QAAL,GAAgB3F,IAAhB;AACA,mBAAI,CAACyF,IAAL,GAAY6B,MAAZ;AACA,mBAAI,CAACP,WAAL,GAAmB,OAAI,CAACpB,QAAL,CAAcqB,UAAd,CAAyBnO,OAA5C;AACA,mBAAI,CAACoO,QAAL,GAAgB,OAAI,CAACtB,QAAL,CAAcqB,UAAd,CAAyBC,QAAzC;AAEAnQ,mBAAO,CAACkN,GAAR,CAAY,sBAAsBsD,MAAlC;;AAEA,mBAAI,CAAClF,MAAL,CAAYoC,QAAZ,CAAqB,CAAC,kBAAD,EAAqB;AAAEiB,kBAAI,EAAE,OAAI,CAACE,QAAL,CAAcqB,UAAd,CAAyBnO;AAAjC,aAArB,CAArB;AACD,WAVH;AAWD;;;mCAEU2Q,O,EAASC,O,EAAS;AAC3B3S,iBAAO,CAACkN,GAAR,CAAYwF,OAAZ;AACA,cAAME,cAAc,GAAG;AACrBzY,cAAE,EAAEuY,OAAO,CAACvY,EADS;AAErBsX,iBAAK,EAAEiB,OAAO,CAACjB,KAFM;AAGrBoB,kBAAM,EAAEH,OAAO,CAACG,MAHK;AAIrBC,kBAAM,EAAEJ,OAAO,CAACI,MAJK;AAKrBC,kBAAM,EAAE,IALa;AAMrBtD,gBAAI,EAAEkD;AANe,WAAvB;AAQA3S,iBAAO,CAACkN,GAAR,CAAY0F,cAAZ;AACA,eAAK1H,cAAL,CAAoB8H,aAApB,CAAkCJ,cAAlC,EAAkDpY,SAAlD,CAA4D,YAAM;AAChEwF,mBAAO,CAACkN,GAAR,CAAY,qBAAqBwF,OAAO,CAACvY,EAA7B,GAAkC,QAAlC,GAA6CuY,OAAO,CAACjD,IAArD,GAA4D,MAA5D,GAAqEkD,OAAjF;AACAM,iBAAK,CAAC,qBAAqBP,OAAO,CAACvY,EAA7B,GAAkC,aAAlC,GAAkDuY,OAAO,CAACjD,IAA1D,GAAiE,WAAjE,GAA+EkD,OAAhF,CAAL;AACD,WAHD;AAID;;;gCAEMxY,E,EAAI;AACT,eAAK+Q,cAAL,CAAoBgI,aAApB,CAAkC/Y,EAAlC,EAAsCK,SAAtC,CAAgD,YAAM;AACpDwF,mBAAO,CAACkN,GAAR,CAAY,6BAA6B/S,EAAzC;AACA8Y,iBAAK,CAAC,6BAA6B9Y,EAA9B,CAAL;AACD,WAHD;AAID;;;;;;;uBAjFUoY,kB,EAAkB,kJ,EAAA,uH,EAAA,+H,EAAA,gK,EAAA,kK;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,w3B;AAAA;AAAA;ACZ/B;;AACA;;AACI;;AAEI;;AAAI;;AAAY;;AAIhB;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAgBJ;;AACJ;;AAEA;;AACI;;AAEI;;AAIA;;AAMA;;AAIA;;AAIA;;AAKJ;;AACJ;;AAEJ;;AACJ;;;;;;;;AArDwB;;AAAA;;AAIJ;;AAAA;;AAsBU;;AAAA,0FAAiC,UAAjC,EAAiC,KAAjC;;AAUA;;AAAA;;AAIA;;AAAA,yGAA6C,UAA7C,EAA6C,KAA7C;;;;;;;;;sEDvCjBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTzb,kBAAQ,EAAE,eADD;AAETsX,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa8E,qB;;;AAIX,qCAAoB5E,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA;AAA0B;;;;mCAGnC;AAAA;;AACT,eAAKA,KAAL,CAAW4C,MAAX,CAAkB3W,SAAlB,CAA4B,UAAA2W,MAAM,EAAI;AACpC,mBAAI,CAACe,QAAL,GAAgBf,MAAM,CAAChX,EAAvB;AACD,WAFD;AAIA,eAAKoU,KAAL,CAAW6E,GAAX,CAAe5Y,SAAf,CAAyB,UAAA4Y,GAAG,EAAI;AAC9BpT,mBAAO,CAACkN,GAAR,CAAYkG,GAAZ;;AACA,gBAAIA,GAAG,CAAC,CAAD,CAAP,EAAY;AACV,qBAAI,CAACC,SAAL,GAAiBD,GAAG,CAAC,CAAD,CAAH,CAAO3I,IAAxB;AACD,aAFD,MAGK;AACH,qBAAI,CAAC4I,SAAL,GAAiB,MAAjB;AACD;;AACDrT,mBAAO,CAACkN,GAAR,CAAY,YAAY,OAAI,CAACmG,SAA7B;AACD,WATD;AAUD;;;6CAEoB;AACnBC,kBAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqC1W,KAArC,CAA2CsH,KAA3C,GAAmD,OAAnD;AACAmP,kBAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgC1W,KAAhC,CAAsC2W,UAAtC,GAAmD,OAAnD;AACAF,kBAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqC1W,KAArC,CAA2C4W,OAA3C,GAAqD,OAArD;AACAH,kBAAQ,CAACC,cAAT,CAAwB,KAAKF,SAA7B,EAAwCxW,KAAxC,CAA8CoC,KAA9C,GAAsD,SAAtD;AACAqU,kBAAQ,CAACC,cAAT,CAAwB,KAAKF,SAA7B,EAAwCxW,KAAxC,CAA8C6W,eAA9C,GAAgE,SAAhE;AACD;;;sCAEa;AACZ;AACAJ,kBAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqC1W,KAArC,CAA2C4W,OAA3C,GAAqD,MAArD;AACAH,kBAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqC1W,KAArC,CAA2CsH,KAA3C,GAAmD,GAAnD;AACAmP,kBAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgC1W,KAAhC,CAAsC2W,UAAtC,GAAmD,GAAnD;AACD;;;;;;;uBArCUL,qB,EAAqB,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,yP;AAAA;AAAA;ACRlC;;AACI;;AAA2F;;AAAc;;AACzG;;AAA0F;;AAAY;;AAC1G;;;;;;;;;sEDKaA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTrc,kBAAQ,EAAE,mBADD;AAETsX,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q","file":"modules-admin-admin-module-es5.js","sourcesContent":["import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Self, Attribute, Inject, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.MatFormField, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc6.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { CreateCourseComponent } from './create-course/create-course.component';\r\nimport { EditCourseComponent } from './edit-course/edit-course.component';\r\nimport { PendingEnrollmentComponent } from './pending-enrollment/pending-enrollment.component';\r\n\r\nimport { AuthenticationService as AuthGuard } from '@app/core/services/authentication.service';\r\nimport { PromotionComponent } from './promotion/promotion.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' } },\r\n  { path: 'create-course', component: CreateCourseComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' } },\r\n  { path: 'edit-course/:id', component: EditCourseComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' } },\r\n  { path: 'pending-enrollment/:id', component: PendingEnrollmentComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' } },\r\n  { path: 'promotion', component: PromotionComponent, canActivate: [AuthGuard], data: {expectedRole: 'admin' } }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { CreateCourseComponent } from './create-course/create-course.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { EditCourseComponent } from './edit-course/edit-course.component';\r\nimport { PendingEnrollmentComponent } from './pending-enrollment/pending-enrollment.component';\nimport { PromotionComponent } from './promotion/promotion.component';\nimport { SidebarAdminComponent } from './sidebar-admin/sidebar-admin.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CreateCourseComponent, DashboardComponent, EditCourseComponent, PendingEnrollmentComponent, PromotionComponent, SidebarAdminComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    MatSelectModule\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { CourseService } from '../../../core/services/course.service';\r\nimport { CourseDetailsService } from '@app/core/services/course-details.service';\r\nimport { StudentService } from '@app/core/services/student.service';\r\n\r\nimport { Course } from '@app/core/models/course.model';\r\nimport { start } from 'repl';\r\nimport { StudentCourseService } from '@app/core/services/student-course.service';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n  selector: 'app-create-course',\r\n  templateUrl: './create-course.component.html',\r\n  styleUrls: ['./create-course.component.scss']\r\n})\r\nexport class CreateCourseComponent implements OnInit {\r\n\r\n  courseForm: FormGroup;\r\n  labels = ['name', 'description', 'seats', 'start_date', 'end_date'];\r\n  submitted = false;\r\n  todayDate: Promise<string> | null = null;\r\n  startDateEvent: Promise<String> | null = null;\r\n  endDateEvent: Promise<String> | null = null;\r\n  startDateSelected = false;\r\n  endDateSelected = false;\r\n  instructors: Observable<any>;\r\n\r\n  constructor(private courseService: CourseService, private studentService: StudentService, private studentCourseService: StudentCourseService, private courseDetailsService: CourseDetailsService, private fb: FormBuilder, private router: Router) {\r\n    this.courseForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      instructor: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      seats: ['', Validators.required],\r\n      start_date: ['', Validators.required],\r\n      end_date: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get c() { return this.courseForm.controls; }\r\n\r\n  ngOnInit() {\r\n    let today = new Date();\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    let yyyy = today.getFullYear();\r\n\r\n    this.todayDate = new Promise<string>((resolve, reject) => { resolve(mm + '/' + dd + '/' + yyyy); });\r\n    //this.todayDate = mm + '/' + dd + '/' + yyyy;\r\n    //console.log(this.todayDate);\r\n    this.instructors = this.studentService.getInstructors();\r\n  }\r\n\r\n  /*changeInstructor(event){\r\n    console.log(event.target.value);\r\n    this.courseForm.setValue(event.target.value, {\r\n      onlySelf: true\r\n    })\r\n  }*/\r\n\r\n  addCourse(name, instructor, description, seats, start_date, end_date) {\r\n    this.submitted = true;\r\n\r\n    start_date = this.formatDate(start_date);\r\n    console.log(\"going to submit start_date: \" + start_date);\r\n\r\n    end_date = this.formatDate(end_date);\r\n    console.log(\"going to submit end_date: \" + end_date);\r\n\r\n    console.log(instructor);\r\n\r\n    console.log(instructor.id);\r\n    if (!this.courseForm.valid) {\r\n      console.log(\"invalid\");\r\n      return;\r\n    }\r\n\r\n    this.courseService.addCourse(name, description, seats, start_date, end_date).subscribe((course: Course) => {\r\n      console.log(\"course: \" + JSON.stringify(course));\r\n      this.studentCourseService.enrollStudentToCourse(instructor.id, course.id, 'enrolled').subscribe(() => {\r\n        console.log(\"instructor added to course\");\r\n      });\r\n      this.courseDetailsService.createCourseDetails(course.id, \"<p>Recommended inputs: Course Name, Instructor Name, Office (location/hours), Phone number, and email.</p>\").subscribe(() => {\r\n        console.log(\"course details created\");\r\n      });\r\n      this.router.navigate(['/admin/dashboard']);\r\n    });\r\n  }\r\n\r\n  onStartDateSelect(event) {\r\n    console.log(\"startDateSelected\");\r\n    this.startDateEvent = new Promise<String>((resolve, reject) => {\r\n      resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year);\r\n    });\r\n    this.startDateSelected = true;\r\n  }\r\n\r\n  onEndDateSelect(event) {\r\n    console.log(\"endDateSelected\");\r\n    this.endDateEvent = new Promise<String>((resolve, reject) => {\r\n      resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year);\r\n    });\r\n    this.endDateSelected = true;\r\n  }\r\n\r\n  formatDate(date) {\r\n    let newDate = new Date(date);\r\n    let dd = String(newDate.getDate()).padStart(2, '0');\r\n    let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    let yyyy = newDate.getFullYear();\r\n\r\n    let dateRes: String = yyyy + '-' + mm + '-' + dd;\r\n    return dateRes;\r\n  }\r\n\r\n}\r\n","<app-sidebar-admin></app-sidebar-admin>\r\n<div id=\"main\">\r\n    <div class=\"center-form\">\r\n        <h2>Create New Course</h2>\r\n        <form [formGroup]=\"courseForm\" class=\"col-sm-4\">\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"name\"><span style=\"color: red\">*</span>Name</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name\r\n                    [ngClass]=\"{ 'is-invalid': submitted && c.name.errors }\" required>\r\n                <div *ngIf=\"submitted && c.name.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"c.name.errors.required\">Name is required</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <mat-form-field>\r\n                    <mat-label>Instructor</mat-label>\r\n                    <mat-select formControlName=\"instructor\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && c.instructor.errors }\" required #instructor>\r\n                        <mat-option>None</mat-option>\r\n                        <mat-option *ngFor=\"let instructor of instructors | async\"\r\n                            [value]=\"{id: instructor.id, email: instructor.email}\">{{instructor.email}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <!--<input type=\"text\" class=\"form-control\"  formControlName=\"instructor\" #instructor [value]=\"instructor.email\" [ngClass]=\"{ 'is-invalid': submitted && c.instructor.errors }\" required>-->\r\n                <div *ngIf=\"submitted && c.instructor.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"c.instructor.errors.required\">Instructor is required</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"description\"><span style=\"color: red\">*</span>Description</label>\r\n                <textarea class=\"form-control\" formControlName=\"description\" #description\r\n                    [ngClass]=\"{ 'is-invalid': submitted && c.description.errors }\" required></textarea>\r\n                <div *ngIf=\"submitted && c.description.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"c.description.errors.required\">Description is required</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"seats\"><span style=\"color: red\">*</span>Number of Seats</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"seats\" #seats\r\n                    [ngClass]=\"{ 'is-invalid': submitted && c.seats.errors }\" required>\r\n                <div *ngIf=\"submitted && c.seats.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"c.seats.errors.required\">Seats is required</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"start_date\"><span style=\"color: red\">*</span>Start Date</label>\r\n                <div class=\"input-group\">\r\n                    <input class=\"form-control\" name=\"dp\" ngbDatepicker (dateSelect)=\"onStartDateSelect($event)\"\r\n                        #d=\"ngbDatepicker\" formControlName=\"start_date\" #start_date readonly\r\n                        [value]=\"startDateSelected ? (startDateEvent | async) : (todayDate | async)\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && c.start_date.errors }\" required>\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d.toggle()\"\r\n                            type=\"button\"></button>\r\n                    </div>\r\n                    <div *ngIf=\"submitted && c.start_date.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"c.start_date.errors.required\">Start Date is required</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\" data-provide=\"datepicker\">\r\n                <label for=\"end_date\"><span style=\"color: red\">*</span>End Date</label>\r\n                <div class=\"input-group\">\r\n                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" ngbDatepicker\r\n                        (dateSelect)=\"onEndDateSelect($event)\" #d2=\"ngbDatepicker\" formControlName=\"end_date\" #end_date\r\n                        readonly [value]=\"endDateSelected ? (endDateEvent | async) : (todayDate | async)\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && c.end_date.errors }\" required>\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d2.toggle()\"\r\n                            type=\"button\"></button>\r\n                    </div>\r\n                    <div *ngIf=\"submitted && c.end_date.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"c.end_date.errors.required\">End Date is required</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\"\r\n                (click)=\"addCourse(name.value, instructor.value, description.value, seats.value, start_date.value, end_date.value)\"\r\n                class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Create Course</button>\r\n            <a routerLink=\"/admin/dashboard\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Course } from '../../../core/models/course.model';\r\nimport { CourseService } from '../../../core/services/course.service';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { AuthenticationService } from '@app/core/services/authentication.service';\r\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\r\n\r\nimport { User } from '@app/core/models/user';\r\nimport decode from 'jwt-decode';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  currentUser: User;\r\n  isAdmin: Boolean;\r\n  tokenPayload;\r\n  courses: any = {};\r\n  displayedColumns = ['id', 'name', 'description', 'seats', 'start_date', 'end_date', 'Actions'];\r\n  page = 0;\r\n  pages = [];\r\n  students: number[] = [];\r\n  currentPage;\r\n  maxPages;\r\n  maxPagesArray;\r\n  numberPerPage = 5;\r\n\r\n  constructor(private courseService: CourseService, private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService, private studentCourseService: StudentCourseService) {\r\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n  }\r\n\r\n  ngOnInit() {\r\n    let page = this.route.snapshot.paramMap.get('page') || this.page;\r\n    this.fetchCourses(page);\r\n    console.log(this.currentUser);\r\n    this.isAdmin = (JSON.parse(localStorage.getItem(\"FB_user\")).role == 'admin');\r\n\r\n    /*\r\n    this.currentUser = this.authenticationService.currentUserValue;\r\n    if(this.currentUser){\r\n      this.tokenPayload = decode(this.currentUser.token);\r\n      this.isAdmin = (this.tokenPayload.role === \"admin\");\r\n      console.log(\"Current user in Admin: \" + JSON.stringify(this.currentUser));\r\n      console.log(\"tokenPayload: \" + JSON.stringify(this.tokenPayload));\r\n    }\r\n    */\r\n  }\r\n\r\n  pendingEnrollmentsNotification(courses: []) {\r\n    courses.forEach((course: Course, index, arr) => {\r\n      let start_date = new Date(course.start_date.toString());\r\n      let end_date = new Date(course.end_date.toString());\r\n\r\n      course.start_date = start_date.toLocaleDateString();\r\n      course.end_date = end_date.toLocaleDateString();\r\n      if (course.seats < 1) {\r\n        return;\r\n      }\r\n      this.students[index] = 0;\r\n      this.studentCourseService.getStudentsByCourseId(course.id).subscribe((res: []) => {\r\n        res.forEach((val: any) => {\r\n          if (val.enrollment_status == \"pending\") {\r\n            this.students[index]++;\r\n          }\r\n        })\r\n        console.log(course.name + \" pending students: \" + this.students[index]);\r\n        //this.students = res;\r\n        //console.log(\"i: \" + index + \" course: \" + JSON.stringify(course));\r\n        //console.log(this.students);\r\n      });\r\n    });\r\n  }\r\n\r\n  fetchCourses(page) {\r\n    this.courseService.getCourses(page, this.numberPerPage)\r\n      .subscribe((data: {}) => {\r\n        this.courses = data;\r\n        this.page = page;\r\n        this.currentPage = this.courses.pagination.current;\r\n        this.maxPages = this.courses.pagination.maxPages;\r\n        this.maxPagesArray = new Array(this.maxPages);\r\n        this.pages = Object.values(this.courses.pagination);\r\n\r\n        console.log('Data requested...');\r\n\r\n        this.pendingEnrollmentsNotification(this.courses.res);\r\n        this.router.navigate(['/admin/dashboard', { page: page }]);\r\n      });\r\n  }\r\n\r\n  fetchPageCourses(pageNo) {\r\n    //console.log(\"pageNo: \" + pageNo);\r\n    if (pageNo < 0) {\r\n      return;\r\n    }\r\n    this.courseService.getCourses(pageNo, this.numberPerPage)\r\n      .subscribe((data: any = {}) => {\r\n        this.courses = data;\r\n        this.page = pageNo;\r\n        this.currentPage = this.courses.pagination.current;\r\n        this.maxPages = this.courses.pagination.maxPages;\r\n\r\n        this.pendingEnrollmentsNotification(this.courses.res);\r\n\r\n        console.log('Data requested...' + pageNo);\r\n\r\n        this.router.navigate(['/admin/dashboard', { page: this.courses.pagination.current }]);\r\n      });\r\n  }\r\n\r\n  editCourse(id) {\r\n    this.router.navigate([`admin/edit-course/${id}`]);\r\n  }\r\n\r\n  deleteCourse(id) {\r\n    let r = confirm(`Delete Course ${id}: Are you sure?`);\r\n    if (r == true) {\r\n      this.courseService.deleteCourse(id).subscribe(() => {\r\n        //this.fetchCourses();\r\n      });\r\n      const item = this.courses.res.find(item => item.id === id);\r\n      this.courses.res.splice(this.courses.res.indexOf(item));\r\n    }\r\n  }\r\n\r\n  pendingEnrollment(id) {\r\n    this.router.navigate([`admin/pending-enrollment/${id}`]);\r\n  }\r\n\r\n}\r\n","<!-- <h2 class=\"center-form\">Admin Dashboard</h2> -->\r\n\r\n<!-- <div *ngIf=\"isAdmin\" class=\"center-form\"> -->\r\n\r\n<app-sidebar-admin></app-sidebar-admin>\r\n<div id=\"main\">\r\n    <div class=\"center-form\">\r\n        <!-- <div *ngIf=\"currentUser\"> -->\r\n        <h2>Course Manager</h2>\r\n        <nav class=\"nav flex-column col-sm-1\">\r\n            <a routerLink=\"/admin/create-course\" routerLinkActive=\"active\" class=\"nav-link btn btn-success\"><i\r\n                    class=\"fas fa-plus-circle\"></i> Create New Course</a>\r\n        </nav>\r\n\r\n        <!-- </div> -->\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let course of courses.res; let i = index\" class=\"trstyle\">\r\n                    <th scope=\"row\">{{ course.id }}</th>\r\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ course.name }}</td>\r\n                    <td style=\"max-width: 200px; word-wrap: break-word;\">{{ course.description }}</td>\r\n                    <td>{{ course.seats }}</td>\r\n                    <td>{{ course.start_date }}</td>\r\n                    <td>{{ course.end_date }}</td>\r\n                    <td>\r\n                        <button type=\"button\" (click)=\"editCourse(course.id)\" class=\"btn btn-primary\"><i\r\n                                class=\"fas fa-edit\"></i> Edit</button>\r\n                        <button type=\"button\" (click)=\"deleteCourse(course.id)\" class=\"btn btn-danger\"><i\r\n                                class=\"fas fa-minus-circle\"></i> Delete</button>\r\n                        <button type=\"button\" (click)=\"pendingEnrollment(course.id)\" class=\"btn btn-warning\"\r\n                            style=\"margin-left: 20px\"><span *ngIf=\"students[i] > 0\"\r\n                                class=\"badge badge-light\">{{students[i]}}</span> Pending Enrollments</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <nav aria-label=\"Page navigation course-library\">\r\n            <ul class=\"pagination\">\r\n\r\n                <ng-container *ngIf=\"page == 0; else elseBlock\">\r\n                    <li class=\"page-item disabled\"><button class=\"page-link\"\r\n                            (click)=\"fetchPageCourses(page-1)\">Previous</button></li>\r\n                </ng-container>\r\n                <ng-template #elseBlock>\r\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page-1)\">Previous</button>\r\n                    </li>\r\n                </ng-template>\r\n\r\n                <ng-container *ngFor=\"let maxPages of maxPagesArray; let i = index\">\r\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(i)\">{{i}}</button></li>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"page == maxPages - 1; else elseBlock2\">\r\n                    <li class=\"page-item disabled\"><button class=\"page-link\"\r\n                            (click)=\"fetchPageCourses(page+1)\">Next</button></li>\r\n                </ng-container>\r\n                <ng-template #elseBlock2>\r\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageCourses(page+1)\">Next</button>\r\n                    </li>\r\n                </ng-template>\r\n\r\n            </ul>\r\n        </nav>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { Course } from '@app/core/models/course.model';\r\nimport { CourseService } from '../../../core/services/course.service';\r\nimport { StudentCourseService } from '@app/core/services/student-course.service';\r\nimport { StudentService } from '@app/core/services/student.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-edit-course',\r\n  templateUrl: './edit-course.component.html',\r\n  styleUrls: ['./edit-course.component.scss']\r\n})\r\nexport class EditCourseComponent implements OnInit {\r\n\r\n  id: number;\r\n  course: Course;\r\n  updateForm: FormGroup;\r\n  submitted = false;\r\n  startDate: Promise<string> | null = null;\r\n  startDateSelected = false;\r\n  startDateEvent: Promise<String> | null = null;\r\n  endDate: Promise<string> | null = null;\r\n  endDateSelected = false;\r\n  endDateEvent: Promise<String> | null = null;\r\n  instructors: Observable<any>;\r\n  oldInstructor: String;\r\n  oldInstructorId: number;\r\n\r\n  constructor(private courseService: CourseService, private studentCourseService: StudentCourseService, private studentService: StudentService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\r\n    this.CreateForm();\r\n  }\r\n\r\n  CreateForm() {\r\n    this.updateForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      instructor: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      seats: ['', Validators.required],\r\n      start_date: ['', Validators.required],\r\n      end_date: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get cu() { return this.updateForm.controls; }\r\n\r\n  ngOnInit() {\r\n    this.instructors = this.studentService.getInstructors();\r\n    this.route.params.subscribe(params => {\r\n      this.id = params.id;\r\n      this.courseService.getCourseById(this.id).subscribe((res: Course) => {\r\n        this.course = res;\r\n\r\n        //console.log(this.course.start_date);\r\n\r\n        this.hDateFormat(this.course);\r\n\r\n        //console.log(this.course.start_date);\r\n\r\n        this.updateForm.get('name').setValue(this.course.name);\r\n        this.updateForm.get('description').setValue(this.course.description);\r\n        this.updateForm.get('seats').setValue(this.course.seats);\r\n\r\n        this.studentCourseService.getInstructorByCourseId(this.id).subscribe((instructor: any) => {\r\n          console.log(instructor);\r\n          //this.updateForm.get('instructor').setValue(instructor.email);\r\n          this.oldInstructor = instructor.email;\r\n          this.oldInstructorId = instructor.student_id;\r\n        })\r\n        let newDate = new Date(this.course.start_date.toString());\r\n        let dd = String(newDate.getDate()).padStart(2, '0');\r\n        let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        let yyyy = newDate.getFullYear();\r\n\r\n        this.startDate = new Promise<string>((resolve, reject) => { resolve(mm + '/' + dd + '/' + yyyy); });\r\n\r\n        newDate = new Date(this.course.end_date.toString());\r\n        dd = String(newDate.getDate()).padStart(2, '0');\r\n        mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        yyyy = newDate.getFullYear();\r\n\r\n        this.endDate = new Promise<string>((resolve, relect) => { resolve(mm + '/' + dd + '/' + yyyy); });\r\n        //this.updateForm.get('start_date').setValue(this.course.start_date);\r\n        //this.updateForm.get('end_date').setValue(this.course.end_date);\r\n      });\r\n    });\r\n  }\r\n\r\n  updateCourse(name, instructor, description, seats, start_date, end_date) {\r\n    this.submitted = true;\r\n\r\n    start_date = this.formatDate(start_date);\r\n    console.log(\"going to submit start_date: \" + start_date);\r\n\r\n    end_date = this.formatDate(end_date);\r\n    console.log(\"going to submit end_date: \" + end_date);\r\n\r\n    console.log(instructor);\r\n    console.log(instructor.id);\r\n    if (!this.updateForm.valid) {\r\n      return;\r\n    }\r\n\r\n    this.courseService.updateCourse(this.id, name, description, seats, start_date, end_date).subscribe(res => {\r\n      //remove old instructor\r\n      this.studentCourseService.declineStudentEnrollment(this.oldInstructorId, this.id).subscribe(() => {\r\n        console.log(\"Removed old instructor from course\");\r\n      });\r\n      //add new instructor\r\n      this.studentCourseService.enrollStudentToCourse(instructor.id, this.id, 'enrolled').subscribe(() => {\r\n        console.log(\"Added new instructor to course\");\r\n      });\r\n      this.router.navigate(['/admin/dashboard']);\r\n    });\r\n  }\r\n\r\n  hDateFormat(course: Course) {\r\n    let start_date = new Date(course.start_date.toString());\r\n    let end_date = new Date(course.end_date.toString());\r\n\r\n    course.start_date = start_date.toLocaleDateString();\r\n    course.end_date = end_date.toLocaleDateString();\r\n  }\r\n\r\n  formatDate(date) {\r\n    let newDate = new Date(date);\r\n    let dd = String(newDate.getDate()).padStart(2, '0');\r\n    let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    let yyyy = newDate.getFullYear();\r\n\r\n    let dateRes: String = yyyy + '-' + mm + '-' + dd;\r\n    return dateRes;\r\n  }\r\n\r\n  onStartDateSelect(event) {\r\n    this.startDateSelected = true;\r\n    this.startDateEvent = new Promise<String>((resolve, reject) => {\r\n      resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year);\r\n    });\r\n  }\r\n\r\n  onEndDateSelect(event) {\r\n    this.endDateSelected = true;\r\n    this.endDateEvent = new Promise<String>((resolve, reject) => {\r\n      resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year);\r\n    });\r\n  }\r\n\r\n}\r\n","<app-sidebar-admin></app-sidebar-admin>\r\n<div id=\"main\">\r\n    <div class=\"center-form\">\r\n        <h2>Edit Course {{id}}</h2>\r\n        <form [formGroup]=\"updateForm\" class=\"col-sm-4\">\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"name\"><span style=\"color: red\">*</span>Name</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name\r\n                    [ngClass]=\"{ 'is-invalid': submitted && cu.name.errors }\" required>\r\n                <div *ngIf=\"submitted && cu.name.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"cu.name.errors.required\">Name is required</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <mat-form-field>\r\n                    <mat-label>Instructor</mat-label>\r\n                    <mat-select formControlName=\"instructor\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && cu.instructor.errors }\" required #instructor>\r\n                        <mat-option>None</mat-option>\r\n                        <mat-option *ngFor=\"let instructor of instructors | async\"\r\n                            [value]=\"{id: instructor.id, email: instructor.email}\">{{instructor.email}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <span> <br>Previous Instructor: <input type=\"text\" [value]=\"oldInstructor\" disabled></span>\r\n                <div *ngIf=\"submitted && cu.instructor.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"cu.instructor.errors.required\">Instructor is required</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"description\"><span style=\"color: red\">*</span>Description</label>\r\n                <textarea class=\"form-control\" formControlName=\"description\" #description\r\n                    [ngClass]=\"{ 'is-invalid': submitted && cu.description.errors }\" required></textarea>\r\n                <div *ngIf=\"submitted && cu.description.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"cu.description.errors.required\">Description is required</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"seats\"><span style=\"color: red\">*</span>Number of Seats</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"seats\" #seats\r\n                    [ngClass]=\"{ 'is-invalid': submitted && cu.seats.errors }\" required>\r\n                <div *ngIf=\"submitted && cu.seats.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"cu.seats.errors.required\">Seats is required</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"start_date\"><span style=\"color: red\">*</span>Start Date</label>\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" ngbDatepicker\r\n                        (dateSelect)=\"onStartDateSelect($event)\" #d=\"ngbDatepicker\" formControlName=\"start_date\"\r\n                        #start_date readonly\r\n                        [value]=\"startDateSelected ? (startDateEvent | async) : (startDate | async)\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && cu.start_date.errors }\" required>\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d.toggle()\"\r\n                            type=\"button\"></button>\r\n                    </div>\r\n                    <div *ngIf=\"submitted && cu.start_date.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"cu.start_date.errors.required\">Start Date is required</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"end_date\"><span style=\"color: red\">*</span>End Date</label>\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" ngbDatepicker\r\n                        (dateSelect)=\"onEndDateSelect($event)\" #d2=\"ngbDatepicker\" formControlName=\"end_date\" #end_date\r\n                        readonly [value]=\"endDateSelected ? (endDateEvent | async) : (endDate | async)\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && cu.end_date.errors }\" required>\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d2.toggle()\"\r\n                            type=\"button\"></button>\r\n                    </div>\r\n                    <div *ngIf=\"submitted && cu.end_date.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"cu.end_date.errors.required\">End Date is required</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\"\r\n                (click)=\"updateCourse(name.value, instructor.value, description.value, seats.value, start_date.value, end_date.value)\"\r\n                class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Course</button>\r\n            <a routerLink=\"/admin/dashboard\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit, ɵINJECTOR_IMPL__POST_R3__ } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\r\nimport { CourseService } from 'src/app/core/services/course.service';\r\n\r\nimport { Course } from '@app/core/models/course.model';\r\n\r\n@Component({\r\n  selector: 'app-pending-enrollment',\r\n  templateUrl: './pending-enrollment.component.html',\r\n  styleUrls: ['./pending-enrollment.component.scss']\r\n})\r\nexport class PendingEnrollmentComponent implements OnInit {\r\n\r\n  id: number;\r\n  course: Course;\r\n  students: any = [];\r\n  noSeats: Boolean = false;\r\n\r\n  constructor(private studentCourseService: StudentCourseService, private courseService: CourseService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.id = params.id;\r\n\r\n      this.courseService.getCourseById(this.id).subscribe((res: Course) => {\r\n        this.course = res;\r\n        if(this.course.seats < 1) {\r\n          this.noSeats = true;\r\n          console.log(\"no seats: \" + this.noSeats);\r\n        }\r\n        console.log(this.course);\r\n        if(!this.noSeats){\r\n          this.studentCourseService.getStudentsByCourseId(this.id).subscribe(res => {\r\n            this.students = res;\r\n            console.log(this.students);\r\n          });\r\n        }\r\n      })\r\n      /*this.studentCourseService.getStudentsByCourseId(this.id).subscribe(res => {\r\n        this.students = res;\r\n        //console.log(this.students);\r\n      });*/\r\n    });\r\n  }\r\n\r\n  acceptEnrollment(studentId, courseId, enrollment_status) {\r\n    // Update student enrollment_status = 'enrolled'\r\n    let ret = confirm(`Accept student ${studentId} enrollment?`);\r\n    if(ret == true){\r\n      this.studentCourseService.acceptStudentEnrollment(studentId, courseId, enrollment_status).subscribe(res => {\r\n        //alert(`Accepted student ${studentId} enrollment`);\r\n\r\n        // remove student from view\r\n        for (var i = 0; i < this.students.length; i++){\r\n          if(this.students[i].student_id === studentId) {\r\n            this.students.splice(i, 1);\r\n          }\r\n        }\r\n\r\n        this.courseService.updateCourseSeats(courseId, this.course.seats - 1).subscribe(() => {\r\n          console.log(\"seats decremented by 1\");\r\n          this.course.seats = this.course.seats - 1;\r\n        })\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  declineEnrollment(studentId, courseId) {\r\n\r\n    let ret = confirm(`Decline student ${studentId} enrollment?`);\r\n    if(ret == true){\r\n      this.studentCourseService.declineStudentEnrollment(studentId, courseId).subscribe(res => {\r\n        //alert(`Declined student ${studentId} enrollment`);\r\n\r\n        // remove student from view\r\n        for (var i = 0; i < this.students.length; i++){\r\n          if(this.students[i].student_id === studentId) {\r\n            this.students.splice(i, 1);\r\n          }\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<h2 *ngIf=\"course\">{{ course.name }} <span style=\"float: right\">Seats: {{ course.seats }}</span></h2>\r\n\r\n<table class=\"table\" *ngIf=\"!noSeats; else elseBlock\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">studentID</th>\r\n            <th scope=\"col\">email</th>\r\n            <th scope=\"col\">First Name</th>\r\n            <th scope=\"col\">Last Name</th>\r\n            <th scope=\"col\">Enroll</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let student of students\">\r\n            <ng-container *ngIf=\"student.enrollment_status == 'pending'\">\r\n            <th scope=\"row\">{{ student.student_id}}</th>\r\n            <td>{{ student.email }}</td>\r\n            <td>{{ student.f_name }}</td>\r\n            <td>{{ student.l_name }}</td>\r\n            <td>\r\n                <button type=\"button\" (click)=\"acceptEnrollment(student.student_id, student.course_id, 'enrolled')\" class=\"btn btn-success\">Accept</button>\r\n                <button type=\"button\" (click)=\"declineEnrollment(student.student_id, student.course_id)\" class=\"btn btn-danger\">Decline</button>\r\n            </td>\r\n            </ng-container>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<ng-template #elseBlock>\r\n    <h2 class=\"center-form\">No seats available!</h2>\r\n</ng-template>\r\n\r\n<a routerLink=\"/admin\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { StudentService } from '@app/core/services/student.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\n\nimport { User } from '@app/core/models/user';\n\n\n\n@Component({\n  selector: 'app-promotion',\n  templateUrl: './promotion.component.html',\n  styleUrls: ['./promotion.component.scss']\n})\nexport class PromotionComponent implements OnInit {\n  currentUser: User;\n  isAdmin: Boolean;\n  tokenPayload;\n  students: any = {};\n  displayedColumns = ['id', 'Email', 'Name', 'Role', 'Actions'];\n  page = 0;\n  pages = [];\n  currentPage;\n  maxPages;\n  maxPagesArray;\n  numberPerPage = 5;\n\n  constructor(private studentService: StudentService, private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService, private studentCourseService: StudentCourseService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  ngOnInit() {\n    let page = this.route.snapshot.paramMap.get('page') || this.page;\n    this.fetchStudents(page);\n    console.log(this.currentUser);\n    this.isAdmin = (JSON.parse(localStorage.getItem(\"FB_user\")).role == 'admin');\n  }\n\n  fetchStudents(page) {\n    this.studentService.getStudents(page, this.numberPerPage)\n      .subscribe((data: {}) => {\n        this.students = data;\n        this.page = page;\n        this.currentPage = this.students.pagination.current;\n        this.maxPages = this.students.pagination.maxPages;\n        this.maxPagesArray = new Array(this.maxPages);\n        this.pages = Object.values(this.students.pagination);\n\n        console.log('Data requested...');\n\n        //this.pendingEnrollmentsNotification(this.courses.res);\n        this.router.navigate(['/admin/promotion', { page: page }]);\n      });\n  }\n\n  fetchPageStudents(pageNo) {\n    //console.log(\"pageNo: \" + pageNo);\n    if (pageNo < 0) {\n      return;\n    }\n    this.studentService.getStudents(pageNo, this.numberPerPage)\n      .subscribe((data: any = {}) => {\n        this.students = data;\n        this.page = pageNo;\n        this.currentPage = this.students.pagination.current;\n        this.maxPages = this.students.pagination.maxPages;\n\n        console.log('Data requested...' + pageNo);\n\n        this.router.navigate(['/admin/promotion', { page: this.students.pagination.current }]);\n      });\n  }\n\n  updateRole(student, newRole) {\n    console.log(student);\n    const updatedStudent = {\n      id: student.id,\n      email: student.email,\n      f_name: student.f_name,\n      l_name: student.l_name,\n      active: null,\n      role: newRole\n    }\n    console.log(updatedStudent);\n    this.studentService.updateStudent(updatedStudent).subscribe(() => {\n      console.log(\"changed student \" + student.id + \" from \" + student.role + \" to \" + newRole);\n      alert(\"changed student \" + student.id + \" from role \" + student.role + \" to role \" + newRole);\n    });\n  }\n\n  delete(id) {\n    this.studentService.deleteStudent(id).subscribe(() => {\n      console.log(\"deleted student with id \" + id);\n      alert(\"deleted student with id \" + id);\n    });\n  }\n}\n\n","<!-- <h2 class=\"center-form\">Admin Dashboard</h2> -->\n\n<!-- <div *ngIf=\"isAdmin\" class=\"center-form\"> -->\n\n<app-sidebar-admin></app-sidebar-admin>\n<div id=\"main\">\n    <div class=\"center-form\">\n        <!-- <div *ngIf=\"currentUser\"> -->\n        <h2>User Manager</h2>\n\n        <!-- </div> -->\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let colName of displayedColumns\" scope=\"col\">{{ colName }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let student of students.res; let i = index\" class=\"trstyle\">\n                    <th scope=\"row\">{{ student.id }}</th>\n                    <td style=\"max-width: 250px; word-wrap: break-word;\">{{ student.email }}</td>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ student.f_name }} {{ student.l_name }}</td>\n                    <td style=\"max-width: 125px; word-wrap: break-word;\">{{ student.role}}</td>\n                    <td>\n                        <button type=\"button\" (click)=\"updateRole(student, 'student')\" class=\"btn btn-primary\"><i\n                                class=\"fas fa-user\"></i> Make Student</button>\n                        <button type=\"button\" (click)=\"updateRole(student, 'instructor')\" class=\"btn btn-info\"><i\n                                class=\"fas fa-chalkboard-teacher\"></i> Make Instructor</button>\n                        <button type=\"button\" (click)=\"updateRole(student, 'admin')\" class=\"btn btn-warning\"><i\n                                class=\"fas fa-user-cog\"></i> Make Admin</button>\n                        <button type=\"button\" (click)=\"delete(student.id)\" class=\"btn btn-danger\"><i\n                                class=\"fas fa-minus-circle\"></i> Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <nav aria-label=\"Page navigation course-library\">\n            <ul class=\"pagination\">\n\n                <ng-container *ngIf=\"page == 0; else elseBlock\">\n                    <li class=\"page-item disabled\"><button class=\"page-link\"\n                            (click)=\"fetchPageStudents(page-1)\">Previous</button></li>\n                </ng-container>\n                <ng-template #elseBlock>\n                    <li class=\"page-item\"><button class=\"page-link\"\n                            (click)=\"fetchPageStudents(page-1)\">Previous</button>\n                    </li>\n                </ng-template>\n\n                <ng-container *ngFor=\"let maxPages of maxPagesArray; let i = index\">\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageStudents(i)\">{{i}}</button></li>\n                </ng-container>\n\n                <ng-container *ngIf=\"page == maxPages - 1; else elseBlock2\">\n                    <li class=\"page-item disabled\"><button class=\"page-link\"\n                            (click)=\"fetchPageStudents(page+1)\">Next</button></li>\n                </ng-container>\n                <ng-template #elseBlock2>\n                    <li class=\"page-item\"><button class=\"page-link\" (click)=\"fetchPageStudents(page+1)\">Next</button>\n                    </li>\n                </ng-template>\n\n            </ul>\n        </nav>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar-admin',\n  templateUrl: './sidebar-admin.component.html',\n  styleUrls: ['./sidebar-admin.component.scss']\n})\nexport class SidebarAdminComponent implements OnInit {\n\n  courseId: number;\n  routeName: string;\n  constructor(private route: ActivatedRoute) { };\n\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n    });\n\n    this.route.url.subscribe(url => {\n      console.log(url);\n      if (url[0]) {\n        this.routeName = url[0].path;\n      }\n      else {\n        this.routeName = 'home';\n      }\n      console.log(\"ROUTE: \" + this.routeName);\n    });\n  }\n\n  ngAfterViewChecked() {\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\n    document.getElementById(\"mySidenav\").style.display = \"block\";\n    document.getElementById(this.routeName).style.color = \"#ffffff\";\n    document.getElementById(this.routeName).style.backgroundColor = \"#2d3d97\";\n  }\n\n  ngOnDestroy() {\n    //console.log(\"sidebar destroy\");\n    document.getElementById(\"mySidenav\").style.display = \"none\";\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n    document.getElementById(\"main\").style.marginLeft = \"0\";\n  }\n}\n","<div id=\"mySidenav\" class=\"sidenav\">\n    <a class=\"nav-link\" id=\"dashboard\" routerLink=\"/admin/dashboard\" routerLinkActive=\"active\">Course Manager</a>\n    <a class=\"nav-link\" id=\"promotion\"routerLink=\"/admin/promotion\" routerLinkActive=\"active\">User Manager</a>   \n</div>\n"]}