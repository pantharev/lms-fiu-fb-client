{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js","./src/app/core/services/announcement.service.ts","./src/app/core/services/course-announcement.service.ts","./src/app/core/services/discussion.service.ts","./src/app/core/services/module.service.ts","./src/app/core/services/pdf.service.ts","./src/app/core/services/survey.service.ts","./src/app/core/services/video.service.ts","./src/app/modules/course/announcementsManagement/announcements/announcements.component.ts","./src/app/modules/course/announcementsManagement/announcements/announcements.component.html","./src/app/modules/course/announcementsManagement/create-announcement/create-announcement.component.ts","./src/app/modules/course/announcementsManagement/create-announcement/create-announcement.component.html","./src/app/modules/course/announcementsManagement/edit-announcement/edit-announcement.component.ts","./src/app/modules/course/announcementsManagement/edit-announcement/edit-announcement.component.html","./src/app/modules/course/announcementsManagement/view-created-announcements/view-created-announcements.component.ts","./src/app/modules/course/announcementsManagement/view-created-announcements/view-created-announcements.component.html","./src/app/modules/course/course-routing.module.ts","./src/app/modules/course/course.module.ts","./src/app/modules/course/dashboard/dashboard.component.ts","./src/app/modules/course/dashboard/dashboard.component.html","./src/app/modules/course/home-edit/home-edit.component.ts","./src/app/modules/course/home-edit/home-edit.component.html","./src/app/modules/course/home/home.component.ts","./src/app/modules/course/home/home.component.html","./src/app/modules/course/leaderboard/leaderboard.component.ts","./src/app/modules/course/leaderboard/leaderboard.component.html","./src/app/modules/course/modules/modules.component.ts","./src/app/modules/course/modules/modules.component.html","./src/app/modules/course/modulesDiscussion/create-post/create-post.component.ts","./src/app/modules/course/modulesDiscussion/create-post/create-post.component.html","./src/app/modules/course/modulesDiscussion/discussion/discussion.component.ts","./src/app/modules/course/modulesDiscussion/discussion/discussion.component.html","./src/app/modules/course/modulesDiscussion/edit-post/edit-post.component.ts","./src/app/modules/course/modulesDiscussion/edit-post/edit-post.component.html","./src/app/modules/course/modulesManagement/create-module/create-module.component.ts","./src/app/modules/course/modulesManagement/create-module/create-module.component.html","./src/app/modules/course/modulesManagement/edit-module/edit-module.component.ts","./src/app/modules/course/modulesManagement/edit-module/edit-module.component.html","./src/app/modules/course/sidebar-button/sidebar-button.component.ts","./src/app/modules/course/sidebar-button/sidebar-button.component.html","./src/app/modules/course/sidebar/sidebar.component.ts","./src/app/modules/course/sidebar/sidebar.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;AAC1C;AACiB;AACmB;AACjC;;AAEpD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACQ;AAChD;AACA;AACA,oBAAoB,8DAAuB,EAAE,qBAAqB;AAClE,oBAAoB,8DAAuB,EAAE,4CAA4C,kCAAkC,EAAE,EAAE;AAC/H,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB,iBAAiB;AACjB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,sDAAe,CAAC,8DAAe,GAAG;AACxH;AACA;AACA,KAAK,OAAO,8DAAQ;AACpB;AACA,wCAAwC,wEAAkB,EAAE,2CAA2C,yBAAyB,8DAAQ,CAAC,8DAAQ,GAAG,EAAE,2CAA2C;AACjM,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,8DAAe,EAAE,EAAE,EAAE,QAAQ,EAAE;AACrE,WAAW,EAYV;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA,yBAAyB,EAAE;AAC3B,sCAAsC,MAAM,EAAE,eAAe,GAAG;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAYV;AACD;AACA;AACA;AACA;AACA,oCAAoC;AACpC,WAAW,EAWV;AACD;AACA;AACA;AACA,kBAAkB;AAClB,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,yEAAW;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,yEAAW;AAChD,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,8BAA8B,0DAAa;AAC3C;AACA,0BAA0B,mDAAM,sBAAsB,2DAAI,2BAA2B,2DAAI,KAAK,mEAAY;AAC1G,oCAAoC,0DAAG;AACvC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,+CAAU;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS,QAAQ,gEAAS,OAAO,0DAAG;AACpC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,uBAAuB,kCAAkC,KAAK,gEAAS;AACvE;AACA,mBAAmB,EAAE;AACrB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,sDAAe,gBAAgB,sDAAe,CAAC,oDAAa,GAAG;AACvK;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,OAAO,oDAAM;AAClB;AACA,8CAA8C,wEAAkB,EAAE,iDAAiD,+BAA+B,8DAAQ,gBAAgB,8DAAQ,CAAC,oDAAM,GAAG,EAAE,iDAAiD;AAC/O,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,qBAAqB,GAAG,OAAO,oDAAa,EAAE,EAAE,EAAE,QAAQ,EAAE;AAC3F,WAAW,EAuBV;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEuE;;AAEvE,kC;;;;;;;;;;;;AC9aA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkG;AAC6E;AAC5E;AAClD;AACK;AACX;;AAE3C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACwC;AACQ;AAChD,wBAAwB,6FAA+B,EAAE,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,0CAAK;AACxB;AACA,mBAAmB,EAAE;AACrB,wBAAwB,2EAAa;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B,4CAAO;AAClC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,mCAAmC,qBAAqB,EAAE,yCAAyC;AACnG;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,mCAAmC,qBAAqB,EAAE,0CAA0C;AACpG;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,2EAAa;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,sDAAe,CAAC,8DAAe,GAAG,sDAAe,CAAC,oDAAa,GAAG;AACjK;AACA;AACA,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM;AAClB;AACA,2CAA2C,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,CAAC,8DAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,EAAE,8CAA8C;AAC/N,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,8DAAe,EAAE,GAAG,OAAO,oDAAa,EAAE,EAAE,EAAE,QAAQ,EAAE;AAC9F,WAAW,EAgBV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,mBAAmB;AAC3K,mBAAmB,+DAAwB,EAAE,oEAAoE,6BAA6B,EAAE;AAChJ;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,mBAAmB,OAAO,oDAAM,EAAE;AAClC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,wBAAwB,EAAE,EAAE,GAAG;AAC3F,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,kFAAoB;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,kFAAoB;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB,mFAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,gBAAgB,sDAAS;AACzB,0BAA0B,gEAAS,MAAM,gEAAS;AAClD;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,mBAAmB,EAAE;AACrB;AA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AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAYV;AACD,WAAW,EAAE;AACb,2BAA2B,8EAAe;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,aAAa,oFAAsB;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,iBAAiB;AAC/B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oFAAsB;AACzD,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,uCAAuC;AACxD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;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CJ;AAC1C;AACA;AACA;AACA;AACA,kBAAkB,oEAAO;AACzB,QAAQ,kEAAK,0BAA0B,kEAAK,EAAE,oCAAoC;AAClF,QAAQ,kEAAK,YAAY,kEAAK,EAAE,wBAAwB;AACxD,QAAQ,uEAAU,iBAAiB,oEAAO,qCAAqC,sEAAS;AACxF,YAAY,kEAAK,EAAE,+CAA+C;AAClE,YAAY,kEAAK,EAAE,sDAAsD;AACzE,YAAY,kEAAK,EAAE,+CAA+C;AAClE;AACA,QAAQ,uEAAU,gBAAgB,oEAAO,qCAAqC,kEAAK,EAAE,aAAa;AAClG;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,+BAA+B,6FAA+B,EAAE,gBAAgB;AAChF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA,UAAU;AACV;AACA,wCAAwC,4DAAc;AACtD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,qCAAqC;AACpF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,WAAW,EAWV;AACD;AACA;AACA,UAAU;AACV;AACA,wCAAwC,4DAAc;AACtD;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6CAAO;AACrC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8DAA8D,4DAAM,KAAK,4EAAc;AACvF;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,yBAAyB,EAAE,4DAA4D,EAAE;AACzF;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2CAA2C,oEAAe;AAC1D;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iEAAS;AAC/C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE,iBAAiB,EAAE;AAC1D,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4DAAI,KAAK,iEAAS;AAChF,wBAAwB;AACxB;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;A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CA;AACA;AACA;AACA,2BAA2B,6CAAO;AAClC;AACA;AACA;AACA,2DAA2D,+DAAW;AACtE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,sEAAyB,GAAG;AAC3M,wBAAwB,+DAAwB,EAAE,iLAAiL;AACnO,QAAQ,wDAAiB,gEAAgE,qCAAqC,EAAE,SAAS,2DAAoB;AAC7J,KAAK;AACL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,wHAAwH;AAC/H,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,4FAA4F,8BAA8B,EAAE,iGAAiG,mCAAmC,EAAE;AAC3R,QAAQ,oDAAa;AACrB,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,KAAK;AACL;AACA,qCAAqC,yDAAkB;AACvD,QAAQ,yDAAkB;AAC1B,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,+DAAwB;AAChC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","file":"modules-course-course-module-es2015.js","sourcesContent":["import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Options used to bind passive event listeners.\n * @type {?}\n */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n * @type {?}\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\nfunction MatTooltipDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.showDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.hideDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.touchendHideDelay;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.touchGestures;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.position;\n}\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, \n    /**\n     * @deprecated _hammerLoader parameter to be removed.\n     * @breaking-change 9.0.0\n     */\n    // Note that we need to give Angular something to inject here so it doesn't throw.\n    _hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /**\n         * Manually-bound passive event listeners.\n         */\n        this._passiveListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n        });\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _focusMonitor.monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        }));\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        // This needs to happen in `ngOnInit` so the initial values for all inputs have been set.\n        this._setupPointerEvents();\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        }));\n        this._passiveListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /**\n     * Binds the pointer events to the tooltip trigger.\n     * @private\n     * @return {?}\n     */\n    _setupPointerEvents() {\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._passiveListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            /** @type {?} */\n            const touchendListener = (/**\n             * @return {?}\n             */\n            () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            });\n            this._passiveListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', (/**\n             * @return {?}\n             */\n            () => {\n                // Note that it's important that we don't `preventDefault` here,\n                // because it can prevent click events from firing on the element.\n                clearTimeout(this._touchstartTimeout);\n                this._touchstartTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.show()), LONGPRESS_DELAY);\n            }));\n        }\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        }));\n    }\n    /**\n     * Disables the native browser gestures, based on how the tooltip has been configured.\n     * @private\n     * @return {?}\n     */\n    _disableNativeGesturesIfNecessary() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const style = element.style;\n        /** @type {?} */\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    ((/** @type {?} */ (style))).MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                ((/** @type {?} */ (style))).webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip'\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_hideDelay;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_showDelay;\n    /** @type {?} */\n    MatTooltip.prototype._overlayRef;\n    /** @type {?} */\n    MatTooltip.prototype._tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._tooltipClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollStrategy;\n    /**\n     * The default delay in ms before showing the tooltip after show is called\n     * @type {?}\n     */\n    MatTooltip.prototype.showDelay;\n    /**\n     * The default delay in ms before hiding the tooltip after hide is called\n     * @type {?}\n     */\n    MatTooltip.prototype.hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     * @type {?}\n     */\n    MatTooltip.prototype.touchGestures;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._message;\n    /**\n     * Manually-bound passive event listeners.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._passiveListeners;\n    /**\n     * Timer started at the last `touchstart` event.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._touchstartTimeout;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._destroyed;\n    /**\n     * Handles the keydown events on the host element.\n     * Needs to be an arrow function so that we can use it in addEventListener.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._handleKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._defaultOptions;\n}\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\nif (false) {\n    /**\n     * Message to display in the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype.message;\n    /**\n     * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    TooltipComponent.prototype.tooltipClass;\n    /**\n     * The timeout ID of any current timer set to show the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._showTimeoutId;\n    /**\n     * The timeout ID of any current timer set to hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._hideTimeoutId;\n    /**\n     * Property watched by the animation framework to show or hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._visibility;\n    /**\n     * Whether interactions on the page should close the tooltip\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._closeOnInteraction;\n    /**\n     * Subject for notifying that the tooltip has been hidden from the view\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._onHide;\n    /**\n     * Stream that emits whether the user has a handset-sized display.\n     * @type {?}\n     */\n    TooltipComponent.prototype._isHandset;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._breakpointObserver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip,\n        TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip,\n        TooltipComponent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { BehaviorSubject } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnnouncementService {\n\n  private checkedCourses = new BehaviorSubject([0]);\n  sharedCheckedCourses = this.checkedCourses.asObservable();\n  private editCourses = new BehaviorSubject([{}]);\n  sharedEditCourses = this.editCourses.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  nextCheckedCourses(checkedCourses: number[]){\n    this.checkedCourses.next(checkedCourses);\n  }\n\n  nextEditCourses(editCourses: Object[]){\n    this.editCourses.next(editCourses);\n  }\n\n  createAnnouncement(user, content, created, changed, user_id){\n    let announcement = {\n      user: user,\n      content: content,\n      created: created,\n      changed: changed,\n      user_id: user_id\n    };\n    return this.http.post(`${environment.apiURL}/announcements`, announcement);\n  }\n\n  fetchAnnouncements(){\n    return this.http.get(`${environment.apiURL}/announcements`);\n  }\n\n  fetchAnnouncementById(id){\n    return this.http.get(`${environment.apiURL}/announcements/a/${id}`);\n  }\n\n  fetchAnnouncementsByCourseId(id){\n    return this.http.get(`${environment.apiURL}/announcements/c/${id}`);\n  }\n\n  updateAnnouncement(id, content, changed){\n    let announcement = {\n      id: id,\n      content: content,\n      changed: changed\n    }\n    return this.http.put(`${environment.apiURL}/announcements/${id}`, announcement);\n  }\n\n  deleteAnnouncement(id){\n    return this.http.delete(`${environment.apiURL}/announcements/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseAnnouncementService {\n\n  constructor(private http: HttpClient) { }\n\n  createCourseAnnouncement(course_id, announcement_id){\n    let courseAnnouncement = {\n      course_id: course_id,\n      announcement_id: announcement_id\n    };\n    return this.http.post(`${environment.apiURL}/courseAnnouncements`, courseAnnouncement);\n  }\n\n  fetchCourseAnnouncements(){\n    return this.http.get(`${environment.apiURL}/courseAnnouncements`);\n  }\n\n  fetchCourseAnnouncementById(id){\n    return this.http.get(`${environment.apiURL}/courseAnnouncements/${id}`);\n  }\n\n  updateCourseAnnouncement(id, course_id, announcement_id){\n    let courseAnnouncement = {\n      course_id: course_id,\n      announcement_id: announcement_id\n    };\n    return this.http.put(`${environment.apiURL}/courseAnnouncements/${id}`, courseAnnouncement);\n  }\n\n  deleteCourseAnnouncement(id){\n    return this.http.delete(`${environment.apiURL}/courseAnnouncements/${id}`);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscussionService {\n\n  constructor(private http: HttpClient) { }\n\n  createDiscussion(user, post, created, changed, module_id, user_id){\n    let discussion = {\n      user: user,\n      post: post,\n      created: created,\n      changed: changed,\n      module_id: module_id,\n      user_id: user_id\n    }\n\n    return this.http.post(`${environment.apiURL}/discussions`, discussion);\n  }\n\n  getDiscussionsInModule(moduleId) {\n    return this.http.get(`${environment.apiURL}/discussions/m/${moduleId}`);\n  }\n\n  updateDiscussion(post, changed, discussionId){\n    let discussion = {\n      post: post,\n      changed: changed\n    }\n    return this.http.put(`${environment.apiURL}/discussions/${discussionId}`, discussion);\n  }\n\n  deleteDiscussion(discussionId){\n    return this.http.delete(`${environment.apiURL}/discussions/${discussionId}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  addModule(courseId, number, title, lockedUntil) {\n    const moduleO = {\n      number: number,\n      title: title,\n      lockedUntil: lockedUntil\n    };\n    return this.http.post(`${environment.apiURL}/modules/${courseId}`, moduleO);\n  }\n  \n  getModuleById(id) {\n    return this.http.get(`${environment.apiURL}/modules/m/${id}`);\n  }\n\n  getModulesByCourseId(id) {\n    return this.http.get(`${environment.apiURL}/modules/c/${id}`);\n  }\n\n  updateModule(moduleId, number, title, lockedUntil) {\n    const moduleO = {\n      number: number,\n      title: title,\n      lockedUntil: lockedUntil\n    };\n    return this.http.put(`${environment.apiURL}/modules/${moduleId}`, moduleO);\n  }\n\n  deleteModule(moduleId) {\n    return this.http.delete(`${environment.apiURL}/modules/${moduleId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PdfService {\n\n  constructor(private http: HttpClient) { }\n\n  addPDF(formData) {\n    return this.http.post<any>(`${environment.apiURL}/pdfs`, formData);\n  }\n\n  fetchPDFs(courseId): Observable<any> {\n    return this.http.get(`${environment.apiURL}/pdfs/${courseId}`);\n  }\n\n  updatePDF(pdfID, formData){\n    return this.http.put(`${environment.apiURL}/pdfs/${pdfID}`, formData);\n  }\n\n  deletePDF(pdfID){\n    return this.http.delete(`${environment.apiURL}/pdfs/${pdfID}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyService {\n\n  constructor(private http: HttpClient) { }\n\n  addSurvey(name, link, module_id) {\n    const survey = {\n      name: name,\n      link: link,\n      module_id: module_id\n    }\n    return this.http.post(`${environment.apiURL}/surveys`, survey);\n  }\n\n  fetchSurveys(courseId) {\n    return this.http.get(`${environment.apiURL}/surveys/${courseId}`);\n  }\n\n  updateSurvey(name, link, surveyId) {\n    const survey = {\n      name: name,\n      link: link\n    }\n    return this.http.put(`${environment.apiURL}/surveys/${surveyId}`, survey);\n  }\n\n  deleteSurvey(surveyId) {\n    return this.http.delete(`${environment.apiURL}/surveys/${surveyId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoService {\n\n  constructor(private http: HttpClient) { }\n\n  addVideo(link, module_id) {\n    const video = {\n      link: link,\n      module_id: module_id\n    }\n    return this.http.post(`${environment.apiURL}/videos`, video);\n  }\n\n  fetchVideos(courseId) {\n    return this.http.get(`${environment.apiURL}/videos/${courseId}`);\n  }\n\n  updateVideo(link, videoId) {\n    const video = {\n      link: link\n    }\n    return this.http.put(`${environment.apiURL}/videos/${videoId}`, video);\n  }\n\n  deleteVideo(videoId) {\n    return this.http.delete(`${environment.apiURL}/videos/${videoId}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AnnouncementService } from '@app/core/services/announcement.service';\n\n@Component({\n  selector: 'app-announcements',\n  templateUrl: './announcements.component.html',\n  styleUrls: ['./announcements.component.scss']\n})\nexport class AnnouncementsComponent implements OnInit {\n\n  announcements: Promise<any[]>;\n  constructor(private announcementService: AnnouncementService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      console.log(params.id);\n      this.announcementService.fetchAnnouncementsByCourseId(params.id).subscribe((announcements: any[]) => {\n        this.announcements = Promise.resolve(announcements);\n        console.log(announcements);\n      });\n    })\n  }\n\n}\n","<app-sidebar></app-sidebar>\n<div id=\"main\">\n    <div class=\"flexbox-row\">\n        <h2>Announcements</h2>\n        <div *ngFor=\"let announcement of announcements | async\">\n            <div [innerHTML]=\"announcement.content\" class=\"announcement\"></div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { AnnouncementService } from '@app/core/services/announcement.service';\nimport { CourseAnnouncementService } from '@app/core/services/course-announcement.service';\nimport { CourseService } from '@app/core/services/course.service';\nimport { Subscription } from 'rxjs';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { Router } from '@angular/router';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-create-announcement',\n  templateUrl: './create-announcement.component.html',\n  styleUrls: ['./create-announcement.component.scss']\n})\nexport class CreateAnnouncementComponent implements OnInit {\n\n  checkedCourses: number[] = [];\n  subscription: Subscription;\n\n  public Editor = ClassicEditor;\n  public editorData = \"\";\n  currentUser: User;\n  userPayload: User;\n  isCleared;\n  courses: any[] = [];\n\n  constructor(private announcementService: AnnouncementService, private courseAnnouncementService: CourseAnnouncementService, private authenticationService: AuthenticationService, private courseService: CourseService, private router: Router) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit(): void {\n    //this.userPayload = decode(this.currentUser.token);\n    console.log(this.currentUser.f_name);\n\n    this.subscription = this.announcementService.sharedCheckedCourses.subscribe((checkedCourses: number[]) => {\n      this.checkedCourses = checkedCourses;\n      console.log(checkedCourses);\n      this.checkedCourses.forEach((courseId, i, arr) => {\n        this.courseService.getCourseById(courseId).subscribe((course: any) => {\n          this.courses[i] = course;\n          console.log(course);\n        })\n      })\n    }, (error) =>{\n      console.log(error);\n    }, () => {\n      console.log(\"complete\");\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  createAnnouncement(){\n    let user = this.currentUser.f_name + \" \" + this.currentUser.l_name;\n    let today =  new Date();\n    this.announcementService.createAnnouncement(user, this.editorData, today, today, this.currentUser.id).subscribe((announcement: any) => {\n      console.log(announcement);\n      for(let i = 0; i < this.checkedCourses.length; i++){\n        let courseId = this.checkedCourses[i];\n        this.courseAnnouncementService.createCourseAnnouncement(courseId, announcement.id).subscribe((courseAnnouncement) => {\n          console.log(courseAnnouncement);\n        });\n      }\n      alert(\"Created announcement successfully\");\n    });\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px;\">\n    <!--<ng-container *ngIf=\"courseContent | async as content\">-->\n        <h3>Create announcement for courses:</h3>\n        <div class=\"row\">\n            <div *ngFor=\"let course of courses\" class=\"col-md-4\">\n                <p *ngIf=\"course\">{{course.name}}</p>\n            </div>\n        </div>\n        <!--<p>{{checkedCourses}}</p>-->\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n        <span>\n            <button (click)=\"createAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/courses\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n    <!--</ng-container>-->\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AnnouncementService } from '@app/core/services/announcement.service';\n\nimport { Observable, Subscription } from 'rxjs';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n@Component({\n  selector: 'app-edit-announcement',\n  templateUrl: './edit-announcement.component.html',\n  styleUrls: ['./edit-announcement.component.scss']\n})\nexport class EditAnnouncementComponent implements OnInit {\n\n  announcementId: Promise<number>;\n  announcement: Observable<Object>;\n  announcements: Promise<Object>;\n\n  public Editor = ClassicEditor;\n  public editorData;\n\n  subscription: Subscription;\n\n  constructor(private router: Router, private route: ActivatedRoute, private announcementService: AnnouncementService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.announcementId = Promise.resolve(params.announcementId);\n    })\n\n    this.announcementId.then((id) => {\n      console.log(id);\n      this.announcement = this.announcementService.fetchAnnouncementById(id);\n    })\n\n    this.subscription = this.announcementService.sharedEditCourses.subscribe((announcements: Object[]) => {\n      console.log(\"announcements edit: \\n\");\n      console.log(announcements);\n      this.announcements = Promise.resolve(announcements);\n    })\n  }\n\n  ngAfterViewInit(){\n    this.subscription.unsubscribe();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n    console.log(this.editorData);\n  }\n\n  editAnnouncement(){\n    if(!this.editorData){\n      this.announcement.subscribe((announcement: any) => {\n        console.log(announcement.content);\n        this.announcementId.then((id) => {\n          this.announcementService.updateAnnouncement(id, announcement.content, new Date()).subscribe(() => {\n            alert(\"Updated announcement\");\n            this.router.navigate(['/courses/view-created-announcements']);\n          })\n        })\n      })\n    } else{\n      this.announcementId.then((id) => {\n        this.announcementService.updateAnnouncement(id, this.editorData, new Date()).subscribe(() => {\n          alert(\"Updated announcement\");\n          this.router.navigate(['/courses/view-created-announcements']);\n        })\n      })\n    }\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px;\" *ngIf=\"announcement | async as an\">\n    <!--<ng-container *ngIf=\"courseContent | async as content\">-->\n        <h2>Edit announcement <span>{{announcementId | async}}</span> for courses:</h2>\n        <div class=\"row\">\n            <div *ngFor=\"let announcement of announcements | async\" class=\"col-md-4\">\n                <p *ngIf=\"announcement\">{{announcement.course_name}}</p>\n            </div>\n        </div>\n        <!--<p>{{checkedCourses}}</p>-->\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData ? editorData : an.content\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n        <span>\n            <button (click)=\"editAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/courses/view-created-announcements\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData ? editorData : an.content\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n    <!--</ng-container>-->\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AnnouncementService } from '@app/core/services/announcement.service';\n\n@Component({\n  selector: 'app-view-created-announcements',\n  templateUrl: './view-created-announcements.component.html',\n  styleUrls: ['./view-created-announcements.component.scss']\n})\nexport class ViewCreatedAnnouncementsComponent implements OnInit {\n\n  announcements;\n  announcementSet: Set<number> = new Set<number>();\n  groupedAnnouncements: Map<number, Object[]> = new Map<number, Object[]>();\n\n  constructor(private announcementService: AnnouncementService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    //this.announcements = this.announcementService.fetchAnnouncements();\n    this.announcementService.fetchAnnouncements().subscribe((announcements: any[]) => {\n      announcements.forEach((value, i, arr) => {\n        this.announcementSet.add(value.announcement_id);\n        let trimmedContent = value.content.substring(0, 25);\n        value.content = trimmedContent;\n      })\n      this.announcements = announcements; \n      console.log(announcements);\n      this.announcementSet.forEach((announcementId) => {\n        console.log(announcementId);\n        this.announcements.forEach((announcementObj, i) => {\n          if(announcementId == announcementObj.announcement_id){\n            console.log(\"grouped\");\n            console.log(announcementObj);\n            if(this.groupedAnnouncements.get(announcementId)){\n              this.groupedAnnouncements.get(announcementId).push(announcementObj);\n            }\n            else {\n              this.groupedAnnouncements.set(announcementId, [announcementObj]);\n            }\n            console.log(this.groupedAnnouncements.get(announcementId));\n          }\n        })\n      })\n    });\n  }\n\n  editAnnouncement(announcementId, announcements){\n    console.log(announcementId);\n    console.log(\"announcements: \\n\");\n    console.log(announcements);\n    this.announcementService.nextEditCourses(announcements);\n    this.router.navigate(['../edit-announcement', announcementId], { relativeTo: this.route })\n  }\n\n  deleteAnnouncement(announcementId){\n    let r = confirm(\"Delete announcement: \" + announcementId + \"\\nAre you sure?\");\n    if(r){\n      console.log(\"deleted: \" + announcementId);\n      this.announcementService.deleteAnnouncement(announcementId).subscribe(() => {\n        alert(\"Deleted announcement: \" + announcementId);\n      })\n    }\n  }\n\n}\n","<div class=\"flexbox-row\">\n    <h2>Manage Announcements</h2>\n\n    <div *ngFor=\"let announcements of groupedAnnouncements | keyvalue; let gindex = index\" class=\"announcement\">\n        <div *ngIf=\"gindex == 0\" style=\"background-color:white; padding-bottom: 10px\">Total announcements: {{groupedAnnouncements.size}}</div>\n        <span>Id: {{announcements.key}}</span>\n        <h4>Courses: </h4>\n        <div *ngFor=\"let announcementObj of announcements.value; let aindex = index\">\n            <span>{{announcementObj.course_name}}<span *ngIf=\"aindex != announcements.value.length - 1\">,</span></span>\n            <h4 *ngIf=\"aindex == announcements.value.length - 1\"><hr>Announcement: </h4>\n            <div *ngIf=\"aindex == announcements.value.length - 1\" [innerHTML]=\"announcementObj.content\" style=\"padding-top:10px; background-color: lightgray\">\n            </div>\n            <div>\n                <button *ngIf=\"aindex == announcements.value.length - 1\" (click)=\"editAnnouncement(announcementObj.announcement_id, announcements.value)\" class=\"btn btn-success\">Edit</button>\n                <button *ngIf=\"aindex == announcements.value.length - 1\" (click)=\"deleteAnnouncement(announcementObj.announcement_id)\" class=\"btn btn-danger\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { ModulesComponent } from './modules/modules.component';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { CreateModuleComponent } from './modulesManagement/create-module/create-module.component';\nimport { EditModuleComponent } from './modulesManagement/edit-module/edit-module.component';\nimport { HomeEditComponent } from './home-edit/home-edit.component';\nimport { DiscussionComponent } from './modulesDiscussion/discussion/discussion.component';\nimport { CreateAnnouncementComponent } from './announcementsManagement/create-announcement/create-announcement.component';\nimport { AnnouncementsComponent } from './announcementsManagement/announcements/announcements.component';\nimport { EditAnnouncementComponent } from './announcementsManagement/edit-announcement/edit-announcement.component';\nimport { ViewCreatedAnnouncementsComponent } from './announcementsManagement/view-created-announcements/view-created-announcements.component';\n\nimport { AuthenticationService as AuthGuard } from '@app/core/services/authentication.service';\n\nconst routes: Routes = [\n  { path: 'create-announcement', component: CreateAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'}, pathMatch: 'full' },\n  { path: 'view-created-announcements', component: ViewCreatedAnnouncementsComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'}, pathMatch: 'full'},\n  { path: 'edit-announcement/:announcementId', component: EditAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'}, pathMatch: 'full'},\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard], pathMatch: 'full' },\n  { path: ':id', component: HomeComponent, canActivate: [AuthGuard], pathMatch: 'full' },\n  { path: ':id/announcements', component: AnnouncementsComponent, canActivate: [AuthGuard]},\n  { path: ':id/modules', component: ModulesComponent, canActivate: [AuthGuard] },\n  { path: ':id/leaderboard', component: LeaderboardComponent, canActivate: [AuthGuard] },\n  { path: ':id/create-module', component: CreateModuleComponent, canActivate: [AuthGuard], data: { expectedRole: 'instructor'} },\n  { path: ':id/edit-module/:moduleId', component: EditModuleComponent, canActivate: [AuthGuard], data: { expectedRole: 'instructor'} },\n  { path: ':id/edit-home', component: HomeEditComponent, canActivate: [AuthGuard], data: { expectedRole: 'instructor'} },\n  { path: ':id/discussion/:moduleId', component: DiscussionComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class CourseRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { CourseRoutingModule } from './course-routing.module';\nimport { ModulesComponent } from './modules/modules.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { SidebarButtonComponent } from './sidebar-button/sidebar-button.component';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { CreateModuleComponent } from './modulesManagement/create-module/create-module.component';\nimport { EditModuleComponent } from './modulesManagement/edit-module/edit-module.component';\nimport { HomeComponent } from './home/home.component';\nimport { HomeEditComponent } from './home-edit/home-edit.component';\nimport { CreatePostComponent } from './modulesDiscussion/create-post/create-post.component';\nimport { DiscussionComponent } from './modulesDiscussion/discussion/discussion.component';\nimport { EditPostComponent } from './modulesDiscussion/edit-post/edit-post.component';\nimport { CreateAnnouncementComponent } from './announcementsManagement/create-announcement/create-announcement.component';\nimport { AnnouncementsComponent } from './announcementsManagement/announcements/announcements.component';\nimport { EditAnnouncementComponent } from './announcementsManagement/edit-announcement/edit-announcement.component';\nimport { ViewCreatedAnnouncementsComponent } from './announcementsManagement/view-created-announcements/view-created-announcements.component';\n \n@NgModule({\n  declarations: [ DashboardComponent, ModulesComponent, CreateModuleComponent, EditModuleComponent, SidebarComponent, SidebarButtonComponent, LeaderboardComponent, HomeComponent, HomeEditComponent, DiscussionComponent, CreatePostComponent, EditPostComponent, CreateAnnouncementComponent, AnnouncementsComponent, EditAnnouncementComponent, ViewCreatedAnnouncementsComponent],\n  imports: [\n    CommonModule,\n    CourseRoutingModule,\n    ReactiveFormsModule,\n    NgbModule,\n    CKEditorModule,\n    MatTooltipModule,\n    MatInputModule\n  ]\n})\nexport class CourseModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '@app/core/models/user';\nimport { Course } from '@app/core/models/course.model';\n\nimport { CourseService } from '@app/core/services/course.service';\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { AnnouncementService } from '@app/core/services/announcement.service';\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  courses: Course[] = [];\n  course: Course;\n  currentUser: User;\n  tokenPayload: User;\n  isAdmin: Boolean;\n  hasCourses;\n  listCourses;\n  studentId;\n  courseDrop: Boolean = false;\n  checkedCourses: number[] = [];\n  isChecked: Boolean[] = [];\n\n  constructor(private studentCourseService: StudentCourseService, private courseService: CourseService, private authService: AuthenticationService, private router: Router, private announcementService: AnnouncementService) { }\n\n  ngOnInit() {  \n    this.currentUser = this.authService.currentUserValue;\n    if(this.currentUser){\n      //this.tokenPayload = decode(this.currentStudent.token);\n      this.isAdmin = (this.currentUser.role == 'admin');\n      this.studentId = this.currentUser.id;\n      //this.isAdmin = (this.tokenPayload.role == 'admin');      \n      //this.studentId = this.tokenPayload.id;\n      //this.hasCourses = this.asyncFetchStudentCourses(this.studentId);\n      this.listCourses = this.studentCourseService.getCoursesByStudentId(this.studentId);\n      console.log(this.studentId);\n    }\n  }\n\n  fetchStudentCourses(studentId) {\n    //let returnValue: Boolean;\n    return new Promise((resolve, reject) => {\n\n      this.studentCourseService.getCoursesByStudentId(studentId).subscribe((data: any[]) => {\n        for(let i = 0; i < data.length; i++){\n          if(data[i]){\n            if(data[i].enrollment_status == \"enrolled\"){\n              this.courses.push(data[i]);\n              console.log(\"Enrolled\");\n              console.log(data[i]);\n            } else {\n              console.log(\"Not enrolled\");\n              console.log(data[i]);\n            }\n            if(i == data.length){\n              console.log(\"got data\");\n              resolve(true);\n            }\n              //returnValue = true;\n          } else{\n            console.log(\"got no data\");\n            //returnValue = false;\n            reject(false);\n          }\n        }\n        //this.hasCourses = resolve('resolved');\n      }, (error) => {\n        reject(error);\n        console.log(\"error: \" + error);\n      });\n    }).then(res => {\n      console.log(\"resthen: \" + res);\n      return true;\n    }).catch(error => {\n      console.log('ERROR: ' + error);\n      return false;\n    })\n    //return returnValue;\n  }\n\n  async asyncFetchStudentCourses(studentId) {\n    console.log(\"calling\");\n    this.hasCourses = await this.fetchStudentCourses(studentId);\n    console.log(\"resasync: \" + this.hasCourses);\n  }\n  \n  dropCourse(courseId) {\n    this.courseService.getCourseById(courseId).subscribe((course: Course) => {\n      this.course = course;\n    })\n    let r = confirm(\"Drop the course? Are you sure?\");\n    if(r){\n      this.studentCourseService.declineStudentEnrollment(this.studentId, courseId).subscribe(() => {\n        alert(\"Dropped the course\");\n        this.courseService.updateCourseSeats(courseId, this.course.seats + 1).subscribe(() => {\n          console.log(\"incremented seats by 1: \" + (this.course.seats + 1));\n        })\n      })\n    }\n  }\n\n  toggleDropCourse(){\n    if(this.courseDrop == false){\n      this.courseDrop = true;\n    }\n    else {\n      this.courseDrop = false;\n    }\n  }\n\n  createAnnouncement(){\n    //console.log(this.checkedCourses);\n    this.announcementService.nextCheckedCourses(this.checkedCourses);\n    this.router.navigate(['/courses/create-announcement']);\n  }\n\n  checkBox(i, courseId){\n    if(this.currentUser.role != 'admin'){\n      return;\n    }\n    if(this.isChecked[i]){\n      this.isChecked[i] = false;\n      // remove course from array\n      this.checkedCourses.forEach((value, index, arr) => {\n        if(value == courseId){\n          console.log(courseId + \" \" + index);\n          this.checkedCourses.splice(index, 1);\n        }\n      })\n    }\n    else{\n      this.isChecked[i] = true;\n      console.log(\"courseId: \" + courseId + \" has been checked\");\n      // add course to array\n      this.checkedCourses.push(courseId);\n    }\n    console.log(this.isChecked[i]);\n  }\n}\n","<div class=\"center-form\" style=\"position: relative\">\n\n    <h2>Dashboard</h2>\n\n    <ng-container *ngIf=\"listCourses | async; else elseBlock\">\n        <!--<button type=\"button\" (click)=\"toggleDropCourse()\" class=\"btn btn-danger btn-sm\">Toggle Course Drop</button>-->\n        <div class=\"row\">\n            <ng-container *ngFor=\"let course of listCourses | async; let index = index\">\n                <ng-container *ngIf=\"course.enrollment_status == 'enrolled'\">\n                    <button *ngIf=\"index == 0\" type=\"button\" (click)=\"toggleDropCourse()\" class=\"btn btn-danger btn-sm center-form\" style=\"position: absolute; top: 5px; left: 20px;\">Toggle Course Drop</button>\n                    <button *ngIf=\"index == 0 && isAdmin\" type=\"button\" (click)=\"createAnnouncement()\" [disabled]=\"checkedCourses.length <= 0\" class=\"btn btn-success btn-sm center-form\" [ngClass]=\"{ 'hideInfo': checkedCourses.length <= 0 }\" style=\"position: absolute; top: 5px; left: 170px;\"\n                     placement=\"bottom\" ngbTooltip=\"Click on courses (cards) to broadcast announcements to\">Create Announcement\n                    </button>\n                    <button *ngIf=\"index == 0 && isAdmin\" placement=\"bottom\" ngbTooltip=\"Click on courses (cards) to broadcast announcement to\" class=\"btn btn-success btn-sm center-form\"\n                     [ngClass]=\"{ 'hideInfo': checkedCourses.length > 0 }\" [disabled]=\"checkedCourses.length > 0\" style=\"position: absolute; top: 5px; left: 170px;\"\n                     triggers=\"click:blur\">\n                     add announcement info\n                    </button>\n                    <a *ngIf=\"index == 0 && isAdmin\" routerLink=\"/courses/view-created-announcements\" class=\"btn btn-info btn-sm center-form\" style=\"position: absolute; top: 5px; left: 335px;\">Manage Announcements\n                    </a>\n                    <div class=\"col\">\n                        <div class=\"card\" style=\"max-width: 18rem;\" (click)=\"checkBox(index, course.course_id)\" [class]=\"{'checked-color': isChecked[index]}\">\n                            <!--<img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">-->\n                            <div class=\"card-body\">\n                                <input *ngIf=\"isAdmin\" type=\"checkbox\" [checked]=\"isChecked[index]\">\n                                <h5 class=\"card-title text-wrap\" style=\"word-wrap: break-word\">{{course.name}}</h5>\n                                <p class=\"card-text text-wrap\" style=\"word-wrap: break-word\">{{course.description}}</p>\n                                <div class=\"flex-container\">\n                                    <a [routerLink]=\"[course.course_id, 'modules']\" class=\"btn btn-primary flex-item\">Go to Course</a>\n                                    <button type=\"button\" (click)=\"dropCourse(course.course_id)\" class=\"btn btn-danger btn-sm flex-item\" *ngIf=\"courseDrop\">Drop Course</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </div>\n    </ng-container>\n\n    <ng-template #elseBlock class=\"center-form\">\n        <p>You have no courses!</p>\n        <label>Enroll in courses</label>\n        <button routerLink=\"../course-library\" class=\"btn btn-primary\" style=\"margin-left: 10px\">Enroll</button>\n    </ng-template>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\n\nimport { CourseDetailsService } from '@app/core/services/course-details.service';\n\n@Component({\n  selector: 'app-home-edit',\n  templateUrl: './home-edit.component.html',\n  styleUrls: ['./home-edit.component.scss']\n})\nexport class HomeEditComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData;\n  courseId;\n  courseDetails: any;\n  public courseContent;\n  isCleared = false;\n\n  constructor(private courseDetailsService: CourseDetailsService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      this.courseId = params.id;\n      //console.log(\"Params id: \" + params.id);\n    })\n    this.courseContent = this.courseDetailsService.getCourseDetails(this.courseId);\n\n    this.courseDetailsService.getCourseDetails(this.courseId).subscribe((data: any) => {\n      this.courseDetails = data;\n      //console.log(data);\n    })\n\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  onSubmit(id){\n    this.courseDetailsService.updateCourseDetails(id, this.editorData).subscribe(() => {\n      alert(\"Submitted Content\");\n      this.router.navigate(['courses', this.courseId]);\n    });\n  }\n\n  onClearButtonClicked(id){\n    let r = confirm(\"Clear content; Are you sure?\");\n    if(r){\n      this.courseDetailsService.clearCourseDetails(id).subscribe(() => {\n        alert(\"Cleared Content\");\n        this.isCleared = true;\n        this.router.navigate(['courses', this.courseId]);\n      })\n    }\n  }\n\n}\n","    <div class=\"flexbox-row\">\n        <ng-container *ngIf=\"courseContent | async as content\">\n            <ckeditor [editor]=\"Editor\" [data]=\"editorData ? editorData : content.content\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n            <span>\n                <button (click)=\"onSubmit(content.id)\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n                <button (click)=\"onClearButtonClicked(content.id)\" class=\"btn btn-warning\" style=\"margin-left: 15px\">Clear and Submit</button>\n                <a routerLink=\"/courses/{{courseId}}\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n            </span>\n            <hr>\n            <h2>Preview</h2>\n            <div [innerHTML]=\"editorData ? editorData : content.content\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n        </ng-container>\n        <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\n\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { CourseDetailsService } from '@app/core/services/course-details.service';\n\nimport { User } from '@app/core/models/user';\nimport decode from 'jwt-decode';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData;\n  courseId;\n  courseDetails: any;\n  public courseContent;\n  isCleared = false;\n  currentUser: User;\n  tokenPayload;\n  isAdmin;\n  isInstructor;\n  isStudent;\n\n  constructor(private courseDetailsService: CourseDetailsService, private route: ActivatedRoute, private authenticationService: AuthenticationService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit() {\n\n    //this.tokenPayload = decode(this.currentUser.token);\n    this.isAdmin = (this.currentUser.role === \"admin\");\n    this.isInstructor = (this.currentUser.role === \"instructor\");\n    this.isStudent = (this.currentUser.role === \"student\");\n\n    this.route.params.subscribe((params) => {\n      this.courseId = params.id;\n      //console.log(\"Params id: \" + params.id);\n    })\n    this.courseContent = this.courseDetailsService.getCourseDetails(this.courseId);\n\n    this.courseDetailsService.getCourseDetails(this.courseId).subscribe((data: any) => {\n      this.courseDetails = data;\n      //console.log(data);\n    })\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  onSubmit(id){\n    this.courseDetailsService.updateCourseDetails(id, this.editorData).subscribe(() => {\n      alert(\"Submitted Content\");\n    });\n  }\n\n  onClearButtonClicked(id){\n    let r = confirm(\"Clear content; Are you sure?\");\n    if(r){\n      this.courseDetailsService.clearCourseDetails(id).subscribe(() => {\n        alert(\"Cleared Content\");\n        this.isCleared = true;\n      })\n    }\n  }\n\n}\n","<app-sidebar></app-sidebar>\n<div id=\"main\">\n    <div class=\"flexbox-row\">\n        <a *ngIf=\"isAdmin || isInstructor\" routerLink=\"/courses/{{courseId}}/edit-home\" class=\"btn btn-primary\">Edit</a>\n        <ng-container *ngIf=\"courseContent | async as content\">\n            <div [innerHTML]=\"content.content\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n        </ng-container>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport decode from 'jwt-decode';\n\nimport { User } from '@app/core/models/user';\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.scss']\n})\nexport class LeaderboardComponent implements OnInit {\n\n  students: any = [];\n  average;\n  courseId;\n  currentUser: User;\n  userPayload: User;\n\n  constructor(private studentCourseService: StudentCourseService, private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n      console.log(\"param id is: \" + params.id);\n    })\n    //this.userPayload = decode(this.currentUser.token);\n\n    this.fetchStudents(this.courseId);\n    this.getAvgStudentPoints(this.courseId, this.currentUser.id);\n  }\n\n  // Gets students from course ID\n  fetchStudents(courseId) {\n    console.log(\"fetching students\");\n    this.studentCourseService.getStudentsByCourseId(courseId).subscribe((data) => {\n      this.students = data;\n      console.log(data);\n    });\n  }\n\n  getAvgStudentPoints(courseId, studentId){\n    console.log(\"Called avgstudentpoints on student_id: \" + studentId);\n    this.studentCourseService.getAvgStudentPoints(courseId, studentId).subscribe((data) => {\n      this.average = data;\n      console.log(\"avg: \" + JSON.stringify(data));\n      this.average.average = this.toFixed(this.average.average, 2);\n    })\n  }\n\n  toFixed(value, precision) {\n    var power = Math.pow(10, precision || 0);\n    return String(Math.round(value * power) / power);\n  }\n\n}\n","<!--<a href=\"../../../../assets/favicon-32x32.png\" download=\"favicon-32x32\">Download it!</a>-->\n<app-sidebar></app-sidebar>\n<div class=\"main\">\n    <div class=\"flexbox-row\">\n\n        <!-- HEADER -->\n        <h2> Leaderboard </h2>\n        <!-- COLUMN NAMES -->\n        <div class=\"flexbox-container\">\n            <div class=\"flexbox-cell left\">ID</div>\n            <div class=\"flexbox-cell right\">Points</div>\n        </div>\n\n        <!-- STUDENTS -->\n        <div class=\"flexbox-row\" *ngFor=\"let student of students; let index = index\">\n            <div class=\"flexbox-container\">\n                <div class=\"flexbox-cell left\">{{student.student_id}}</div>\n                <div class=\"flexbox-cell right\">{{student.points}}</div>\n            </div>\n        </div>\n\n        <div class=\"center-form\" style=\"margin-top: 15px\">\n            <span *ngIf=\"average\">Class average: {{average.average}}</span>\n        </div>\n    </div>\n</div>","import { Component, ElementRef, OnInit, Sanitizer, ViewChild, ViewChildren } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from '@angular/platform-browser';\nimport { NgbModal, NgbButtonLabel } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport { PdfService } from '@app/core/services/pdf.service';\nimport { VideoService } from '@app/core/services/video.service';\nimport { SurveyService } from '@app/core/services/survey.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { StudentCourseService } from '@app/core/services/student-course.service';\nimport { ModuleService } from 'src/app/core/services/module.service';\n\nimport { User } from '@app/core/models/user';\nimport decode from 'jwt-decode';\n\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { resolve } from 'url';\n\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.scss']\n})\nexport class ModulesComponent implements OnInit {\n  currentUser: User;\n  tokenPayload: User;\n  isAdmin: Boolean;\n  isInstructor: Boolean;\n  isStudent: Boolean;\n\n  modules = [];\n  todayDate;\n  moduleLocked: Boolean[] = [];\n\n  linksFromDB: string[] = new Array();\n  links: string[] = new Array();\n  safeLinks = new Map<number, Object[]>();\n\n  pdfsFromDB: Blob[] = new Array();\n  pdfs: any[] = new Array();\n  safePdfs = new Map<number, Object[]>();\n\n  surveysFromDB: string[] = new Array();\n  surveys: string[] = new Array();\n  safeSurveys = new Map<number, Object[]>();\n\n  resources = ['pdf1', 'pdf2', 'worddoc1'];\n  quizzes = ['quiz1', 'quiz2', 'quiz3'];\n\n  points: number;\n  averagePoints;\n  urlPath;\n  courseId;\n  toggleContent = [];\n  moduleVideosFetched = [];\n  modulePDFsFetched = [];\n  moduleSurveysFetched: Boolean[] = [];\n\n  videoForm: FormGroup;\n  pdfForm: FormGroup;\n  surveyForm: FormGroup;\n  updateVideoForm: FormGroup;\n  updatePdfForm: FormGroup;\n  updateSurveyForm: FormGroup;\n  submitted = false;\n  error = '';\n  invalidLink = false;\n  validLink = false;\n  invalidQuiz = false;\n  validQuiz = false;\n\n  fileToUpload: File = null;\n  contentObject = {\n    course_id: 0,\n    course_name: \"\",\n    module_id: 0,\n    module_number: 0,\n    module_title: \"\",\n    lockedUntil: \"\",\n    link: \"\"\n  }\n\n  waitForProgressBarTimeout;\n\n  constructor(\n    private moduleService: ModuleService,\n    private videoService: VideoService, \n    private pdfService: PdfService, \n    private surveyService: SurveyService,\n    private authenticationService: AuthenticationService, \n    private studentCourseService: StudentCourseService,\n    private fb: FormBuilder, \n    private router: Router, \n    private route: ActivatedRoute, \n    private sanitizer: DomSanitizer, \n    private modalService: NgbModal\n    ) \n    {\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n      this.makeForms();\n    }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n      console.log(\"param id is: \" + params.id);\n    })\n    /*if(!this.currentUser){\n      return;\n    }*/\n    this.todayDate = new Date();\n    //console.log(this.todayDate.toLocaleString());\n    //this.tokenPayload = decode(this.currentUser.token);\n    this.isAdmin = (this.currentUser.role === \"admin\");\n    this.isInstructor = (this.currentUser.role === \"instructor\");\n    this.isStudent = (this.currentUser.role === \"student\");\n\n    this.fetchModules(this.courseId);\n    this.getAvgStudentPoints(this.courseId, this.currentUser.id);\n\n    //this.waitForProgressBar();\n\n    this.studentCourseService.getStudentsByCourseId(this.courseId).subscribe((data: []) => {\n      data.forEach((val: any, i, arr) => {\n        if(val.student_id == this.currentUser.id) {\n          //console.log(\"Got student: \" + JSON.stringify(val));\n          this.points = val.points;\n          console.log(\"Points: \" + this.points);\n          //document.getElementById('progressbar').style.width = this.points + \"%\";\n        }\n      })\n    })\n\n  }\n\n  ngOnDestroy() {\n    //clearTimeout(this.waitForProgressBarTimeout);\n  }\n\n  // BEGIN UTILITY FUNCTIONS\n\n  waitForProgressBar(){\n    console.log(\"waiting for progress bar\");\n    if(document.getElementById('progressbarAvg')){\n      document.getElementById('progressbarAvg').style.width = this.averagePoints.average + \"%\";\n    }\n    else{\n      this.waitForProgressBarTimeout = setTimeout(() => {\n        this.waitForProgressBar();\n      }, 1000)\n    }\n  }\n\n  makeForms() {\n    this.videoForm = this.fb.group({\n      link: ['', Validators.required]\n    });\n    this.updateVideoForm = this.fb.group({\n      linkInput: ['', Validators.required]\n    });\n    this.pdfForm = this.fb.group({\n      pdf: ['', Validators.required]\n    });\n    this.updatePdfForm = this.fb.group({\n      pdf: ['', Validators.required]\n    });\n    this.surveyForm = this.fb.group({\n      name: ['', Validators.required],\n      link: ['', Validators.required]\n    });\n    this.updateSurveyForm = this.fb.group({\n      name: ['', Validators.required],\n      link: ['', Validators.required]\n    })\n  }\n\n  // convenience gettera for easy access to form fields\n  get v() { return this.videoForm.controls; }\n\n  get p() { return this.pdfForm.controls; }\n\n  get s() { return this.surveyForm.controls; }\n\n  get vu() { return this.updateVideoForm.controls; }\n\n  get pu() { return this.updatePdfForm.controls; }\n\n  get su() { return this.updateSurveyForm.controls; }\n\n  pushLinksToArray(linksFromDB: any[], links: any[]) {\n    linksFromDB.forEach((video) => {\n      let videoObject = {\n        link: video.link, \n        module_id: video.module_id, \n        video_id: video.video_id\n      }\n      links.push(videoObject);\n    })\n  }\n\n  updateVideoUrl(linksArr: any[], moduleId: number) {\n    linksArr.forEach((val) => {\n      if(val.module_id === moduleId){\n        this.moduleVideosFetched[moduleId] = true;\n\n        //console.log(\"link: \" + val.link);\n        let len: number = val.link.length;\n        let id;\n        if(len >= 43){\n          id = val.link.substring(32, 43);\n        }\n        else if(len == 28){\n          id = val.link.substring(17, 28)\n        }\n        let videoUrl: SafeResourceUrl;\n        let url: string;\n        let videoObject = {};\n        url = 'https://www.youtube.com/embed/' + id;\n        videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n        videoObject = {\n          videoUrl: videoUrl,\n          video_id: val.video_id,\n          url: val.link\n        }\n        if(this.safeLinks.get(moduleId)){\n          this.safeLinks.get(moduleId).push(videoObject);\n        }\n        else {\n          this.safeLinks.set(moduleId, [videoObject]);\n        }\n      }\n    })\n  }\n\n  pushPDFsToArray(pdfsFromDB: any[], pdfs: any[]) {\n    pdfsFromDB.forEach((val) => {\n      //console.log(\"val : \" + i + \" \" + JSON.stringify(val));\n      let pdfData = val.pdf.data;\n      //console.log(Array.isArray(pdfData));\n      let myBuffer = Uint8Array.from(pdfData);\n\n      //console.log(myBuffer);\n\n      let blob = new Blob([myBuffer.buffer], { type: 'application/pdf' }); //application/octet-stream\n      //console.log(blob.size);\n      //console.log(blob);\n      let pdfObject = {\n        module_id: val.module_id, \n        pdf_id: val.pdf_id, \n        pdf: blob\n      }\n      pdfs.push(pdfObject);\n    })\n  }\n\n  updatePdfData(pdfsArr: any[], moduleId: number) {\n    pdfsArr.forEach((val) => {\n      if(val.module_id === moduleId) {\n        this.modulePDFsFetched[moduleId] = true;\n        \n        let pdfObject = {};\n        let cleanPDF: SafeResourceUrl;\n\n        let pdfURL = URL.createObjectURL(val.pdf);\n        \n        cleanPDF = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n\n        pdfObject = {\n          pdf_id: val.pdf_id,\n          pdf: cleanPDF,\n          rawPdf: val.pdf\n        }\n\n        if(this.safePdfs.get(moduleId)){\n          this.safePdfs.get(moduleId).push(pdfObject);\n        } \n        else {\n          this.safePdfs.set(moduleId, [pdfObject]);\n        }\n      }\n    })\n  }\n\n  pushSurveysToArray(surveysFromDB: any[], surveys: any[]){\n    surveysFromDB.forEach((survey) => {\n      let surveyObject = {\n        name: survey.survey_name, \n        link: survey.link, \n        module_id: survey.module_id, \n        survey_id: survey.survey_id\n      }\n      surveys.push(surveyObject);\n    })\n  }\n\n  updateSurveyUrl(surveysArr: any[], moduleId: number) {\n    surveysArr.forEach((survey) => {\n      if(survey.module_id === moduleId){\n        this.moduleSurveysFetched[moduleId] = true;\n\n        let surveyUrl: SafeResourceUrl;\n        surveyUrl = this.sanitizer.bypassSecurityTrustResourceUrl(survey.link);\n        let surveyObject = {\n          surveyUrl: surveyUrl,\n          survey_id: survey.survey_id,\n          name: survey.name,\n          url: survey.link\n        }\n\n        if(this.safeSurveys.get(moduleId)){\n          this.safeSurveys.get(moduleId).push(surveyObject);\n        }\n        else {\n          this.safeSurveys.set(moduleId, [surveyObject]);\n        }\n      }\n    })\n  }\n      \n  open(content) {\n    this.submitted = false;\n    this.invalidLink = false;\n    this.invalidQuiz = false;\n    this.validLink = false;\n    this.invalidQuiz = false;\n    this.modalService.open(content, { size: 'lg', centered: true });\n  }\n      \n  openModule(index) {\n    if(this.toggleContent[index]){\n      //console.log(\"Closing module content\");\n      this.toggleContent[index] = false;\n    }\n    else {\n      //console.log(\"Opening module content\");\n      this.toggleContent[index] = true;\n    }   \n  }\n\n  openUpdateVideo(content, videoUrl) {\n    this.submitted = false;\n    this.invalidLink = false;\n    this.validLink = false;\n    this.modalService.open(content, { size: 'lg', centered: true });\n    this.updateVideoForm.get('linkInput').setValue(videoUrl);\n  }\n\n  openUpdatePDF(content, pdf){\n    this.submitted = false;\n    this.modalService.open(content, { size: 'lg', centered: true });\n    console.log(\"The updatePDF: \" + pdf);\n    //this.updatePdfForm.get('pdf').setValue(pdf);\n  }\n\n  openUpdateSurvey(content, surveyName, surveyUrl){\n    this.submitted = false;\n    this.invalidQuiz = false;\n    this.validQuiz = false;\n    this.modalService.open(content, { size: 'lg', centered: true });\n    this.updateSurveyForm.get('name').setValue(surveyName);\n    this.updateSurveyForm.get('link').setValue(surveyUrl);\n  }\n\n  getAvgStudentPoints(courseId, studentId){\n    console.log(\"Called avgstudentpoints on student_id: \" + studentId);\n    this.studentCourseService.getAvgStudentPoints(courseId, studentId).subscribe((data) => {\n      this.averagePoints = data;\n      console.log(\"avg: \" + JSON.stringify(data));\n      this.averagePoints.average = this.toFixed(this.averagePoints.average, 2);\n    })\n  }\n\n  toFixed(value, precision) {\n    var power = Math.pow(10, precision || 0);\n    return String(Math.round(value * power) / power);\n  }\n\n  viewDiscussion(courseId, moduleId){\n    this.router.navigate([`courses/${courseId}/discussion/${moduleId}`]);\n  }\n  // END UTILITY FUNCTIONS\n\n  // BEGIN MODULES CRUD\n  createModule(courseId) {\n    this.router.navigate([`courses/${courseId}/create-module`]);\n  }\n\n  fetchModules(courseId) {\n    this.moduleService.getModulesByCourseId(courseId).subscribe((data: []) => {\n      data.forEach((moduleO: any, i, arr) => {\n        //let lockedUntil = new Date(moduleO.lockedUntil.toString());\n        let lockedUntil = new Date(moduleO.lockedUntil);\n        let dd = String(lockedUntil.getDate() + 1).padStart(2, '0');\n        let mm = String(lockedUntil.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let yyyy = lockedUntil.getFullYear();\n\n        let givenDate = mm + '/' + dd + '/' + yyyy;\n        this.moduleLocked[i] = false;\n        if(this.todayDate < lockedUntil){\n          //console.log(this.todayDate.toLocaleDateString() + \" < \" + JSON.stringify(moduleO));\n          this.moduleLocked[i] = true;\n        }\n        moduleO.lockedUntil = givenDate;\n      })\n      this.modules = data;\n      //console.log(this.modules);\n      this.fetchVideos(courseId, data);\n      this.fetchPdfs(courseId, data);\n      this.fetchSurveys(courseId, data);\n    })\n  }\n\n  editModule(courseId, moduleId) {\n    this.router.navigate([`courses/${courseId}/edit-module/${moduleId}`]);\n  }\n\n  deleteModule(moduleId, moduleNumber) {\n    let response = confirm(`Delete Module ${moduleNumber}: Are you sure?`);\n    if(response == true){\n      this.moduleService.deleteModule(moduleId).subscribe(() => {\n        console.log(\"Deleted module \" + moduleId);\n        //this.modules.pop();\n      });\n      const item = this.modules.find(item => item.id === moduleId);\n      this.modules.splice(this.modules.indexOf(item));\n      }\n  }\n  // END MODULES CRUD\n\n  // BEGIN VIDEOS CRUD\n\n  handleValidLink(event){\n    //console.log(event.target.value);\n    let input: String = event.target.value;\n    let isYoutubeLink: Boolean = false;\n    let len = input.length;\n\n    if(input.includes(\"https://www.youtube.com/watch?v=\") || input.includes(\"https://youtu.be/\")){\n      console.log(\"Includes youtube link\");\n      isYoutubeLink = true;\n    } else{\n      isYoutubeLink = false;\n    }\n\n    if((len == 28 || len >= 43) && isYoutubeLink){\n      this.validLink = true;\n      this.invalidLink = false;\n    }\n    else{\n      this.validLink = false;\n    }\n  }\n\n  addVideo(link, moduleId) {\n    this.submitted = true;\n\n    if(this.videoForm.invalid){\n      return;\n    }\n\n    if(!this.validLink){\n      this.invalidLink = true;\n      return;\n    }\n\n    this.videoService.addVideo(link, moduleId).subscribe((data) => {\n      alert(\"Added video\");\n    }, (error) => {\n      this.error = error;\n    })\n  }\n\n  updateVideo(link, videoId) {\n    this.submitted = true;\n\n    if(this.updateVideoForm.invalid){\n      return;\n    }\n\n    if(!this.validLink){\n      this.invalidLink = true;\n      return;\n    }\n\n    //console.log(\"link: \" + link + \" \" + \"videoId: \" + videoId);\n    this.videoService.updateVideo(link, videoId).subscribe(() => {\n      alert(\"Updated video\");\n    })\n  }\n\n  deleteVideo(videoId, videoNumber: number) {\n    //console.log(\"Delete video: \" + videoId);\n    let r = confirm(\"Delete video \" + (videoNumber + 1) + \": Are you sure?\");\n    if(r){\n      this.videoService.deleteVideo(videoId).subscribe(() => {\n        alert(\"Deleted video\");\n      })\n    }\n  }\n\n  fetchVideos(courseId, modules) {\n    console.log(\"Fetching videos: \" + courseId);\n    this.videoService.fetchVideos(courseId).subscribe((data: any[]) => {\n      this.linksFromDB = data;\n      //console.log(\"linksFromDB: \" + JSON.stringify(this.linksFromDB));\n      this.pushLinksToArray(data, this.links);\n\n      modules.forEach((val: any, i, arr) => {\n        let moduleval = val;\n        for(let i = 0; i < data.length; i++) {\n          let val = data[i];\n          if(val.module_id == moduleval.module_id){\n            if(this.moduleVideosFetched[val.module_id] == true){\n              console.log(\"Modules videos fetched true\");\n              break;\n            }\n            else{\n              //console.log(val.module_id);\n              this.updateVideoUrl(this.links, val.module_id);\n            }\n          }\n        }\n      })\n\n    })\n  }\n  // END VIDEOS CRUD\n\n  // BEGIN PDFS CRUD\n\n  handleFileInput(event){\n    if(event.target.files.length > 0){\n      const file = event.target.files[0];\n      this.pdfForm.get('pdf').setValue(file);\n    }\n  }\n\n  handleFileInputUpdate(event){\n    if(event.target.files.length > 0){\n      const file = event.target.files[0];\n      this.updatePdfForm.get('pdf').setValue(file);\n    }\n  }\n\n  addPdf(moduleId) {\n    this.submitted = true;\n\n    if(this.pdfForm.invalid){\n      return;\n    }\n\n    //console.log(\"fileName: \" + this.pdfForm.get('pdf').value.name + \" fileSize: \" + this.pdfForm.get('pdf').value.size);\n    const formData: FormData = new FormData();\n    formData.append('fileKey', this.pdfForm.get('pdf').value);\n    formData.append('fileKey', moduleId);\n    //console.log(formData.getAll('fileKey'));\n    this.pdfService.addPDF(formData).subscribe(\n      (res) => { console.log(res); alert(\"Added PDF!\"); },\n      (err) => { console.log(err); this.error = err; }\n    );\n  }\n\n  fetchPdfs(courseId, modules) {\n    console.log(\"Fetching pdfs: \" + courseId);\n    this.pdfService.fetchPDFs(courseId).subscribe((data: any[]) => {\n      //console.log(data);\n      this.pdfsFromDB = data;\n      this.pushPDFsToArray(data, this.pdfs);\n\n      modules.forEach((val: any, i, arr) => {\n        let moduleval = val;\n        for(let i = 0; i < data.length; i++) {\n          let val = data[i];\n          if(val.module_id == moduleval.module_id){\n            if(this.modulePDFsFetched[val.module_id] == true){\n              console.log(\"Modules pdfs fetched true\");\n              break;\n            }\n            else{\n              //console.log(val.module_id);\n              this.updatePdfData(this.pdfs, val.module_id);\n            }\n          }\n        }\n      })\n\n    })\n  }\n\n  updatePDF(pdfId, moduleId){\n    this.submitted = true;\n\n    if(this.updatePdfForm.invalid){\n      return;\n    }\n\n    //console.log(\"updatePDF\");\n    const formData: FormData = new FormData();\n    formData.append('fileKey', this.updatePdfForm.get('pdf').value);\n    formData.append('fileKey', moduleId);\n    this.pdfService.updatePDF(pdfId, formData).subscribe(() => {\n      alert(\"Updated pdf\");\n    });\n  }\n\n  deletePDF(pdfId, pdfNumber: number) {\n    //console.log(\"PDF ID: \" + pdfId);\n    let r = confirm(\"Delete PDF \" + (pdfNumber + 1) + \": Are you sure?\");\n    if(r){\n      this.pdfService.deletePDF(pdfId).subscribe(() => {\n        alert(\"Deleted pdf\");\n      })\n    }\n  }\n\n  // END PDFS CRUD\n\n  // BEGIN SURVEYS CRUD (QUIZZES/EXAMS)\n\n  handleValidQuiz(event){\n    let input: String = event.target.value;\n    let len = input.length;\n    let isValidQuiz: Boolean = false;\n\n    if(input.includes(\"https://fiu.qualtrics.com/jfe/form/\")){\n      isValidQuiz = true;\n    }\n    else{\n      isValidQuiz = false;\n    }\n\n    if((len == 53) && isValidQuiz){\n      this.validQuiz = true;\n      this.invalidQuiz = false;\n    }\n    else{\n      this.validQuiz = false;\n    }\n  }\n\n  addSurvey(name, link, moduleId) {\n    this.submitted = true;\n\n    if(this.surveyForm.invalid){\n      return;\n    }\n\n    if(!this.validQuiz){\n      this.invalidQuiz = true;\n      return;\n    }\n\n    this.surveyService.addSurvey(name, link, moduleId).subscribe(() => {\n      alert(\"Added survey\");\n    })\n  }\n\n  fetchSurveys(courseId, modules: any[]) {\n    console.log(\"Fetching surveys: \" + courseId);\n    this.surveyService.fetchSurveys(courseId).subscribe((data: any[]) => {\n      this.surveysFromDB = data;\n      //console.log(\"surveysFromDB: \" + JSON.stringify(this.surveysFromDB));\n      this.pushSurveysToArray(data, this.surveys);\n\n      modules.forEach((val: any) => {\n        let moduleval = val;\n        for(let i = 0; i < data.length; i++) {\n          let val = data[i];\n          if(val.module_id == moduleval.module_id){\n            if(this.moduleSurveysFetched[val.module_id] == true){\n              console.log(\"Modules surveys fetched true\");\n              break;\n            }\n            else{\n              //console.log(val.module_id);\n              this.updateSurveyUrl(this.surveys, val.module_id);\n            }\n          }\n        }\n      })\n\n    })\n  }\n\n  updateSurvey(name, link, surveyId) {\n    this.submitted = true;\n\n    if(this.updateSurveyForm.invalid){\n      return;\n    }\n\n    if(!this.validQuiz){\n      this.invalidQuiz = true;\n      return;\n    }\n\n    //console.log(\"link: \" + link + \" \" + \"videoId: \" + videoId);\n    this.surveyService.updateSurvey(name, link, surveyId).subscribe(() => {\n      alert(\"Updated Quiz/Exam\");\n    })\n  }\n\n  deleteSurvey(surveyId, surveyNumber: number) {\n    //console.log(\"Delete video: \" + videoId);\n    let r = confirm(\"Delete Quiz/Exam \" + (surveyNumber + 1) + \": Are you sure?\");\n    if(r){\n      this.surveyService.deleteSurvey(surveyId).subscribe(() => {\n        alert(\"Deleted Quiz/Exam\");\n      })\n    }\n  }\n  // END SURVEYS CRUD (QUIZZES/EXAMS)\n\n}\n","<app-sidebar></app-sidebar>\n<div id=\"main\">\n\n\n<div class=\"flexbox-row\">\n    <div class=\"flexbox-top-container\">\n\n        <!-- Progress Bars -->\n        <!--<div class=\"align-self-stretch\">\n            <span>Your Points</span>\n            <div class=\"progress flexbox-progress-bar flexbox-top-options\" style=\"height: 30px;\">\n                <div class=\"progress-bar progress-bar-striped\" id=\"progressbar\" role=\"progressbar\" style=\"width: 10%\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{points}}%</div>\n            </div>\n        </div>\n\n        <div style=\"align-self: stretch\">\n            <span>Class Average Points</span>\n            <div class=\"progress flexbox-progress-bar flexbox-top-options\" style=\"height: 30px;\">\n                <div *ngIf=\"averagePoints\" class=\"progress-bar progress-bar-striped bg-info\" id=\"progressbarAvg\" role=\"progressbar\" style=\"width: 10%\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{averagePoints.average}}%</div>\n            </div>\n        </div>-->\n\n        <div class=\"align-self-stretch\">\n            <span>Class Average Points</span>\n            <p><ngb-progressbar type=\"info\" textType=\"white\" [value]=\"averagePoints ? averagePoints.average : 0\" [showValue]=\"true\" [striped]=\"true\" height=\"30px\"></ngb-progressbar></p>\n        </div>\n\n        <div class=\"align-self-stretch\">\n            <span>Your points</span>\n            <p><ngb-progressbar type=\"primary\" textType=\"white\" [value]=\"points ? points : 0\" [showValue]=\"true\" [striped]=\"true\" height=\"30px\"></ngb-progressbar></p>\n        </div>\n\n        <!-- End Progress Bars -->\n\n        <div *ngIf=\"currentUser && (isAdmin || isInstructor)\">\n            <button (click)=\"createModule(courseId)\" class=\"btn btn-success\"><i class=\"fas fa-plus-circle\"></i> Create Module</button>\n        </div>\n    </div>\n    <div class=\"flexbox-container\" *ngFor=\"let module of modules; let index = index\">\n        <ng-container *ngIf=\"!moduleLocked[index] || isAdmin || isInstructor; else lockedBlock\">\n            <span *ngIf=\"!moduleLocked[index] && (isAdmin || isInstructor); else lockedBlock0\"style=\"color: blue;\">locked until: {{module.lockedUntil}}</span>\n            <ng-template #lockedBlock0>\n                <span *ngIf=\"isAdmin || isInstructor\" style=\"color: red\">locked until: {{module.lockedUntil}}</span>\n            </ng-template>\n            <div class=\"flexbox-options\">\n\n                <!--FORM CONTENT IN MODAL FOR VIDEO ADD-->\n                <ng-template #contentVideoAdd let-modal>\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Add Youtube Video</h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form [formGroup]=\"videoForm\" class=\"col-9\">\n\n                            <div class=\"alert alert-info\">\n                                <p>Valid youtube links are of the formats:<br> https://youtu.be/*********** <br>And <br>https://www.youtube.com/watch?v=***********</p>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label for=\"link\"><span style=\"color: red\">*</span>Link</label>\n                                <input type=\"text\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && v.link.errors, 'is-valid': validLink }\" required formControlName=\"link\" #link (keyup)=\"handleValidLink($event)\">\n                                <div *ngIf=\"submitted && v.link.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.link.errors.required\">Link is required</div>\n                                </div>\n                                <div *ngIf=\"validLink\" class=\"valid-feedback\">\n                                    Valid youtube link\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"invalidLink && !validLink\" class=\"alert alert-danger\">\n                                Invalid Youtube Link\n                            </div>\n                        \n\n\n                            <button *ngIf=\"isAdmin || isInstructor\" type=\"submit\" (click)=\"addVideo(link.value, module.module_id)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Add Video</button>\n                            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                    </div>\n                </ng-template>\n                <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success\" (click)=\"open(contentVideoAdd)\">Add Video</button>\n                <!--END OF FORM CONTENT IN MODAL FOR VIDEO ADD-->\n\n                <!--FORM CONTENT IN MODAL FOR PDF ADD-->\n                <ng-template #contentPdfAdd let-modal>\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Add PDF File</h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n\n                        <form [formGroup]=\"pdfForm\" (ngSubmit)=\"addPdf(module.module_id)\"class=\"col-9\" method=\"POST\" enctype=\"multipart/form-data\">\n\n                            <div class=\"form-group\">\n                                <label for=\"pdf\"><span style=\"color: red\">*</span>Select a PDF File</label>\n                                <input id=\"theFile\" type=\"file\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && p.pdf.errors }\" name=\"pdf\" #file (change)=\"handleFileInput($event)\" required>\n                                <div *ngIf=\"submitted && p.pdf.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"p.pdf.errors.required\">Pdf is required</div>\n                                </div>\n                            </div>\n\n                        \n                            <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Add PDF</button>\n                        </form>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                    </div>\n                </ng-template>\n                <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success\" (click)=\"open(contentPdfAdd)\">Add PDF</button>\n                <!--END OF FORM CONTENT IN MODAL FOR PDF ADD-->\n\n                <!--FORM CONTENT IN MODAL FOR SURVEY ADD-->\n                <ng-template #contentSurveyAdd let-modal>\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Add Qualtrics Quiz/Exam</h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form [formGroup]=\"surveyForm\" class=\"col-9\">\n\n                            <div class=\"alert alert-info\">\n                                <p>Valid Qualtrics links are of the formats:<br> https://fiu.qualtrics.com/jfe/form/******************</p>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label for=\"name\"><span style=\"color: red\">*</span>Name</label>\n                                <input type=\"text\" class=\"form-control\"  formControlName=\"name\" #name [ngClass]=\"{ 'is-invalid': submitted && s.name.errors }\" required>\n                                <div *ngIf=\"submitted && s.name.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"s.name.errors.required\">Name is required</div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group\">\n                                <label for=\"link\"><span style=\"color: red\">*</span>Link</label>\n                                <input type=\"text\" class=\"form-control\"  formControlName=\"link\" #link [ngClass]=\"{ 'is-invalid': submitted && s.link.errors, 'is-valid': validQuiz }\" required (keyup)=\"handleValidQuiz($event)\">\n                                <div *ngIf=\"submitted && s.link.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"s.link.errors.required\">Link is required</div>\n                                </div>\n                                <div *ngIf=\"validQuiz\" class=\"valid-feedback\">\n                                    Valid Qualtrics link\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"invalidQuiz && !validQuiz\" class=\"alert alert-danger\">\n                                Invalid Qualtrics Link\n                            </div>\n                        \n                            <button *ngIf=\"isAdmin || isInstructor\" type=\"submit\" (click)=\"addSurvey(name.value, link.value, module.module_id)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Add Quiz/Exam</button>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                    </div>\n                </ng-template>\n                <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success\" (click)=\"open(contentSurveyAdd)\">Add Quiz/Exam</button>\n                <!--END OF FORM CONTENT IN MODAL FOR SURVEY ADD-->\n\n            </div>\n\n            <!--CONTENT IN EACH MODULE-->\n            <div class=\"flexbox-item\" *ngIf=\"!toggleContent[index]; else moduleBlock\" (click)=\"openModule(index)\" style=\"cursor:pointer\">\n                <i class=\"fas fa-caret-right\"></i> <strong>Module {{ module.module_number }} </strong>| {{ module.module_title }}\n            </div>\n            <ng-template #moduleBlock>\n                <div class=\"flexbox-item\" (click)=\"openModule(index)\" style=\"cursor:pointer\">\n                    <i class=\"fas fa-caret-down\"></i> <strong>Module {{ module.module_number }} </strong>| {{ module.module_title }}\n                </div>\n            </ng-template>\n            <div class=\"flexbox-subcontainer\" *ngIf=\"toggleContent[index]\">\n                <!--RESOURCES PDF CONTENT-->\n                <div class=\"flexbox-resources\" *ngFor=\"let pdf of safePdfs | keyvalue; let index = index\">\n                    <div *ngIf=\"pdf.key == module.module_id\">\n                        <div class=\"flexbox-resources-inner\" *ngFor=\"let innerpdf of pdf.value; let j = index\">\n                            <i class=\"fas fa-paperclip\"></i>\n\n                            <ng-template #contentPdf let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">{{module.module_title}} - Pdf {{j + 1}}</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <div class=\"embed-responsive embed-responsive-16by9\">\n                                        <iframe class=\"embed-responsive-item\" width=\"780\" height=\"480\" [src]=\"innerpdf.pdf\"></iframe>\n                                        <!--<a [href]=\"innerpdf.pdf\">Link</a>-->\n                                    </div>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button class=\"btn btn-primary\" (click)=\"open(contentPdf)\">View Pdf {{j + 1}}</button>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-danger flexbox-module-options\" (click)=\"deletePDF(innerpdf.pdf_id, j)\">Delete Pdf</button>\n\n                            <!--FORM CONTENT IN MODAL FOR PDF EDIT-->\n                            <ng-template #contentPdfUpdate let-modal>\n                            <div class=\"modal-header\">\n                                <h4 class=\"modal-title\">Edit PDF</h4>\n                                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <form [formGroup]=\"updatePdfForm\" (ngSubmit)=\"updatePDF(innerpdf.pdf_id, module.module_id)\"class=\"col-9\" method=\"POST\" enctype=\"multipart/form-data\">\n\n                                    <div class=\"form-group\">\n                                        <label for=\"pdf\"><span style=\"color: red\">*</span>Select a PDF File</label>\n                                        <input id=\"theFile\" type=\"file\" class=\"form-control\" name=\"pdf\" #file (change)=\"handleFileInputUpdate($event)\" [ngClass]=\"{ 'is-invalid': submitted && pu.pdf.errors }\" required>\n                                        <div *ngIf=\"submitted && pu.pdf.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"pu.pdf.errors.required\">Pdf is required</div>\n                                        </div>\n                                    </div>\n                                \n                                    <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update PDF</button>\n                                </form>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                            </div>\n                        </ng-template>\n                        <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success flexbox-module-options\" (click)=\"openUpdatePDF(contentPdfUpdate, innerpdf.rawPdf)\">Edit PDF</button>\n                        <!--END OF FORM CONTENT IN MODAL FOR PDF EDIT-->\n\n                        </div>\n                    </div>\n                </div>\n                <!--END OF RESOURCES PDF CONTENT-->\n\n                <!--YOUTUBE LINKS CONTENT-->\n                <div class=\"flexbox-links\" *ngFor=\"let link of safeLinks | keyvalue; let index = index\">\n                    <div *ngIf=\"link.key == module.module_id\">\n                        <div class=\"flexbox-links-inner\" *ngFor=\"let innerlink of link.value; let j = index\">\n                            <i class=\"fab fa-youtube\"></i>    \n\n                            <ng-template #contentVideo let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">{{module.module_title}} - Video {{j + 1}}</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <div class=\"embed-responsive embed-responsive-16by9\">\n                                        <iframe class=\"embed-responsive-item\" width=\"780\" height=\"480\" [src]=\"innerlink.videoUrl\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                    </div>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button class=\"btn btn-primary\" (click)=\"open(contentVideo)\">Watch Video {{j + 1}}</button>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-danger flexbox-module-options\" (click)=\"deleteVideo(innerlink.video_id, j)\">Delete Video</button>\n\n                            <!--FORM CONTENT IN MODAL FOR VIDEO EDIT-->\n                            <ng-template #contentVideoUpdate let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">Edit Youtube Video</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <form [formGroup]=\"updateVideoForm\" class=\"col-9\">\n            \n                                        <div class=\"alert alert-info\">\n                                            <p>Valid youtube links are of the formats:<br> https://youtu.be/*********** <br>And <br>https://www.youtube.com/watch?v=***********</p>\n                                        </div>\n\n                                        <div class=\"form-group\">\n                                            <label for=\"linkInput\"><span style=\"color: red\">*</span>New Link</label>\n                                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"linkInput\" #linkInput [ngClass]=\"{ 'is-invalid': submitted && vu.linkInput.errors, 'is-valid': validLink }\" required (keyup)=\"handleValidLink($event)\">\n                                            <div *ngIf=\"submitted && vu.linkInput.errors\" class=\"invalid-feedback\">\n                                                <div *ngIf=\"vu.linkInput.errors.required\">Link is required</div>\n                                            </div>\n                                            <div *ngIf=\"validLink\" class=\"valid-feedback\">\n                                                Valid youtube link\n                                            </div>\n                                        </div>\n\n                                        <div *ngIf=\"invalidLink && !validLink\" class=\"alert alert-danger\">\n                                            Invalid Youtube Link\n                                        </div>\n                                    \n                                        <button type=\"submit\" (click)=\"updateVideo(linkInput.value, innerlink.video_id)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Video</button>\n                                    </form>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success flexbox-module-options\" (click)=\"openUpdateVideo(contentVideoUpdate, innerlink.url)\">Edit Video</button>\n                            <!--END OF FORM CONTENT IN MODAL FOR VIDEO EDIT-->\n                        </div>\n                    </div>\n                </div>\n                <!--END OF YOUTUBE LINKS CONTENT-->\n\n                <!--QUIZZES LINKS CONTENT-->\n                <div class=\"flexbox-links\" *ngFor=\"let survey of safeSurveys | keyvalue; let index = index\">\n                    <div *ngIf=\"survey.key == module.module_id\">\n                        <div class=\"flexbox-links-inner\" *ngFor=\"let surveyObject of survey.value; let j = index\">\n                            <i class=\"fas fa-paper-plane\"></i>    \n\n                            <ng-template #contentSurvey let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">{{module.module_title}} - {{surveyObject.name}}</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <div class=\"embed-responsive embed-responsive-16by9\">\n                                        <iframe class=\"embed-responsive-item\" width=\"780\" height=\"480\" [src]=\"surveyObject.surveyUrl\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                    </div>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button class=\"btn btn-primary\" (click)=\"open(contentSurvey)\">Take Quiz {{j + 1}}</button>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-danger flexbox-module-options\" (click)=\"deleteSurvey(surveyObject.survey_id, j)\">Delete Quiz/Exam</button>\n\n                            <!--FORM CONTENT IN MODAL FOR QUIZ EDIT-->\n                            <ng-template #contentSurveyUpdate let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">Edit Quiz/Exam</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <form [formGroup]=\"updateSurveyForm\" class=\"col-9\">\n            \n                                        <div class=\"alert alert-info\">\n                                            <p>Valid Qualtrics links are of the formats:<br> https://fiu.qualtrics.com/jfe/form/******************</p>\n                                        </div>\n                                        \n                                        <div class=\"form-group\">\n                                            <label for=\"name\"><span style=\"color: red\">*</span>New Name</label>\n                                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"name\" #name [ngClass]=\"{ 'is-invalid': submitted && su.name.errors }\" required>\n                                            <div *ngIf=\"submitted && su.name.errors\" class=\"invalid-feedback\">\n                                                <div *ngIf=\"su.name.errors.required\">Name is required</div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"form-group\">\n                                            <label for=\"link\"><span style=\"color: red\">*</span>New Link</label>\n                                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"link\" #link [ngClass]=\"{ 'is-invalid': submitted && su.link.errors, 'is-valid': validQuiz }\" required (keyup)=\"handleValidQuiz($event)\">\n                                            <div *ngIf=\"submitted && su.link.errors\" class=\"invalid-feedback\">\n                                                <div *ngIf=\"su.link.errors.required\">Link is required</div>\n                                            </div>\n                                            <div *ngIf=\"validQuiz\" class=\"valid-feedback\">\n                                                Valid Qualtrics link\n                                            </div>\n                                        </div>\n\n                                        <div *ngIf=\"invalidQuiz && !validQuiz\" class=\"alert alert-danger\">\n                                            Invalid Qualtrics Link\n                                        </div>\n                                    \n                                        <button type=\"submit\" (click)=\"updateSurvey(name.value, link.value, surveyObject.survey_id)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Quiz/Exam</button>\n                                    </form>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success flexbox-module-options\" (click)=\"openUpdateSurvey(contentSurveyUpdate, surveyObject.name, surveyObject.url)\">Edit Quiz/Exam</button>\n                            <!--END OF FORM CONTENT IN MODAL FOR QUIZ EDIT-->\n                        </div>\n                    </div>\n                </div>\n                <!--END OF QUIZZES LINKS CONTENT-->\n\n            </div>  \n            <div class=\"flexbox-item-module-actions\" *ngIf=\"currentUser\">\n                <button *ngIf=\"isAdmin || isInstructor\" type=\"button\" (click)=\"editModule(module.course_id, module.module_id)\" class=\"btn btn-primary\"><i class=\"fas fa-edit\"></i> Edit</button>\n                <button *ngIf=\"isAdmin || isInstructor\" type=\"button\" (click)=\"deleteModule(module.module_id, module.module_number)\" class=\"btn btn-danger\"><i class=\"fas fa-minus-circle\"></i> Delete</button>\n                <button type=\"button\" (click)=\"viewDiscussion(module.course_id, module.module_id)\" class=\"btn btn-primary\"><i class=\"fas fa-comments\"></i> View Discussion</button>\n            </div>\n            <!--END OF CONTENT IN EACH MODULE-->\n        </ng-container>\n\n            <ng-template #lockedBlock>\n                <span style=\"color: red;\">locked until: {{module.lockedUntil}}</span>\n                <div class=\"flexbox-item\" (click)=\"openModule(index)\" style=\"cursor: not-allowed; opacity: 0.5;\">\n                    <i class=\"fas fa-caret-right\"></i> <strong>Module {{ module.module_number }} </strong>| {{ module.module_title }}\n                </div>\n            </ng-template>\n    </div>\n</div>\n\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ModuleService } from '@app/core/services/module.service';\nimport { DiscussionService } from '@app/core/services/discussion.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.scss']\n})\nexport class CreatePostComponent implements OnInit {\n\n  postForm: FormGroup;\n  module: Promise<object>|null = null;\n  currentUser: User;\n  userPayload: User;\n  submitted = false;\n\n  @ViewChild('textArea', { read: ElementRef }) textArea: ElementRef;\n  \n  constructor(private fb: FormBuilder, private discussionService: DiscussionService, private moduleService: ModuleService, private authenticationService: AuthenticationService, private route: ActivatedRoute) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  get p() { return this.postForm.controls; };\n\n  ngOnInit(): void {\n    //this.userPayload = decode(this.currentUser.token);\n\n    this.route.params.subscribe((params) => {\n      this.moduleService.getModuleById(params.moduleId).subscribe((moduleData) => {\n        this.module = new Promise((resolve, reject) => {\n          resolve(moduleData[0]);\n        });\n      });\n    });\n    this.createForm();\n  }\n\n  createForm(){\n    this.postForm = this.fb.group({\n      post: ['', Validators.required]\n    })\n  }\n\n  createPost(post){\n    this.submitted = true;\n\n    if(!this.postForm.valid){\n      return;\n    }\n\n    this.module.then((moduleVal: any) => {\n      let userName = this.currentUser.f_name + \" \" + this.currentUser.l_name;\n      let today = new Date();\n      this.discussionService.createDiscussion(userName, post, today, today, moduleVal.id, this.currentUser.id).subscribe(() => {\n        alert(\"Created post\");\n      })\n    })\n  }\n\n  public autoGrow() {\n    const textArea = this.textArea.nativeElement;\n    textArea.style.overflow = 'hidden';\n    textArea.style.height = '0px';\n    textArea.style.height = textArea.scrollHeight + 'px';\n   }\n   \n}\n","<div class=\"center-form announcement\">\n<form [formGroup]=\"postForm\">\n\n    <div class=\"form-group\">\n        <textarea class=\"form-control\" rows=\"2\" placeholder=\"Add a post...\" [ngClass]=\"{ 'is-invalid': submitted && p.post.errors }\" required formControlName=\"post\" #post style=\"width: 300px\"\n          matInput cdkTextareaAutosize cdkAutosizeMinRows=\"2\"></textarea>\n        <div *ngIf=\"submitted && p.post.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"p.post.errors.required\">Post cannot be empty</div>\n        </div>\n    </div>\n\n    <button type=\"submit\" (click)=\"createPost(post.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Create Post</button>\n</form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { DiscussionService } from '@app/core/services/discussion.service';\nimport { ModuleService } from '@app/core/services/module.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n@Component({\n  selector: 'app-discussion',\n  templateUrl: './discussion.component.html',\n  styleUrls: ['./discussion.component.scss']\n})\nexport class DiscussionComponent implements OnInit {\n\n  discussions = [];\n  moduleDetails = {};\n  currentUser: User;\n  userPayload: User;\n\n  constructor(private discussionService: DiscussionService, private moduleService: ModuleService, private authenticationService: AuthenticationService, private route: ActivatedRoute) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit(): void {\n    //this.userPayload = decode(this.currentUser.token);\n\n    this.route.params.subscribe((params) => {\n      this.discussionService.getDiscussionsInModule(params.moduleId).subscribe((discussionsData: any[]) => {\n        console.log(discussionsData);\n        this.discussions = discussionsData;\n      })   \n      this.moduleService.getModuleById(params.moduleId).subscribe((moduleData: any[]) => {\n        console.log(moduleData[0]);\n        this.moduleDetails = moduleData[0];\n      })\n    })\n  }\n\n  deletePost(discussionId){\n    let r = confirm(\"Delete post: Are you sure?\");\n    if(r){\n      this.discussionService.deleteDiscussion(discussionId).subscribe(() => {\n        alert(\"Deleted post successfully\");\n      })\n    }\n  }\n\n}\n","<div class=\"center-form\">\n    <div *ngIf=\"moduleDetails as md\">\n        <h1 style=\"text-align: center;\">Discussion</h1>\n        <h2 style=\"text-align: center;\">Module {{md.number}}</h2>\n        <h3>{{md.title}}</h3>\n    </div>\n    <app-create-post></app-create-post>\n        <div *ngFor=\"let post of discussions\" class=\"announcement\">\n            <p>\n                {{post.user}} | {{post.created >= post.changed ? (post.created | date:'short') : (post.changed | date:'short')}}<br>\n                {{post.post}}<br>\n                <app-edit-post *ngIf=\"post.user_id == currentUser.id\" [discussionData]=\"post\"></app-edit-post>\n                <button *ngIf=\"post.user_id == currentUser.id\" type=\"button\" (click)=\"deletePost(post.discussion_id)\" class=\"btn btn-danger\">Delete Post</button>\n            </p>\n        </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DiscussionService } from '@app/core/services/discussion.service';\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.scss']\n})\nexport class EditPostComponent implements OnInit {\n\n  editPostForm: FormGroup;\n  submitted = false;\n  discussions;\n\n  @Input() discussionData;\n\n  constructor(private modalService: NgbModal, private fb: FormBuilder, private discussionService: DiscussionService) { }\n\n\n  ngOnInit(): void {\n    this.makeForm();\n  }\n\n  get up() { return this.editPostForm.controls; }\n\n  makeForm(){\n    this.editPostForm = this.fb.group({\n      post: ['', Validators.required]\n    })\n  }\n\n  open(content) {\n    this.editPostForm.get('post').setValue(this.discussionData.post);\n    this.modalService.open(content, { size: 'lg', centered: true });\n  }\n\n  updatePost(post){\n    this.submitted = true;\n\n    if(!this.editPostForm.valid){\n      return;\n    }\n\n    let today = new Date();\n    this.discussionService.updateDiscussion(post, today, this.discussionData.discussion_id).subscribe(() => {\n      alert(\"Updated post\");\n    })\n  }\n\n}\n","<ng-template #contentPostEdit let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Edit Your Post</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <form [formGroup]=\"editPostForm\" class=\"col-9\">\n\n            <div class=\"form-group\">\n                <label for=\"post\">Post</label>\n                <textarea class=\"form-control\" rows=\"3\" [ngClass]=\"{ 'is-invalid': submitted && up.post.errors }\" required formControlName=\"post\" #post></textarea>\n                <div *ngIf=\"submitted && up.post.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"up.post.errors.required\">Post is required</div>\n                </div>\n            </div>\n        \n\n\n            <button type=\"submit\" (click)=\"updatePost(post.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Post</button>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n    </div>\n</ng-template>\n<button class=\"btn btn-success\" (click)=\"open(contentPostEdit)\">Edit Post</button>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ModuleService } from '@app/core/services/module.service';\n\n@Component({\n  selector: 'app-create-module',\n  templateUrl: './create-module.component.html',\n  styleUrls: ['./create-module.component.scss']\n})\nexport class CreateModuleComponent implements OnInit {\n  moduleForm: FormGroup;\n  labels = ['number', 'title', 'lockedUntil'];\n  courseId: number;\n  submitted = false;\n  todayDate: Promise<string>|null = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private moduleService: ModuleService, private fb: FormBuilder) {\n    this.moduleForm = this.fb.group({\n      number: ['', Validators.required],\n      title: ['', Validators.required],\n      lockedUntil: ['', Validators.required]\n    });\n   }\n\n\n  get m() { return this.moduleForm.controls; }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n      console.log(\"params id create: \" + params.id);\n    })\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    this.todayDate = new Promise((resolve, reject) => { resolve(mm + '/' + dd + '/' + yyyy)});\n  }\n\n  addModule(number, title, lockedUntil) {\n    this.submitted = true;\n\n    let today = new Date(lockedUntil);\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    lockedUntil = yyyy + '-' + mm + '-' + dd;\n\n    console.log(\"going to submit lockedUntil: \" + lockedUntil);\n    if(!this.moduleForm.valid){\n      return;\n    }\n\n    this.moduleService.addModule(this.courseId, number, title, lockedUntil).subscribe(() => {\n      //this.router.navigate(['/admin']);\n      alert(\"Added module successfully!\");\n    });\n  }\n\n  onDateSelect(event){\n    this.todayDate = new Promise((resolve, reject) => { resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year); });\n  }\n\n}\n","<div class=\"center-form\">\n    <h2>Create New Module</h2>\n    <form [formGroup]=\"moduleForm\" class=\"col-sm-4\">\n    \n        <div class=\"form-group\">\n            <label for=\"number\">Number</label>\n            <input type=\"text\" class=\"form-control\"  formControlName=\"number\" #number [ngClass]=\"{ 'is-invalid': submitted && m.number.errors }\" required>\n            <div *ngIf=\"submitted && m.number.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"m.number.errors.required\">Number is required</div>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <textarea class=\"form-control\"  formControlName=\"title\" #title [ngClass]=\"{ 'is-invalid': submitted && m.title.errors }\" required></textarea>\n            <div *ngIf=\"submitted && m.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"m.title.errors.required\">Title is required</div>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"lockedUntil\">Locked Until</label>\n            <div class=\"input-group\">\n                <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n                       name=\"dp\" ngbDatepicker (dateSelect)=\"onDateSelect($event)\" #d=\"ngbDatepicker\" formControlName=\"lockedUntil\" #lockedUntil readonly [value]=\"todayDate | async\" [ngClass]=\"{ 'is-invalid': submitted && m.lockedUntil.errors }\" required>\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d.toggle()\" type=\"button\"></button>\n                </div>\n                <div *ngIf=\"submitted && m.lockedUntil.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"m.lockedUntil.errors.required\">Locked Until is required</div>\n                </div>\n            </div>\n        </div>\n    \n        <button type=\"submit\" (click)=\"addModule(number.value, title.value, lockedUntil.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Create Module</button>\n        <!--<a routerLink=\"/admin\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>-->\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { Module } from '@app/core/models/module.model';\nimport { ModuleService } from '@app/core/services/module.service';\n\n@Component({\n  selector: 'app-edit-module',\n  templateUrl: './edit-module.component.html',\n  styleUrls: ['./edit-module.component.scss']\n})\nexport class EditModuleComponent implements OnInit {\n  id: number;\n  moduleNumber: number;\n  module: Module;\n  updateForm: FormGroup;\n  submitted = false;\n  startDate;\n  givenDate: Promise<string>|null = null;\n\n  constructor(private moduleService: ModuleService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\n    this.CreateForm();\n   }\n\n   CreateForm() {\n     this.updateForm = this.fb.group({\n       number: ['', Validators.required],\n       title: ['', Validators.required],\n       lockedUntil: ['', Validators.required]\n     })\n   }\n\n  get mu() { return this.updateForm.controls; }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params.moduleId;\n      this.moduleService.getModuleById(this.id).subscribe((res: Module) => {\n        this.module = res[0];\n\n        this.moduleNumber = this.module.number;\n        //console.log(this.module);\n        //console.log(this.module.id);\n\n        this.updateForm.get('number').setValue(this.module.number);\n        this.updateForm.get('title').setValue(this.module.title);\n        this.updateForm.get('lockedUntil').setValue(this.module.lockedUntil);\n        //this.givenDate = this.module.lockedUntil;\n        let newDate = new Date(this.module.lockedUntil.toString());\n        let dd = String(newDate.getDate() + 1).padStart(2, '0');\n        let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let yyyy = newDate.getFullYear();\n\n        this.givenDate = new Promise((resolve, reject) => { resolve(mm + '/' + dd + '/' + yyyy); });\n        this.startDate = (\"\"+this.module.lockedUntil).split(\"-\");\n        //console.log(this.startDate);\n      })\n    })\n  }\n\n  updateModule(number, title, lockedUntil) {\n    this.submitted = true;\n\n    let today = new Date(lockedUntil);\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    lockedUntil = yyyy + '-' + mm + '-' + dd;\n\n    //console.log(\"going to submit lockedUntil: \" + lockedUntil);\n    if(!this.updateForm.valid){\n      return;\n    }\n      this.moduleService.updateModule(this.id, number, title, lockedUntil).subscribe(res => {\n        alert('Module updated successfully');\n      });\n  }\n\n  onDateSelect(event){\n    this.givenDate = new Promise((resolve, reject) => { resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year); });\n  }\n\n}\n","<div class=\"center-form\">\n    <h2>Edit Module {{moduleNumber}}</h2>\n    <form [formGroup]=\"updateForm\" class=\"col-sm-4\">\n    \n        <div class=\"form-group\">\n            <label for=\"number\">Number</label>\n            <input type=\"text\" class=\"form-control\"  formControlName=\"number\" #number [ngClass]=\"{ 'is-invalid': submitted && mu.number.errors }\" required>\n            <div *ngIf=\"submitted && mu.number.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"mu.number.errors.required\">Number is required</div>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <textarea class=\"form-control\"  formControlName=\"title\" #title [ngClass]=\"{ 'is-invalid': submitted && mu.title.errors }\" required></textarea>\n            <div *ngIf=\"submitted && mu.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"mu.title.errors.required\">Title is required</div>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"lockedUntil\">Locked Until</label>\n            <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n                       name=\"dp\" ngbDatepicker (dateSelect)=\"onDateSelect($event)\" #d=\"ngbDatepicker\" readonly [value]=\"givenDate | async\" formControlName=\"lockedUntil\" #lockedUntil [ngClass]=\"{ 'is-invalid': submitted && mu.lockedUntil.errors }\" required>\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d.toggle()\" type=\"button\"></button>\n                </div>\n                <div *ngIf=\"submitted && mu.lockedUntil.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"mu.lockedUntil.errors.required\">Locked Until is required</div>\n                </div>\n            </div>\n        </div>\n    \n        <button type=\"submit\" (click)=\"updateModule(number.value, title.value, lockedUntil.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Module</button>\n        <!--<a routerLink=\"/admin\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>-->\n    </form>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar-button',\n  templateUrl: './sidebar-button.component.html',\n  styleUrls: ['./sidebar-button.component.scss']\n})\nexport class SidebarButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  sidebarIsOpen = false;\n  openNav(){\n    \n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    \n    document.getElementById(\"main\").style.marginLeft = \"250px\";\n    document.getElementById(\"mySidenav\").style.display = \"block\";\n    this.sidebarIsOpen = true;\n  }\n\n  closeNav(){\n    document.getElementById(\"mySidenav\").style.display = \"none\";\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n\n    document.getElementById(\"main\").style.marginLeft = \"0\";\n    this.sidebarIsOpen = false;\n  }\n}\n","<div *ngIf=\"sidebarIsOpen == false\" class=\"flexbox-row\">\n    <span (click)=\"openNav()\" class=\"flexbox-side\" style=\"cursor: pointer\"><i class=\"fas fa-angle-double-right fa-5x\"></i></span>\n</div>\n<div *ngIf=\"sidebarIsOpen == true\" class=\"flexbox-row\">\n    <span (click)=\"closeNav()\" class=\"flexbox-side\" style=\"cursor: pointer\"><i class=\"fas fa-angle-double-left fa-5x\"></i></span>\n</div>  \n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  courseId: number;\n\n  constructor(private route: ActivatedRoute) { }\n  sidebarIsOpen = true;\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n    })\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\n    document.getElementById(\"mySidenav\").style.display = \"block\";\n  }\n\n}\n","<div id=\"mySidenav\" class=\"sidenav\">\n    <a class=\"nav-link\" [routerLink]=\"['/courses', courseId]\" routerLinkActive=\"active\">Home</a>\n    <a class=\"nav-link\" routerLink=\"/courses/{{courseId}}/announcements\" routerLinkActive=\"active\">Announcements</a>\n    <a class=\"nav-link\" routerLink=\"/courses/{{courseId}}/leaderboard\" routerLinkActive=\"active\">Leaderboard</a>\n    <a class=\"nav-link\" routerLink=\"/courses/{{courseId}}/modules\" routerLinkActive=\"active\">Modules</a>\n</div>"],"sourceRoot":"webpack:///"}