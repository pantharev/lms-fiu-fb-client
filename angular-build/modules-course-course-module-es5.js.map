{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js","webpack:///src/app/core/services/announcement.service.ts","webpack:///src/app/core/services/course-announcement.service.ts","webpack:///src/app/core/services/discussion.service.ts","webpack:///src/app/core/services/module.service.ts","webpack:///src/app/core/services/pdf.service.ts","webpack:///src/app/core/services/survey.service.ts","webpack:///src/app/core/services/video.service.ts","webpack:///src/app/modules/course/announcementsManagement/announcements/announcements.component.ts","webpack:///src/app/modules/course/announcementsManagement/announcements/announcements.component.html","webpack:///src/app/modules/course/announcementsManagement/create-announcement/create-announcement.component.ts","webpack:///src/app/modules/course/announcementsManagement/create-announcement/create-announcement.component.html","webpack:///src/app/modules/course/announcementsManagement/edit-announcement/edit-announcement.component.ts","webpack:///src/app/modules/course/announcementsManagement/edit-announcement/edit-announcement.component.html","webpack:///src/app/modules/course/announcementsManagement/view-created-announcements/view-created-announcements.component.ts","webpack:///src/app/modules/course/announcementsManagement/view-created-announcements/view-created-announcements.component.html","webpack:///src/app/modules/course/course-routing.module.ts","webpack:///src/app/modules/course/course.module.ts","webpack:///src/app/modules/course/dashboard/dashboard.component.html","webpack:///src/app/modules/course/dashboard/dashboard.component.ts","webpack:///src/app/modules/course/home-edit/home-edit.component.ts","webpack:///src/app/modules/course/home-edit/home-edit.component.html","webpack:///src/app/modules/course/home/home.component.ts","webpack:///src/app/modules/course/home/home.component.html","webpack:///src/app/modules/course/leaderboard/leaderboard.component.ts","webpack:///src/app/modules/course/leaderboard/leaderboard.component.html","webpack:///src/app/modules/course/modules/modules.component.ts","webpack:///src/app/modules/course/modules/modules.component.html","webpack:///src/app/modules/course/modulesDiscussion/create-post/create-post.component.ts","webpack:///src/app/modules/course/modulesDiscussion/create-post/create-post.component.html","webpack:///src/app/modules/course/modulesDiscussion/discussion/discussion.component.ts","webpack:///src/app/modules/course/modulesDiscussion/discussion/discussion.component.html","webpack:///src/app/modules/course/modulesDiscussion/edit-post/edit-post.component.ts","webpack:///src/app/modules/course/modulesDiscussion/edit-post/edit-post.component.html","webpack:///src/app/modules/course/modulesManagement/create-module/create-module.component.ts","webpack:///src/app/modules/course/modulesManagement/create-module/create-module.component.html","webpack:///src/app/modules/course/modulesManagement/edit-module/edit-module.component.ts","webpack:///src/app/modules/course/modulesManagement/edit-module/edit-module.component.html","webpack:///src/app/modules/course/sidebar-button/sidebar-button.component.ts","webpack:///src/app/modules/course/sidebar-button/sidebar-button.component.html","webpack:///src/app/modules/course/sidebar/sidebar.component.ts","webpack:///src/app/modules/course/sidebar/sidebar.component.html"],"names":["LayoutModule","ɵmod","type","ɵinj","factory","LayoutModule_Factory","t","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","ɵfac","MediaMatcher_Factory","ctorParameters","ɵprov","token","providedIn","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointState","InternalBreakpointState","Query","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","next","complete","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","state","get","queryObservable","observer","handler","run","nextMql","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","concat","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","listenerOptions","passive","AutofillMonitor","_ngZone","_monitoredElements","elementOrRef","element","info","subject","asObservable","result","cssClass","listener","event","animationName","classList","contains","target","isAutofilled","remove","runOutsideAngular","addEventListener","unlisten","removeEventListener","_info","stopMonitoring","AutofillMonitor_Factory","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","monitor","subscribe","emit","CdkAutofill_Factory","ɵdir","selectors","outputs","propDecorators","selector","CdkTextareaAutosize","_destroyed","_enabled","_previousMinRows","_document","_textareaElement","nativeElement","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","resizeToFitContent","_getWindow","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","clientHeight","removeChild","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","setTimeout","undefined","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","inputs","enabled","exportAs","decorators","host","TextFieldModule","TextFieldModule_Factory","imports","ngJitMode","declarations","exports","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","features","getMatInputUnsupportedTypeError","Error","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","nextUniqueId","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_uid","_isServer","_isNativeSelect","focused","stateChanges","controlType","autofilled","_disabled","_required","_type","_readonly","_neverEmptyInputTypes","filter","_inputValueAccessor","_previousNativeValue","id","IOS","el","nodeName","toLowerCase","multiple","updateErrorState","_dirtyCheckNativeValue","options","focus","isFocused","readonly","newValue","indexOf","validity","badInput","ids","_ariaDescribedby","join","disabled","_id","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","empty","selectedIndex","label","MatInput_Factory","hostVars","MatInput_HostBindings","MatInput_blur_HostBindingHandler","_focusChanged","MatInput_focus_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","required","errorState","toString","errorStateMatcher","provide","useExisting","providers","MatInputModule","MatInputModule_Factory","matTooltipAnimations","tooltipState","opacity","transform","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MatTooltipDefaultOptions","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_overlay","_scrollDispatcher","_viewContainerRef","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_hammerLoader","_position","touchGestures","_message","_passiveListeners","_handleKeydown","_isTooltipVisible","keyCode","preventDefault","stopPropagation","hide","_scrollStrategy","origin","show","_setupPointerEvents","clearTimeout","_touchstartTimeout","_overlayRef","dispose","_tooltipInstance","clear","removeDescription","message","delay","_showTimeoutId","_hideTimeoutId","overlayRef","_createOverlay","_detach","_portal","TooltipComponent","attach","instance","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","isVisible","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","change","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","panelClass","_updatePosition","detachments","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","Object","assign","main","fallback","isLtr","originPosition","originX","originY","_invertPosition","x","y","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","updatePosition","tooltipClass","ANDROID","_disableNativeGesturesIfNecessary","touchendListener","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","Promise","resolve","then","describe","MatTooltip_Factory","_changeDetectorRef","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","observe","toState","markForCheck","TooltipComponent_Factory","ɵcmp","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","decls","vars","consts","template","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","$event","_animationDone","tmp_0_0","currVal_0","directives","pipes","styles","encapsulation","data","animation","changeDetection","None","OnPush","animations","MatTooltipModule","MatTooltipModule_Factory","entryComponents","AnnouncementService","http","checkedCourses","sharedCheckedCourses","editCourses","sharedEditCourses","user","content","created","changed","user_id","announcement","post","apiURL","put","CourseAnnouncementService","course_id","announcement_id","courseAnnouncement","DiscussionService","module_id","discussion","moduleId","discussionId","ModuleService","courseId","number","title","lockedUntil","moduleO","PdfService","formData","pdfID","SurveyService","name","link","survey","surveyId","VideoService","video","videoId","AnnouncementsComponent","announcementService","route","params","log","fetchAnnouncementsByCourseId","announcements","templateUrl","styleUrls","CreateAnnouncementComponent","courseAnnouncementService","authenticationService","courseService","router","Editor","editorData","courses","currentUser","userPayload","f_name","subscription","i","arr","getCourseById","course","unsubscribe","editor","setData","getData","isCleared","l_name","today","Date","createAnnouncement","length","createCourseAnnouncement","alert","onChange","EditAnnouncementComponent","announcementId","fetchAnnouncementById","updateAnnouncement","navigate","ViewCreatedAnnouncementsComponent","announcementSet","groupedAnnouncements","fetchAnnouncements","trimmedContent","substring","announcementObj","push","nextEditCourses","relativeTo","r","confirm","deleteAnnouncement","routes","path","component","canActivate","expectedRole","pathMatch","CourseRoutingModule","forChild","CourseModule","DashboardComponent","studentCourseService","authService","courseDrop","isChecked","currentStudent","currentUserValue","isAdmin","role","studentId","listCourses","getCoursesByStudentId","reject","enrollment_status","res","fetchStudentCourses","hasCourses","declineStudentEnrollment","updateCourseSeats","seats","nextCheckedCourses","tokenPayload","index","splice","HomeEditComponent","courseDetailsService","courseContent","getCourseDetails","courseDetails","updateCourseDetails","clearCourseDetails","HomeComponent","isInstructor","isStudent","LeaderboardComponent","students","fetchStudents","getAvgStudentPoints","getStudentsByCourseId","average","JSON","stringify","toFixed","precision","power","Math","pow","String","round","ModulesComponent","moduleService","videoService","pdfService","surveyService","fb","sanitizer","modalService","modules","moduleLocked","linksFromDB","Array","links","safeLinks","pdfsFromDB","pdfs","safePdfs","surveysFromDB","surveys","safeSurveys","resources","quizzes","toggleContent","moduleVideosFetched","modulePDFsFetched","moduleSurveysFetched","submitted","invalidLink","validLink","invalidQuiz","validQuiz","fileToUpload","contentObject","course_name","module_number","module_title","makeForms","todayDate","fetchModules","val","student_id","points","getElementById","width","averagePoints","waitForProgressBarTimeout","waitForProgressBar","videoForm","group","updateVideoForm","linkInput","pdfForm","pdf","updatePdfForm","surveyForm","updateSurveyForm","videoObject","video_id","linksArr","len","videoUrl","url","bypassSecurityTrustResourceUrl","pdfData","myBuffer","Uint8Array","from","blob","Blob","buffer","pdfObject","pdf_id","pdfsArr","cleanPDF","pdfURL","URL","createObjectURL","rawPdf","surveyObject","survey_name","survey_id","surveysArr","surveyUrl","open","size","centered","setValue","surveyName","getModulesByCourseId","dd","getDate","padStart","mm","getMonth","yyyy","getFullYear","givenDate","fetchVideos","fetchPdfs","fetchSurveys","moduleNumber","deleteModule","item","find","input","isYoutubeLink","includes","invalid","addVideo","updateVideo","videoNumber","deleteVideo","pushLinksToArray","moduleval","updateVideoUrl","files","file","FormData","append","addPDF","err","fetchPDFs","pushPDFsToArray","updatePdfData","pdfId","updatePDF","pdfNumber","deletePDF","isValidQuiz","addSurvey","pushSurveysToArray","updateSurveyUrl","updateSurvey","surveyNumber","deleteSurvey","controls","CreatePostComponent","discussionService","module","getModuleById","moduleData","createForm","postForm","valid","moduleVal","userName","createDiscussion","textArea","createPost","read","DiscussionComponent","discussions","moduleDetails","getDiscussionsInModule","discussionsData","deleteDiscussion","EditPostComponent","makeForm","editPostForm","discussionData","updateDiscussion","discussion_id","CreateModuleComponent","labels","moduleForm","addModule","month","day","year","onDateSelect","EditModuleComponent","CreateForm","updateForm","newDate","startDate","updateModule","SidebarButtonComponent","sidebarIsOpen","marginLeft","display","SidebarComponent"],"mappings":"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","file":"modules-course-course-module-es5.js","sourcesContent":["import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Options used to bind passive event listeners.\n * @type {?}\n */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n * @type {?}\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\nfunction MatTooltipDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.showDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.hideDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.touchendHideDelay;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.touchGestures;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.position;\n}\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, \n    /**\n     * @deprecated _hammerLoader parameter to be removed.\n     * @breaking-change 9.0.0\n     */\n    // Note that we need to give Angular something to inject here so it doesn't throw.\n    _hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /**\n         * Manually-bound passive event listeners.\n         */\n        this._passiveListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n        });\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _focusMonitor.monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        }));\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        // This needs to happen in `ngOnInit` so the initial values for all inputs have been set.\n        this._setupPointerEvents();\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        }));\n        this._passiveListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /**\n     * Binds the pointer events to the tooltip trigger.\n     * @private\n     * @return {?}\n     */\n    _setupPointerEvents() {\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._passiveListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            /** @type {?} */\n            const touchendListener = (/**\n             * @return {?}\n             */\n            () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            });\n            this._passiveListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', (/**\n             * @return {?}\n             */\n            () => {\n                // Note that it's important that we don't `preventDefault` here,\n                // because it can prevent click events from firing on the element.\n                clearTimeout(this._touchstartTimeout);\n                this._touchstartTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.show()), LONGPRESS_DELAY);\n            }));\n        }\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        }));\n    }\n    /**\n     * Disables the native browser gestures, based on how the tooltip has been configured.\n     * @private\n     * @return {?}\n     */\n    _disableNativeGesturesIfNecessary() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const style = element.style;\n        /** @type {?} */\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    ((/** @type {?} */ (style))).MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                ((/** @type {?} */ (style))).webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip'\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_hideDelay;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_showDelay;\n    /** @type {?} */\n    MatTooltip.prototype._overlayRef;\n    /** @type {?} */\n    MatTooltip.prototype._tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._tooltipClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollStrategy;\n    /**\n     * The default delay in ms before showing the tooltip after show is called\n     * @type {?}\n     */\n    MatTooltip.prototype.showDelay;\n    /**\n     * The default delay in ms before hiding the tooltip after hide is called\n     * @type {?}\n     */\n    MatTooltip.prototype.hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     * @type {?}\n     */\n    MatTooltip.prototype.touchGestures;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._message;\n    /**\n     * Manually-bound passive event listeners.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._passiveListeners;\n    /**\n     * Timer started at the last `touchstart` event.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._touchstartTimeout;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._destroyed;\n    /**\n     * Handles the keydown events on the host element.\n     * Needs to be an arrow function so that we can use it in addEventListener.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._handleKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._defaultOptions;\n}\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\nif (false) {\n    /**\n     * Message to display in the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype.message;\n    /**\n     * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    TooltipComponent.prototype.tooltipClass;\n    /**\n     * The timeout ID of any current timer set to show the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._showTimeoutId;\n    /**\n     * The timeout ID of any current timer set to hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._hideTimeoutId;\n    /**\n     * Property watched by the animation framework to show or hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._visibility;\n    /**\n     * Whether interactions on the page should close the tooltip\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._closeOnInteraction;\n    /**\n     * Subject for notifying that the tooltip has been hidden from the view\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._onHide;\n    /**\n     * Stream that emits whether the user has a handset-sized display.\n     * @type {?}\n     */\n    TooltipComponent.prototype._isHandset;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._breakpointObserver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip,\n        TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip,\n        TooltipComponent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { BehaviorSubject } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnnouncementService {\n\n  private checkedCourses = new BehaviorSubject([0]);\n  sharedCheckedCourses = this.checkedCourses.asObservable();\n  private editCourses = new BehaviorSubject([{}]);\n  sharedEditCourses = this.editCourses.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  nextCheckedCourses(checkedCourses: number[]){\n    this.checkedCourses.next(checkedCourses);\n  }\n\n  nextEditCourses(editCourses: Object[]){\n    this.editCourses.next(editCourses);\n  }\n\n  createAnnouncement(user, content, created, changed, user_id){\n    let announcement = {\n      user: user,\n      content: content,\n      created: created,\n      changed: changed,\n      user_id: user_id\n    };\n    return this.http.post(`${environment.apiURL}/announcements`, announcement);\n  }\n\n  fetchAnnouncements(){\n    return this.http.get(`${environment.apiURL}/announcements`);\n  }\n\n  fetchAnnouncementById(id){\n    return this.http.get(`${environment.apiURL}/announcements/a/${id}`);\n  }\n\n  fetchAnnouncementsByCourseId(id){\n    return this.http.get(`${environment.apiURL}/announcements/c/${id}`);\n  }\n\n  updateAnnouncement(id, content, changed){\n    let announcement = {\n      id: id,\n      content: content,\n      changed: changed\n    }\n    return this.http.put(`${environment.apiURL}/announcements/${id}`, announcement);\n  }\n\n  deleteAnnouncement(id){\n    return this.http.delete(`${environment.apiURL}/announcements/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseAnnouncementService {\n\n  constructor(private http: HttpClient) { }\n\n  createCourseAnnouncement(course_id, announcement_id){\n    let courseAnnouncement = {\n      course_id: course_id,\n      announcement_id: announcement_id\n    };\n    return this.http.post(`${environment.apiURL}/courseAnnouncements`, courseAnnouncement);\n  }\n\n  fetchCourseAnnouncements(){\n    return this.http.get(`${environment.apiURL}/courseAnnouncements`);\n  }\n\n  fetchCourseAnnouncementById(id){\n    return this.http.get(`${environment.apiURL}/courseAnnouncements/${id}`);\n  }\n\n  updateCourseAnnouncement(id, course_id, announcement_id){\n    let courseAnnouncement = {\n      course_id: course_id,\n      announcement_id: announcement_id\n    };\n    return this.http.put(`${environment.apiURL}/courseAnnouncements/${id}`, courseAnnouncement);\n  }\n\n  deleteCourseAnnouncement(id){\n    return this.http.delete(`${environment.apiURL}/courseAnnouncements/${id}`);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscussionService {\n\n  constructor(private http: HttpClient) { }\n\n  createDiscussion(user, post, created, changed, module_id, user_id){\n    let discussion = {\n      user: user,\n      post: post,\n      created: created,\n      changed: changed,\n      module_id: module_id,\n      user_id: user_id\n    }\n\n    return this.http.post(`${environment.apiURL}/discussions`, discussion);\n  }\n\n  getDiscussionsInModule(moduleId) {\n    return this.http.get(`${environment.apiURL}/discussions/m/${moduleId}`);\n  }\n\n  updateDiscussion(post, changed, discussionId){\n    let discussion = {\n      post: post,\n      changed: changed\n    }\n    return this.http.put(`${environment.apiURL}/discussions/${discussionId}`, discussion);\n  }\n\n  deleteDiscussion(discussionId){\n    return this.http.delete(`${environment.apiURL}/discussions/${discussionId}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  addModule(courseId, number, title, lockedUntil) {\n    const moduleO = {\n      number: number,\n      title: title,\n      lockedUntil: lockedUntil\n    };\n    return this.http.post(`${environment.apiURL}/modules/${courseId}`, moduleO);\n  }\n  \n  getModuleById(id) {\n    return this.http.get(`${environment.apiURL}/modules/m/${id}`);\n  }\n\n  getModulesByCourseId(id) {\n    return this.http.get(`${environment.apiURL}/modules/c/${id}`);\n  }\n\n  updateModule(moduleId, number, title, lockedUntil) {\n    const moduleO = {\n      number: number,\n      title: title,\n      lockedUntil: lockedUntil\n    };\n    return this.http.put(`${environment.apiURL}/modules/${moduleId}`, moduleO);\n  }\n\n  deleteModule(moduleId) {\n    return this.http.delete(`${environment.apiURL}/modules/${moduleId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PdfService {\n\n  constructor(private http: HttpClient) { }\n\n  addPDF(formData) {\n    return this.http.post<any>(`${environment.apiURL}/pdfs`, formData);\n  }\n\n  fetchPDFs(courseId): Observable<any> {\n    return this.http.get(`${environment.apiURL}/pdfs/${courseId}`);\n  }\n\n  updatePDF(pdfID, formData){\n    return this.http.put(`${environment.apiURL}/pdfs/${pdfID}`, formData);\n  }\n\n  deletePDF(pdfID){\n    return this.http.delete(`${environment.apiURL}/pdfs/${pdfID}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyService {\n\n  constructor(private http: HttpClient) { }\n\n  addSurvey(name, link, module_id) {\n    const survey = {\n      name: name,\n      link: link,\n      module_id: module_id\n    }\n    return this.http.post(`${environment.apiURL}/surveys`, survey);\n  }\n\n  fetchSurveys(courseId) {\n    return this.http.get(`${environment.apiURL}/surveys/${courseId}`);\n  }\n\n  updateSurvey(name, link, surveyId) {\n    const survey = {\n      name: name,\n      link: link\n    }\n    return this.http.put(`${environment.apiURL}/surveys/${surveyId}`, survey);\n  }\n\n  deleteSurvey(surveyId) {\n    return this.http.delete(`${environment.apiURL}/surveys/${surveyId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoService {\n\n  constructor(private http: HttpClient) { }\n\n  addVideo(link, module_id) {\n    const video = {\n      link: link,\n      module_id: module_id\n    }\n    return this.http.post(`${environment.apiURL}/videos`, video);\n  }\n\n  fetchVideos(courseId) {\n    return this.http.get(`${environment.apiURL}/videos/${courseId}`);\n  }\n\n  updateVideo(link, videoId) {\n    const video = {\n      link: link\n    }\n    return this.http.put(`${environment.apiURL}/videos/${videoId}`, video);\n  }\n\n  deleteVideo(videoId) {\n    return this.http.delete(`${environment.apiURL}/videos/${videoId}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AnnouncementService } from '@app/core/services/announcement.service';\n\n@Component({\n  selector: 'app-announcements',\n  templateUrl: './announcements.component.html',\n  styleUrls: ['./announcements.component.scss']\n})\nexport class AnnouncementsComponent implements OnInit {\n\n  announcements: Promise<any[]>;\n  constructor(private announcementService: AnnouncementService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      console.log(params.id);\n      this.announcementService.fetchAnnouncementsByCourseId(params.id).subscribe((announcements: any[]) => {\n        this.announcements = Promise.resolve(announcements);\n        console.log(announcements);\n      });\n    })\n  }\n\n}\n","<app-sidebar></app-sidebar>\n<div id=\"main\">\n    <div class=\"flexbox-row\">\n        <h2>Announcements</h2>\n        <div *ngFor=\"let announcement of announcements | async\">\n            <div [innerHTML]=\"announcement.content\" class=\"announcement\"></div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { AnnouncementService } from '@app/core/services/announcement.service';\nimport { CourseAnnouncementService } from '@app/core/services/course-announcement.service';\nimport { CourseService } from '@app/core/services/course.service';\nimport { Subscription } from 'rxjs';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { Router } from '@angular/router';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-create-announcement',\n  templateUrl: './create-announcement.component.html',\n  styleUrls: ['./create-announcement.component.scss']\n})\nexport class CreateAnnouncementComponent implements OnInit {\n\n  checkedCourses: number[] = [];\n  subscription: Subscription;\n\n  public Editor = ClassicEditor;\n  public editorData = \"\";\n  currentUser;\n  userPayload: User;\n  isCleared;\n  courses: any[] = [];\n\n  constructor(private announcementService: AnnouncementService, private courseAnnouncementService: CourseAnnouncementService, private authenticationService: AuthenticationService, private courseService: CourseService, private router: Router) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit(): void {\n    this.userPayload = decode(this.currentUser.token);\n    console.log(this.userPayload.f_name);\n\n    this.subscription = this.announcementService.sharedCheckedCourses.subscribe((checkedCourses: number[]) => {\n      this.checkedCourses = checkedCourses;\n      console.log(checkedCourses);\n      this.checkedCourses.forEach((courseId, i, arr) => {\n        this.courseService.getCourseById(courseId).subscribe((course: any) => {\n          this.courses[i] = course;\n          console.log(course);\n        })\n      })\n    }, (error) =>{\n      console.log(error);\n    }, () => {\n      console.log(\"complete\");\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  createAnnouncement(){\n    let user = this.userPayload.f_name + \" \" + this.userPayload.l_name;\n    let today =  new Date();\n    this.announcementService.createAnnouncement(user, this.editorData, today, today, this.userPayload.id).subscribe((announcement: any) => {\n      console.log(announcement);\n      for(let i = 0; i < this.checkedCourses.length; i++){\n        let courseId = this.checkedCourses[i];\n        this.courseAnnouncementService.createCourseAnnouncement(courseId, announcement.id).subscribe((courseAnnouncement) => {\n          console.log(courseAnnouncement);\n        });\n      }\n      alert(\"Created announcement successfully\");\n    });\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px;\">\n    <!--<ng-container *ngIf=\"courseContent | async as content\">-->\n        <h3>Create announcement for courses:</h3>\n        <div class=\"row\">\n            <div *ngFor=\"let course of courses\" class=\"col-md-4\">\n                <p *ngIf=\"course\">{{course.name}}</p>\n            </div>\n        </div>\n        <!--<p>{{checkedCourses}}</p>-->\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n        <span>\n            <button (click)=\"createAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/courses\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n    <!--</ng-container>-->\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AnnouncementService } from '@app/core/services/announcement.service';\n\nimport { Observable, Subscription } from 'rxjs';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n@Component({\n  selector: 'app-edit-announcement',\n  templateUrl: './edit-announcement.component.html',\n  styleUrls: ['./edit-announcement.component.scss']\n})\nexport class EditAnnouncementComponent implements OnInit {\n\n  announcementId: Promise<number>;\n  announcement: Observable<Object>;\n  announcements: Promise<Object>;\n\n  public Editor = ClassicEditor;\n  public editorData;\n\n  subscription: Subscription;\n\n  constructor(private router: Router, private route: ActivatedRoute, private announcementService: AnnouncementService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.announcementId = Promise.resolve(params.announcementId);\n    })\n\n    this.announcementId.then((id) => {\n      console.log(id);\n      this.announcement = this.announcementService.fetchAnnouncementById(id);\n    })\n\n    this.subscription = this.announcementService.sharedEditCourses.subscribe((announcements: Object[]) => {\n      console.log(\"announcements edit: \\n\");\n      console.log(announcements);\n      this.announcements = Promise.resolve(announcements);\n    })\n  }\n\n  ngAfterViewInit(){\n    this.subscription.unsubscribe();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n    console.log(this.editorData);\n  }\n\n  editAnnouncement(){\n    if(!this.editorData){\n      this.announcement.subscribe((announcement: any) => {\n        console.log(announcement.content);\n        this.announcementId.then((id) => {\n          this.announcementService.updateAnnouncement(id, announcement.content, new Date()).subscribe(() => {\n            alert(\"Updated announcement\");\n            this.router.navigate(['/courses/view-created-announcements']);\n          })\n        })\n      })\n    } else{\n      this.announcementId.then((id) => {\n        this.announcementService.updateAnnouncement(id, this.editorData, new Date()).subscribe(() => {\n          alert(\"Updated announcement\");\n          this.router.navigate(['/courses/view-created-announcements']);\n        })\n      })\n    }\n  }\n\n}\n","<div class=\"flexbox-row\" style=\"margin-top: 30px;\" *ngIf=\"announcement | async as an\">\n    <!--<ng-container *ngIf=\"courseContent | async as content\">-->\n        <h2>Edit announcement <span>{{announcementId | async}}</span> for courses:</h2>\n        <div class=\"row\">\n            <div *ngFor=\"let announcement of announcements | async\" class=\"col-md-4\">\n                <p *ngIf=\"announcement\">{{announcement.course_name}}</p>\n            </div>\n        </div>\n        <!--<p>{{checkedCourses}}</p>-->\n        <ckeditor [editor]=\"Editor\" [data]=\"editorData ? editorData : an.content\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n        <span>\n            <button (click)=\"editAnnouncement()\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n            <a routerLink=\"/courses/view-created-announcements\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n        </span>\n        <hr>\n        <h2>Announcement Preview</h2>\n        <div [innerHTML]=\"editorData ? editorData : an.content\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n    <!--</ng-container>-->\n    <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AnnouncementService } from '@app/core/services/announcement.service';\n\n@Component({\n  selector: 'app-view-created-announcements',\n  templateUrl: './view-created-announcements.component.html',\n  styleUrls: ['./view-created-announcements.component.scss']\n})\nexport class ViewCreatedAnnouncementsComponent implements OnInit {\n\n  announcements;\n  announcementSet: Set<number> = new Set<number>();\n  groupedAnnouncements: Map<number, Object[]> = new Map<number, Object[]>();\n\n  constructor(private announcementService: AnnouncementService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    //this.announcements = this.announcementService.fetchAnnouncements();\n    this.announcementService.fetchAnnouncements().subscribe((announcements: any[]) => {\n      announcements.forEach((value, i, arr) => {\n        this.announcementSet.add(value.announcement_id);\n        let trimmedContent = value.content.substring(0, 25);\n        value.content = trimmedContent;\n      })\n      this.announcements = announcements; \n      console.log(announcements);\n      this.announcementSet.forEach((announcementId) => {\n        console.log(announcementId);\n        this.announcements.forEach((announcementObj, i) => {\n          if(announcementId == announcementObj.announcement_id){\n            console.log(\"grouped\");\n            console.log(announcementObj);\n            if(this.groupedAnnouncements.get(announcementId)){\n              this.groupedAnnouncements.get(announcementId).push(announcementObj);\n            }\n            else {\n              this.groupedAnnouncements.set(announcementId, [announcementObj]);\n            }\n            console.log(this.groupedAnnouncements.get(announcementId));\n          }\n        })\n      })\n    });\n  }\n\n  editAnnouncement(announcementId, announcements){\n    console.log(announcementId);\n    console.log(\"announcements: \\n\");\n    console.log(announcements);\n    this.announcementService.nextEditCourses(announcements);\n    this.router.navigate(['../edit-announcement', announcementId], { relativeTo: this.route })\n  }\n\n  deleteAnnouncement(announcementId){\n    let r = confirm(\"Delete announcement: \" + announcementId + \"\\nAre you sure?\");\n    if(r){\n      console.log(\"deleted: \" + announcementId);\n      this.announcementService.deleteAnnouncement(announcementId).subscribe(() => {\n        alert(\"Deleted announcement: \" + announcementId);\n      })\n    }\n  }\n\n}\n","<div class=\"flexbox-row\">\n    <h2>Manage Announcements</h2>\n\n    <div *ngFor=\"let announcements of groupedAnnouncements | keyvalue; let gindex = index\" class=\"announcement\">\n        <div *ngIf=\"gindex == 0\" style=\"background-color:white; padding-bottom: 10px\">Total announcements: {{groupedAnnouncements.size}}</div>\n        <span>Id: {{announcements.key}}</span>\n        <h4>Courses: </h4>\n        <div *ngFor=\"let announcementObj of announcements.value; let aindex = index\">\n            <span>{{announcementObj.course_name}}<span *ngIf=\"aindex != announcements.value.length - 1\">,</span></span>\n            <h4 *ngIf=\"aindex == announcements.value.length - 1\"><hr>Announcement: </h4>\n            <div *ngIf=\"aindex == announcements.value.length - 1\" [innerHTML]=\"announcementObj.content\" style=\"padding-top:10px; background-color: lightgray\">\n            </div>\n            <div>\n                <button *ngIf=\"aindex == announcements.value.length - 1\" (click)=\"editAnnouncement(announcementObj.announcement_id, announcements.value)\" class=\"btn btn-success\">Edit</button>\n                <button *ngIf=\"aindex == announcements.value.length - 1\" (click)=\"deleteAnnouncement(announcementObj.announcement_id)\" class=\"btn btn-danger\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { ModulesComponent } from './modules/modules.component';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { CreateModuleComponent } from './modulesManagement/create-module/create-module.component';\nimport { EditModuleComponent } from './modulesManagement/edit-module/edit-module.component';\nimport { HomeEditComponent } from './home-edit/home-edit.component';\nimport { DiscussionComponent } from './modulesDiscussion/discussion/discussion.component';\nimport { CreateAnnouncementComponent } from './announcementsManagement/create-announcement/create-announcement.component';\nimport { AnnouncementsComponent } from './announcementsManagement/announcements/announcements.component';\nimport { EditAnnouncementComponent } from './announcementsManagement/edit-announcement/edit-announcement.component';\nimport { ViewCreatedAnnouncementsComponent } from './announcementsManagement/view-created-announcements/view-created-announcements.component';\n\nimport { AuthenticationService as AuthGuard } from '@app/core/services/authentication.service';\n\nconst routes: Routes = [\n  { path: 'create-announcement', component: CreateAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'}, pathMatch: 'full' },\n  { path: 'view-created-announcements', component: ViewCreatedAnnouncementsComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'}, pathMatch: 'full'},\n  { path: 'edit-announcement/:announcementId', component: EditAnnouncementComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin'}, pathMatch: 'full'},\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard], pathMatch: 'full' },\n  { path: ':id', component: HomeComponent, canActivate: [AuthGuard], pathMatch: 'full' },\n  { path: ':id/announcements', component: AnnouncementsComponent, canActivate: [AuthGuard]},\n  { path: ':id/modules', component: ModulesComponent, canActivate: [AuthGuard] },\n  { path: ':id/leaderboard', component: LeaderboardComponent, canActivate: [AuthGuard] },\n  { path: ':id/create-module', component: CreateModuleComponent, canActivate: [AuthGuard], data: { expectedRole: 'instructor'} },\n  { path: ':id/edit-module/:moduleId', component: EditModuleComponent, canActivate: [AuthGuard], data: { expectedRole: 'instructor'} },\n  { path: ':id/edit-home', component: HomeEditComponent, canActivate: [AuthGuard], data: { expectedRole: 'instructor'} },\n  { path: ':id/discussion/:moduleId', component: DiscussionComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class CourseRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { CourseRoutingModule } from './course-routing.module';\nimport { ModulesComponent } from './modules/modules.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { SidebarButtonComponent } from './sidebar-button/sidebar-button.component';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { CreateModuleComponent } from './modulesManagement/create-module/create-module.component';\nimport { EditModuleComponent } from './modulesManagement/edit-module/edit-module.component';\nimport { HomeComponent } from './home/home.component';\nimport { HomeEditComponent } from './home-edit/home-edit.component';\nimport { CreatePostComponent } from './modulesDiscussion/create-post/create-post.component';\nimport { DiscussionComponent } from './modulesDiscussion/discussion/discussion.component';\nimport { EditPostComponent } from './modulesDiscussion/edit-post/edit-post.component';\nimport { CreateAnnouncementComponent } from './announcementsManagement/create-announcement/create-announcement.component';\nimport { AnnouncementsComponent } from './announcementsManagement/announcements/announcements.component';\nimport { EditAnnouncementComponent } from './announcementsManagement/edit-announcement/edit-announcement.component';\nimport { ViewCreatedAnnouncementsComponent } from './announcementsManagement/view-created-announcements/view-created-announcements.component';\n \n@NgModule({\n  declarations: [ DashboardComponent, ModulesComponent, CreateModuleComponent, EditModuleComponent, SidebarComponent, SidebarButtonComponent, LeaderboardComponent, HomeComponent, HomeEditComponent, DiscussionComponent, CreatePostComponent, EditPostComponent, CreateAnnouncementComponent, AnnouncementsComponent, EditAnnouncementComponent, ViewCreatedAnnouncementsComponent],\n  imports: [\n    CommonModule,\n    CourseRoutingModule,\n    ReactiveFormsModule,\n    NgbModule,\n    CKEditorModule,\n    MatTooltipModule,\n    MatInputModule\n  ]\n})\nexport class CourseModule { }\n","<div class=\"center-form\" style=\"position: relative\">\n\n    <h2>Dashboard</h2>\n\n    <ng-container *ngIf=\"listCourses | async; else elseBlock\">\n        <!--<button type=\"button\" (click)=\"toggleDropCourse()\" class=\"btn btn-danger btn-sm\">Toggle Course Drop</button>-->\n        <div class=\"row\">\n            <ng-container *ngFor=\"let course of listCourses | async; let index = index\">\n                <ng-container *ngIf=\"course.enrollment_status == 'enrolled'\">\n                    <button *ngIf=\"index == 0\" type=\"button\" (click)=\"toggleDropCourse()\" class=\"btn btn-danger btn-sm center-form\" style=\"position: absolute; top: 5px; left: 20px;\">Toggle Course Drop</button>\n                    <button *ngIf=\"index == 0 && isAdmin\" type=\"button\" (click)=\"createAnnouncement()\" [disabled]=\"checkedCourses.length <= 0\" class=\"btn btn-success btn-sm center-form\" [ngClass]=\"{ 'hideInfo': checkedCourses.length <= 0 }\" style=\"position: absolute; top: 5px; left: 170px;\"\n                     placement=\"bottom\" ngbTooltip=\"Click on courses (cards) to broadcast announcements to\">Create Announcement\n                    </button>\n                    <button *ngIf=\"index == 0 && isAdmin\" placement=\"bottom\" ngbTooltip=\"Click on courses (cards) to broadcast announcement to\" class=\"btn btn-success btn-sm center-form\"\n                     [ngClass]=\"{ 'hideInfo': checkedCourses.length > 0 }\" [disabled]=\"checkedCourses.length > 0\" style=\"position: absolute; top: 5px; left: 170px;\"\n                     triggers=\"click:blur\">\n                     add announcement info\n                    </button>\n                    <a *ngIf=\"index == 0 && isAdmin\" routerLink=\"/courses/view-created-announcements\" class=\"btn btn-info btn-sm center-form\" style=\"position: absolute; top: 5px; left: 335px;\">Manage Announcements\n                    </a>\n                    <div class=\"col\">\n                        <div class=\"card\" style=\"max-width: 18rem;\" (click)=\"checkBox(index, course.course_id)\" [class]=\"{'checked-color': isChecked[index]}\">\n                            <!--<img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">-->\n                            <div class=\"card-body\">\n                                <input *ngIf=\"isAdmin\" type=\"checkbox\" [checked]=\"isChecked[index]\">\n                                <h5 class=\"card-title text-wrap\" style=\"word-wrap: break-word\">{{course.name}}</h5>\n                                <p class=\"card-text text-wrap\" style=\"word-wrap: break-word\">{{course.description}}</p>\n                                <div class=\"flex-container\">\n                                    <a [routerLink]=\"[course.course_id, 'modules']\" class=\"btn btn-primary flex-item\">Go to Course</a>\n                                    <button type=\"button\" (click)=\"dropCourse(course.course_id)\" class=\"btn btn-danger btn-sm flex-item\" *ngIf=\"courseDrop\">Drop Course</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </div>\n    </ng-container>\n\n    <ng-template #elseBlock class=\"center-form\">\n        <p>You have no courses!</p>\n        <label>Enroll in courses</label>\n        <button routerLink=\"../course-library\" class=\"btn btn-primary\" style=\"margin-left: 10px\">Enroll</button>\n    </ng-template>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '@app/core/models/user';\nimport { Course } from '@app/core/models/course.model';\n\nimport { CourseService } from '@app/core/services/course.service';\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { AnnouncementService } from '@app/core/services/announcement.service';\nimport decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  courses: Course[] = [];\n  course: Course;\n  currentStudent: User;\n  tokenPayload: User;\n  isAdmin: Boolean;\n  hasCourses;\n  listCourses;\n  studentId;\n  courseDrop: Boolean = false;\n  checkedCourses: number[] = [];\n  isChecked: Boolean[] = [];\n\n  constructor(private studentCourseService: StudentCourseService, private courseService: CourseService, private authService: AuthenticationService, private router: Router, private announcementService: AnnouncementService) { }\n\n  ngOnInit() {  \n    this.currentStudent = this.authService.currentUserValue;\n    if(this.currentStudent){\n      //this.tokenPayload = decode(this.currentStudent.token);\n      this.isAdmin = (this.currentStudent.role == 'admin');\n      this.studentId = this.currentStudent.id;\n      //this.isAdmin = (this.tokenPayload.role == 'admin');      \n      //this.studentId = this.tokenPayload.id;\n      //this.hasCourses = this.asyncFetchStudentCourses(this.studentId);\n      this.listCourses = this.studentCourseService.getCoursesByStudentId(this.studentId);\n      console.log(this.studentId);\n    }\n  }\n\n  fetchStudentCourses(studentId) {\n    //let returnValue: Boolean;\n    return new Promise((resolve, reject) => {\n\n      this.studentCourseService.getCoursesByStudentId(studentId).subscribe((data: any[]) => {\n        for(let i = 0; i < data.length; i++){\n          if(data[i]){\n            if(data[i].enrollment_status == \"enrolled\"){\n              this.courses.push(data[i]);\n              console.log(\"Enrolled\");\n              console.log(data[i]);\n            } else {\n              console.log(\"Not enrolled\");\n              console.log(data[i]);\n            }\n            if(i == data.length){\n              console.log(\"got data\");\n              resolve(true);\n            }\n              //returnValue = true;\n          } else{\n            console.log(\"got no data\");\n            //returnValue = false;\n            reject(false);\n          }\n        }\n        //this.hasCourses = resolve('resolved');\n      }, (error) => {\n        reject(error);\n        console.log(\"error: \" + error);\n      });\n    }).then(res => {\n      console.log(\"resthen: \" + res);\n      return true;\n    }).catch(error => {\n      console.log('ERROR: ' + error);\n      return false;\n    })\n    //return returnValue;\n  }\n\n  async asyncFetchStudentCourses(studentId) {\n    console.log(\"calling\");\n    this.hasCourses = await this.fetchStudentCourses(studentId);\n    console.log(\"resasync: \" + this.hasCourses);\n  }\n  \n  dropCourse(courseId) {\n    this.courseService.getCourseById(courseId).subscribe((course: Course) => {\n      this.course = course;\n    })\n    let r = confirm(\"Drop the course? Are you sure?\");\n    if(r){\n      this.studentCourseService.declineStudentEnrollment(this.studentId, courseId).subscribe(() => {\n        alert(\"Dropped the course\");\n        this.courseService.updateCourseSeats(courseId, this.course.seats + 1).subscribe(() => {\n          console.log(\"incremented seats by 1: \" + (this.course.seats + 1));\n        })\n      })\n    }\n  }\n\n  toggleDropCourse(){\n    if(this.courseDrop == false){\n      this.courseDrop = true;\n    }\n    else {\n      this.courseDrop = false;\n    }\n  }\n\n  createAnnouncement(){\n    //console.log(this.checkedCourses);\n    this.announcementService.nextCheckedCourses(this.checkedCourses);\n    this.router.navigate(['/courses/create-announcement']);\n  }\n\n  checkBox(i, courseId){\n    if(this.tokenPayload.role != 'admin'){\n      return;\n    }\n    if(this.isChecked[i]){\n      this.isChecked[i] = false;\n      // remove course from array\n      this.checkedCourses.forEach((value, index, arr) => {\n        if(value == courseId){\n          console.log(courseId + \" \" + index);\n          this.checkedCourses.splice(index, 1);\n        }\n      })\n    }\n    else{\n      this.isChecked[i] = true;\n      console.log(\"courseId: \" + courseId + \" has been checked\");\n      // add course to array\n      this.checkedCourses.push(courseId);\n    }\n    console.log(this.isChecked[i]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\n\nimport { CourseDetailsService } from '@app/core/services/course-details.service';\n\n@Component({\n  selector: 'app-home-edit',\n  templateUrl: './home-edit.component.html',\n  styleUrls: ['./home-edit.component.scss']\n})\nexport class HomeEditComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData;\n  courseId;\n  courseDetails: any;\n  public courseContent;\n  isCleared = false;\n\n  constructor(private courseDetailsService: CourseDetailsService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      this.courseId = params.id;\n      //console.log(\"Params id: \" + params.id);\n    })\n    this.courseContent = this.courseDetailsService.getCourseDetails(this.courseId);\n\n    this.courseDetailsService.getCourseDetails(this.courseId).subscribe((data: any) => {\n      this.courseDetails = data;\n      //console.log(data);\n    })\n\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  onSubmit(id){\n    this.courseDetailsService.updateCourseDetails(id, this.editorData).subscribe(() => {\n      alert(\"Submitted Content\");\n      this.router.navigate(['courses', this.courseId]);\n    });\n  }\n\n  onClearButtonClicked(id){\n    let r = confirm(\"Clear content; Are you sure?\");\n    if(r){\n      this.courseDetailsService.clearCourseDetails(id).subscribe(() => {\n        alert(\"Cleared Content\");\n        this.isCleared = true;\n        this.router.navigate(['courses', this.courseId]);\n      })\n    }\n  }\n\n}\n","    <div class=\"flexbox-row\">\n        <ng-container *ngIf=\"courseContent | async as content\">\n            <ckeditor [editor]=\"Editor\" [data]=\"editorData ? editorData : content.content\" (change)=\"onChange($event)\" class=\"clamp-words\"></ckeditor>\n            <span>\n                <button (click)=\"onSubmit(content.id)\" class=\"btn btn-primary\" style=\"margin-right: 15px\">Submit</button>\n                <button (click)=\"onClearButtonClicked(content.id)\" class=\"btn btn-warning\" style=\"margin-left: 15px\">Clear and Submit</button>\n                <a routerLink=\"/courses/{{courseId}}\" class=\"btn btn-secondary\" style=\"margin-left: 15px\"><i class=\"fas fa-arrow-circle-left\"></i> Go back</a>\n            </span>\n            <hr>\n            <h2>Preview</h2>\n            <div [innerHTML]=\"editorData ? editorData : content.content\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n        </ng-container>\n        <!--<app-home-content [html]=\"editorData\"></app-home-content>-->\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\n\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { CourseDetailsService } from '@app/core/services/course-details.service';\n\nimport decode from 'jwt-decode';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  public editorData;\n  courseId;\n  courseDetails: any;\n  public courseContent;\n  isCleared = false;\n  currentUser;\n  tokenPayload;\n  isAdmin;\n  isInstructor;\n  isStudent;\n\n  constructor(private courseDetailsService: CourseDetailsService, private route: ActivatedRoute, private authenticationService: AuthenticationService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit() {\n\n    this.tokenPayload = decode(this.currentUser.token);\n    this.isAdmin = (this.tokenPayload.role === \"admin\");\n    this.isInstructor = (this.tokenPayload.role === \"instructor\");\n    this.isStudent = (this.tokenPayload.role === \"student\");\n\n    this.route.params.subscribe((params) => {\n      this.courseId = params.id;\n      //console.log(\"Params id: \" + params.id);\n    })\n    this.courseContent = this.courseDetailsService.getCourseDetails(this.courseId);\n\n    this.courseDetailsService.getCourseDetails(this.courseId).subscribe((data: any) => {\n      this.courseDetails = data;\n      //console.log(data);\n    })\n  }\n\n  public onReady(editor){\n    editor.setData(\"\");\n  }\n\n  public onChange( { editor }: ChangeEvent){\n    this.editorData = editor.getData();\n\n    if(this.isCleared){\n      editor.setData(\"\");\n      this.isCleared = false;\n    }\n    console.log(this.editorData);\n  }\n\n  onSubmit(id){\n    this.courseDetailsService.updateCourseDetails(id, this.editorData).subscribe(() => {\n      alert(\"Submitted Content\");\n    });\n  }\n\n  onClearButtonClicked(id){\n    let r = confirm(\"Clear content; Are you sure?\");\n    if(r){\n      this.courseDetailsService.clearCourseDetails(id).subscribe(() => {\n        alert(\"Cleared Content\");\n        this.isCleared = true;\n      })\n    }\n  }\n\n}\n","<app-sidebar></app-sidebar>\n<div id=\"main\">\n    <div class=\"flexbox-row\">\n        <a *ngIf=\"isAdmin || isInstructor\" routerLink=\"/courses/{{courseId}}/edit-home\" class=\"btn btn-primary\">Edit</a>\n        <ng-container *ngIf=\"courseContent | async as content\">\n            <div [innerHTML]=\"content.content\" style=\"margin-top: 30px;\" class=\"custom-font clamp-words\"></div>\n        </ng-container>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { StudentCourseService } from 'src/app/core/services/student-course.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport decode from 'jwt-decode';\n\nimport { User } from '@app/core/models/user';\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.scss']\n})\nexport class LeaderboardComponent implements OnInit {\n\n  students: any = [];\n  average;\n  courseId;\n  currentUser;\n  userPayload: User;\n\n  constructor(private studentCourseService: StudentCourseService, private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n      console.log(\"param id is: \" + params.id);\n    })\n    this.userPayload = decode(this.currentUser.token);\n\n    this.fetchStudents(this.courseId);\n    this.getAvgStudentPoints(this.courseId, this.userPayload.id);\n  }\n\n  // Gets students from course ID\n  fetchStudents(courseId) {\n    console.log(\"fetching students\");\n    this.studentCourseService.getStudentsByCourseId(courseId).subscribe((data) => {\n      this.students = data;\n      console.log(data);\n    });\n  }\n\n  getAvgStudentPoints(courseId, studentId){\n    console.log(\"Called avgstudentpoints on student_id: \" + studentId);\n    this.studentCourseService.getAvgStudentPoints(courseId, studentId).subscribe((data) => {\n      this.average = data;\n      console.log(\"avg: \" + JSON.stringify(data));\n      this.average.average = this.toFixed(this.average.average, 2);\n    })\n  }\n\n  toFixed(value, precision) {\n    var power = Math.pow(10, precision || 0);\n    return String(Math.round(value * power) / power);\n  }\n\n}\n","<!--<a href=\"../../../../assets/favicon-32x32.png\" download=\"favicon-32x32\">Download it!</a>-->\n<app-sidebar></app-sidebar>\n<div class=\"main\">\n    <div class=\"flexbox-row\">\n\n        <!-- HEADER -->\n        <h2> Leaderboard </h2>\n        <!-- COLUMN NAMES -->\n        <div class=\"flexbox-container\">\n            <div class=\"flexbox-cell left\">ID</div>\n            <div class=\"flexbox-cell right\">Points</div>\n        </div>\n\n        <!-- STUDENTS -->\n        <div class=\"flexbox-row\" *ngFor=\"let student of students; let index = index\">\n            <div class=\"flexbox-container\">\n                <div class=\"flexbox-cell left\">{{student.student_id}}</div>\n                <div class=\"flexbox-cell right\">{{student.points}}</div>\n            </div>\n        </div>\n\n        <div class=\"center-form\" style=\"margin-top: 15px\">\n            <span *ngIf=\"average\">Class average: {{average.average}}</span>\n        </div>\n    </div>\n</div>","import { Component, ElementRef, OnInit, Sanitizer, ViewChild, ViewChildren } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from '@angular/platform-browser';\nimport { NgbModal, NgbButtonLabel } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport { PdfService } from '@app/core/services/pdf.service';\nimport { VideoService } from '@app/core/services/video.service';\nimport { SurveyService } from '@app/core/services/survey.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\nimport { StudentCourseService } from '@app/core/services/student-course.service';\nimport { ModuleService } from 'src/app/core/services/module.service';\n\nimport { User } from '@app/core/models/user';\nimport decode from 'jwt-decode';\n\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { resolve } from 'url';\n\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.scss']\n})\nexport class ModulesComponent implements OnInit {\n  currentUser: User;\n  tokenPayload: User;\n  isAdmin: Boolean;\n  isInstructor: Boolean;\n  isStudent: Boolean;\n\n  modules = [];\n  todayDate;\n  moduleLocked: Boolean[] = [];\n\n  linksFromDB: string[] = new Array();\n  links: string[] = new Array();\n  safeLinks = new Map<number, Object[]>();\n\n  pdfsFromDB: Blob[] = new Array();\n  pdfs: any[] = new Array();\n  safePdfs = new Map<number, Object[]>();\n\n  surveysFromDB: string[] = new Array();\n  surveys: string[] = new Array();\n  safeSurveys = new Map<number, Object[]>();\n\n  resources = ['pdf1', 'pdf2', 'worddoc1'];\n  quizzes = ['quiz1', 'quiz2', 'quiz3'];\n\n  points: number;\n  averagePoints;\n  urlPath;\n  courseId;\n  toggleContent = [];\n  moduleVideosFetched = [];\n  modulePDFsFetched = [];\n  moduleSurveysFetched: Boolean[] = [];\n\n  videoForm: FormGroup;\n  pdfForm: FormGroup;\n  surveyForm: FormGroup;\n  updateVideoForm: FormGroup;\n  updatePdfForm: FormGroup;\n  updateSurveyForm: FormGroup;\n  submitted = false;\n  error = '';\n  invalidLink = false;\n  validLink = false;\n  invalidQuiz = false;\n  validQuiz = false;\n\n  fileToUpload: File = null;\n  contentObject = {\n    course_id: 0,\n    course_name: \"\",\n    module_id: 0,\n    module_number: 0,\n    module_title: \"\",\n    lockedUntil: \"\",\n    link: \"\"\n  }\n\n  waitForProgressBarTimeout;\n\n  constructor(\n    private moduleService: ModuleService,\n    private videoService: VideoService, \n    private pdfService: PdfService, \n    private surveyService: SurveyService,\n    private authenticationService: AuthenticationService, \n    private studentCourseService: StudentCourseService,\n    private fb: FormBuilder, \n    private router: Router, \n    private route: ActivatedRoute, \n    private sanitizer: DomSanitizer, \n    private modalService: NgbModal\n    ) \n    {\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n      this.makeForms();\n    }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n      console.log(\"param id is: \" + params.id);\n    })\n    if(!this.currentUser){\n      return;\n    }\n    this.todayDate = new Date();\n    //console.log(this.todayDate.toLocaleString());\n    this.tokenPayload = decode(this.currentUser.token);\n    this.isAdmin = (this.tokenPayload.role === \"admin\");\n    this.isInstructor = (this.tokenPayload.role === \"instructor\");\n    this.isStudent = (this.tokenPayload.role === \"student\");\n\n    this.fetchModules(this.courseId);\n    this.getAvgStudentPoints(this.courseId, this.tokenPayload.id);\n\n    //this.waitForProgressBar();\n\n    this.studentCourseService.getStudentsByCourseId(this.courseId).subscribe((data: []) => {\n      data.forEach((val: any, i, arr) => {\n        if(val.student_id == this.tokenPayload.id) {\n          //console.log(\"Got student: \" + JSON.stringify(val));\n          this.points = val.points;\n          console.log(\"Points: \" + this.points);\n          //document.getElementById('progressbar').style.width = this.points + \"%\";\n        }\n      })\n    })\n\n  }\n\n  ngOnDestroy() {\n    //clearTimeout(this.waitForProgressBarTimeout);\n  }\n\n  // BEGIN UTILITY FUNCTIONS\n\n  waitForProgressBar(){\n    console.log(\"waiting for progress bar\");\n    if(document.getElementById('progressbarAvg')){\n      document.getElementById('progressbarAvg').style.width = this.averagePoints.average + \"%\";\n    }\n    else{\n      this.waitForProgressBarTimeout = setTimeout(() => {\n        this.waitForProgressBar();\n      }, 1000)\n    }\n  }\n\n  makeForms() {\n    this.videoForm = this.fb.group({\n      link: ['', Validators.required]\n    });\n    this.updateVideoForm = this.fb.group({\n      linkInput: ['', Validators.required]\n    });\n    this.pdfForm = this.fb.group({\n      pdf: ['', Validators.required]\n    });\n    this.updatePdfForm = this.fb.group({\n      pdf: ['', Validators.required]\n    });\n    this.surveyForm = this.fb.group({\n      name: ['', Validators.required],\n      link: ['', Validators.required]\n    });\n    this.updateSurveyForm = this.fb.group({\n      name: ['', Validators.required],\n      link: ['', Validators.required]\n    })\n  }\n\n  // convenience gettera for easy access to form fields\n  get v() { return this.videoForm.controls; }\n\n  get p() { return this.pdfForm.controls; }\n\n  get s() { return this.surveyForm.controls; }\n\n  get vu() { return this.updateVideoForm.controls; }\n\n  get pu() { return this.updatePdfForm.controls; }\n\n  get su() { return this.updateSurveyForm.controls; }\n\n  pushLinksToArray(linksFromDB: any[], links: any[]) {\n    linksFromDB.forEach((video) => {\n      let videoObject = {\n        link: video.link, \n        module_id: video.module_id, \n        video_id: video.video_id\n      }\n      links.push(videoObject);\n    })\n  }\n\n  updateVideoUrl(linksArr: any[], moduleId: number) {\n    linksArr.forEach((val) => {\n      if(val.module_id === moduleId){\n        this.moduleVideosFetched[moduleId] = true;\n\n        //console.log(\"link: \" + val.link);\n        let len: number = val.link.length;\n        let id;\n        if(len >= 43){\n          id = val.link.substring(32, 43);\n        }\n        else if(len == 28){\n          id = val.link.substring(17, 28)\n        }\n        let videoUrl: SafeResourceUrl;\n        let url: string;\n        let videoObject = {};\n        url = 'https://www.youtube.com/embed/' + id;\n        videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n        videoObject = {\n          videoUrl: videoUrl,\n          video_id: val.video_id,\n          url: val.link\n        }\n        if(this.safeLinks.get(moduleId)){\n          this.safeLinks.get(moduleId).push(videoObject);\n        }\n        else {\n          this.safeLinks.set(moduleId, [videoObject]);\n        }\n      }\n    })\n  }\n\n  pushPDFsToArray(pdfsFromDB: any[], pdfs: any[]) {\n    pdfsFromDB.forEach((val) => {\n      //console.log(\"val : \" + i + \" \" + JSON.stringify(val));\n      let pdfData = val.pdf.data;\n      //console.log(Array.isArray(pdfData));\n      let myBuffer = Uint8Array.from(pdfData);\n\n      //console.log(myBuffer);\n\n      let blob = new Blob([myBuffer.buffer], { type: 'application/pdf' }); //application/octet-stream\n      //console.log(blob.size);\n      //console.log(blob);\n      let pdfObject = {\n        module_id: val.module_id, \n        pdf_id: val.pdf_id, \n        pdf: blob\n      }\n      pdfs.push(pdfObject);\n    })\n  }\n\n  updatePdfData(pdfsArr: any[], moduleId: number) {\n    pdfsArr.forEach((val) => {\n      if(val.module_id === moduleId) {\n        this.modulePDFsFetched[moduleId] = true;\n        \n        let pdfObject = {};\n        let cleanPDF: SafeResourceUrl;\n\n        let pdfURL = URL.createObjectURL(val.pdf);\n        \n        cleanPDF = this.sanitizer.bypassSecurityTrustResourceUrl(pdfURL);\n\n        pdfObject = {\n          pdf_id: val.pdf_id,\n          pdf: cleanPDF,\n          rawPdf: val.pdf\n        }\n\n        if(this.safePdfs.get(moduleId)){\n          this.safePdfs.get(moduleId).push(pdfObject);\n        } \n        else {\n          this.safePdfs.set(moduleId, [pdfObject]);\n        }\n      }\n    })\n  }\n\n  pushSurveysToArray(surveysFromDB: any[], surveys: any[]){\n    surveysFromDB.forEach((survey) => {\n      let surveyObject = {\n        name: survey.survey_name, \n        link: survey.link, \n        module_id: survey.module_id, \n        survey_id: survey.survey_id\n      }\n      surveys.push(surveyObject);\n    })\n  }\n\n  updateSurveyUrl(surveysArr: any[], moduleId: number) {\n    surveysArr.forEach((survey) => {\n      if(survey.module_id === moduleId){\n        this.moduleSurveysFetched[moduleId] = true;\n\n        let surveyUrl: SafeResourceUrl;\n        surveyUrl = this.sanitizer.bypassSecurityTrustResourceUrl(survey.link);\n        let surveyObject = {\n          surveyUrl: surveyUrl,\n          survey_id: survey.survey_id,\n          name: survey.name,\n          url: survey.link\n        }\n\n        if(this.safeSurveys.get(moduleId)){\n          this.safeSurveys.get(moduleId).push(surveyObject);\n        }\n        else {\n          this.safeSurveys.set(moduleId, [surveyObject]);\n        }\n      }\n    })\n  }\n      \n  open(content) {\n    this.submitted = false;\n    this.invalidLink = false;\n    this.invalidQuiz = false;\n    this.validLink = false;\n    this.invalidQuiz = false;\n    this.modalService.open(content, { size: 'lg', centered: true });\n  }\n      \n  openModule(index) {\n    if(this.toggleContent[index]){\n      //console.log(\"Closing module content\");\n      this.toggleContent[index] = false;\n    }\n    else {\n      //console.log(\"Opening module content\");\n      this.toggleContent[index] = true;\n    }   \n  }\n\n  openUpdateVideo(content, videoUrl) {\n    this.submitted = false;\n    this.invalidLink = false;\n    this.validLink = false;\n    this.modalService.open(content, { size: 'lg', centered: true });\n    this.updateVideoForm.get('linkInput').setValue(videoUrl);\n  }\n\n  openUpdatePDF(content, pdf){\n    this.submitted = false;\n    this.modalService.open(content, { size: 'lg', centered: true });\n    console.log(\"The updatePDF: \" + pdf);\n    //this.updatePdfForm.get('pdf').setValue(pdf);\n  }\n\n  openUpdateSurvey(content, surveyName, surveyUrl){\n    this.submitted = false;\n    this.invalidQuiz = false;\n    this.validQuiz = false;\n    this.modalService.open(content, { size: 'lg', centered: true });\n    this.updateSurveyForm.get('name').setValue(surveyName);\n    this.updateSurveyForm.get('link').setValue(surveyUrl);\n  }\n\n  getAvgStudentPoints(courseId, studentId){\n    console.log(\"Called avgstudentpoints on student_id: \" + studentId);\n    this.studentCourseService.getAvgStudentPoints(courseId, studentId).subscribe((data) => {\n      this.averagePoints = data;\n      console.log(\"avg: \" + JSON.stringify(data));\n      this.averagePoints.average = this.toFixed(this.averagePoints.average, 2);\n    })\n  }\n\n  toFixed(value, precision) {\n    var power = Math.pow(10, precision || 0);\n    return String(Math.round(value * power) / power);\n  }\n\n  viewDiscussion(courseId, moduleId){\n    this.router.navigate([`courses/${courseId}/discussion/${moduleId}`]);\n  }\n  // END UTILITY FUNCTIONS\n\n  // BEGIN MODULES CRUD\n  createModule(courseId) {\n    this.router.navigate([`courses/${courseId}/create-module`]);\n  }\n\n  fetchModules(courseId) {\n    this.moduleService.getModulesByCourseId(courseId).subscribe((data: []) => {\n      data.forEach((moduleO: any, i, arr) => {\n        //let lockedUntil = new Date(moduleO.lockedUntil.toString());\n        let lockedUntil = new Date(moduleO.lockedUntil);\n        let dd = String(lockedUntil.getDate() + 1).padStart(2, '0');\n        let mm = String(lockedUntil.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let yyyy = lockedUntil.getFullYear();\n\n        let givenDate = mm + '/' + dd + '/' + yyyy;\n        this.moduleLocked[i] = false;\n        if(this.todayDate < lockedUntil){\n          //console.log(this.todayDate.toLocaleDateString() + \" < \" + JSON.stringify(moduleO));\n          this.moduleLocked[i] = true;\n        }\n        moduleO.lockedUntil = givenDate;\n      })\n      this.modules = data;\n      //console.log(this.modules);\n      this.fetchVideos(courseId, data);\n      this.fetchPdfs(courseId, data);\n      this.fetchSurveys(courseId, data);\n    })\n  }\n\n  editModule(courseId, moduleId) {\n    this.router.navigate([`courses/${courseId}/edit-module/${moduleId}`]);\n  }\n\n  deleteModule(moduleId, moduleNumber) {\n    let response = confirm(`Delete Module ${moduleNumber}: Are you sure?`);\n    if(response == true){\n      this.moduleService.deleteModule(moduleId).subscribe(() => {\n        console.log(\"Deleted module \" + moduleId);\n        //this.modules.pop();\n      });\n      const item = this.modules.find(item => item.id === moduleId);\n      this.modules.splice(this.modules.indexOf(item));\n      }\n  }\n  // END MODULES CRUD\n\n  // BEGIN VIDEOS CRUD\n\n  handleValidLink(event){\n    //console.log(event.target.value);\n    let input: String = event.target.value;\n    let isYoutubeLink: Boolean = false;\n    let len = input.length;\n\n    if(input.includes(\"https://www.youtube.com/watch?v=\") || input.includes(\"https://youtu.be/\")){\n      console.log(\"Includes youtube link\");\n      isYoutubeLink = true;\n    } else{\n      isYoutubeLink = false;\n    }\n\n    if((len == 28 || len >= 43) && isYoutubeLink){\n      this.validLink = true;\n      this.invalidLink = false;\n    }\n    else{\n      this.validLink = false;\n    }\n  }\n\n  addVideo(link, moduleId) {\n    this.submitted = true;\n\n    if(this.videoForm.invalid){\n      return;\n    }\n\n    if(!this.validLink){\n      this.invalidLink = true;\n      return;\n    }\n\n    this.videoService.addVideo(link, moduleId).subscribe((data) => {\n      alert(\"Added video\");\n    }, (error) => {\n      this.error = error;\n    })\n  }\n\n  updateVideo(link, videoId) {\n    this.submitted = true;\n\n    if(this.updateVideoForm.invalid){\n      return;\n    }\n\n    if(!this.validLink){\n      this.invalidLink = true;\n      return;\n    }\n\n    //console.log(\"link: \" + link + \" \" + \"videoId: \" + videoId);\n    this.videoService.updateVideo(link, videoId).subscribe(() => {\n      alert(\"Updated video\");\n    })\n  }\n\n  deleteVideo(videoId, videoNumber: number) {\n    //console.log(\"Delete video: \" + videoId);\n    let r = confirm(\"Delete video \" + (videoNumber + 1) + \": Are you sure?\");\n    if(r){\n      this.videoService.deleteVideo(videoId).subscribe(() => {\n        alert(\"Deleted video\");\n      })\n    }\n  }\n\n  fetchVideos(courseId, modules) {\n    console.log(\"Fetching videos: \" + courseId);\n    this.videoService.fetchVideos(courseId).subscribe((data: any[]) => {\n      this.linksFromDB = data;\n      //console.log(\"linksFromDB: \" + JSON.stringify(this.linksFromDB));\n      this.pushLinksToArray(data, this.links);\n\n      modules.forEach((val: any, i, arr) => {\n        let moduleval = val;\n        for(let i = 0; i < data.length; i++) {\n          let val = data[i];\n          if(val.module_id == moduleval.module_id){\n            if(this.moduleVideosFetched[val.module_id] == true){\n              console.log(\"Modules videos fetched true\");\n              break;\n            }\n            else{\n              //console.log(val.module_id);\n              this.updateVideoUrl(this.links, val.module_id);\n            }\n          }\n        }\n      })\n\n    })\n  }\n  // END VIDEOS CRUD\n\n  // BEGIN PDFS CRUD\n\n  handleFileInput(event){\n    if(event.target.files.length > 0){\n      const file = event.target.files[0];\n      this.pdfForm.get('pdf').setValue(file);\n    }\n  }\n\n  handleFileInputUpdate(event){\n    if(event.target.files.length > 0){\n      const file = event.target.files[0];\n      this.updatePdfForm.get('pdf').setValue(file);\n    }\n  }\n\n  addPdf(moduleId) {\n    this.submitted = true;\n\n    if(this.pdfForm.invalid){\n      return;\n    }\n\n    //console.log(\"fileName: \" + this.pdfForm.get('pdf').value.name + \" fileSize: \" + this.pdfForm.get('pdf').value.size);\n    const formData: FormData = new FormData();\n    formData.append('fileKey', this.pdfForm.get('pdf').value);\n    formData.append('fileKey', moduleId);\n    //console.log(formData.getAll('fileKey'));\n    this.pdfService.addPDF(formData).subscribe(\n      (res) => { console.log(res); alert(\"Added PDF!\"); },\n      (err) => { console.log(err); this.error = err; }\n    );\n  }\n\n  fetchPdfs(courseId, modules) {\n    console.log(\"Fetching pdfs: \" + courseId);\n    this.pdfService.fetchPDFs(courseId).subscribe((data: any[]) => {\n      //console.log(data);\n      this.pdfsFromDB = data;\n      this.pushPDFsToArray(data, this.pdfs);\n\n      modules.forEach((val: any, i, arr) => {\n        let moduleval = val;\n        for(let i = 0; i < data.length; i++) {\n          let val = data[i];\n          if(val.module_id == moduleval.module_id){\n            if(this.modulePDFsFetched[val.module_id] == true){\n              console.log(\"Modules pdfs fetched true\");\n              break;\n            }\n            else{\n              //console.log(val.module_id);\n              this.updatePdfData(this.pdfs, val.module_id);\n            }\n          }\n        }\n      })\n\n    })\n  }\n\n  updatePDF(pdfId, moduleId){\n    this.submitted = true;\n\n    if(this.updatePdfForm.invalid){\n      return;\n    }\n\n    //console.log(\"updatePDF\");\n    const formData: FormData = new FormData();\n    formData.append('fileKey', this.updatePdfForm.get('pdf').value);\n    formData.append('fileKey', moduleId);\n    this.pdfService.updatePDF(pdfId, formData).subscribe(() => {\n      alert(\"Updated pdf\");\n    });\n  }\n\n  deletePDF(pdfId, pdfNumber: number) {\n    //console.log(\"PDF ID: \" + pdfId);\n    let r = confirm(\"Delete PDF \" + (pdfNumber + 1) + \": Are you sure?\");\n    if(r){\n      this.pdfService.deletePDF(pdfId).subscribe(() => {\n        alert(\"Deleted pdf\");\n      })\n    }\n  }\n\n  // END PDFS CRUD\n\n  // BEGIN SURVEYS CRUD (QUIZZES/EXAMS)\n\n  handleValidQuiz(event){\n    let input: String = event.target.value;\n    let len = input.length;\n    let isValidQuiz: Boolean = false;\n\n    if(input.includes(\"https://fiu.qualtrics.com/jfe/form/\")){\n      isValidQuiz = true;\n    }\n    else{\n      isValidQuiz = false;\n    }\n\n    if((len == 53) && isValidQuiz){\n      this.validQuiz = true;\n      this.invalidQuiz = false;\n    }\n    else{\n      this.validQuiz = false;\n    }\n  }\n\n  addSurvey(name, link, moduleId) {\n    this.submitted = true;\n\n    if(this.surveyForm.invalid){\n      return;\n    }\n\n    if(!this.validQuiz){\n      this.invalidQuiz = true;\n      return;\n    }\n\n    this.surveyService.addSurvey(name, link, moduleId).subscribe(() => {\n      alert(\"Added survey\");\n    })\n  }\n\n  fetchSurveys(courseId, modules: any[]) {\n    console.log(\"Fetching surveys: \" + courseId);\n    this.surveyService.fetchSurveys(courseId).subscribe((data: any[]) => {\n      this.surveysFromDB = data;\n      //console.log(\"surveysFromDB: \" + JSON.stringify(this.surveysFromDB));\n      this.pushSurveysToArray(data, this.surveys);\n\n      modules.forEach((val: any) => {\n        let moduleval = val;\n        for(let i = 0; i < data.length; i++) {\n          let val = data[i];\n          if(val.module_id == moduleval.module_id){\n            if(this.moduleSurveysFetched[val.module_id] == true){\n              console.log(\"Modules surveys fetched true\");\n              break;\n            }\n            else{\n              //console.log(val.module_id);\n              this.updateSurveyUrl(this.surveys, val.module_id);\n            }\n          }\n        }\n      })\n\n    })\n  }\n\n  updateSurvey(name, link, surveyId) {\n    this.submitted = true;\n\n    if(this.updateSurveyForm.invalid){\n      return;\n    }\n\n    if(!this.validQuiz){\n      this.invalidQuiz = true;\n      return;\n    }\n\n    //console.log(\"link: \" + link + \" \" + \"videoId: \" + videoId);\n    this.surveyService.updateSurvey(name, link, surveyId).subscribe(() => {\n      alert(\"Updated Quiz/Exam\");\n    })\n  }\n\n  deleteSurvey(surveyId, surveyNumber: number) {\n    //console.log(\"Delete video: \" + videoId);\n    let r = confirm(\"Delete Quiz/Exam \" + (surveyNumber + 1) + \": Are you sure?\");\n    if(r){\n      this.surveyService.deleteSurvey(surveyId).subscribe(() => {\n        alert(\"Deleted Quiz/Exam\");\n      })\n    }\n  }\n  // END SURVEYS CRUD (QUIZZES/EXAMS)\n\n}\n","<app-sidebar></app-sidebar>\n<div id=\"main\">\n\n\n<div class=\"flexbox-row\">\n    <div class=\"flexbox-top-container\">\n\n        <!-- Progress Bars -->\n        <!--<div class=\"align-self-stretch\">\n            <span>Your Points</span>\n            <div class=\"progress flexbox-progress-bar flexbox-top-options\" style=\"height: 30px;\">\n                <div class=\"progress-bar progress-bar-striped\" id=\"progressbar\" role=\"progressbar\" style=\"width: 10%\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{points}}%</div>\n            </div>\n        </div>\n\n        <div style=\"align-self: stretch\">\n            <span>Class Average Points</span>\n            <div class=\"progress flexbox-progress-bar flexbox-top-options\" style=\"height: 30px;\">\n                <div *ngIf=\"averagePoints\" class=\"progress-bar progress-bar-striped bg-info\" id=\"progressbarAvg\" role=\"progressbar\" style=\"width: 10%\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{averagePoints.average}}%</div>\n            </div>\n        </div>-->\n\n        <div class=\"align-self-stretch\">\n            <span>Class Average Points</span>\n            <p><ngb-progressbar type=\"info\" textType=\"white\" [value]=\"averagePoints ? averagePoints.average : 0\" [showValue]=\"true\" [striped]=\"true\" height=\"30px\"></ngb-progressbar></p>\n        </div>\n\n        <div class=\"align-self-stretch\">\n            <span>Your points</span>\n            <p><ngb-progressbar type=\"primary\" textType=\"white\" [value]=\"points ? points : 0\" [showValue]=\"true\" [striped]=\"true\" height=\"30px\"></ngb-progressbar></p>\n        </div>\n\n        <!-- End Progress Bars -->\n\n        <div *ngIf=\"currentUser && (isAdmin || isInstructor)\">\n            <button (click)=\"createModule(courseId)\" class=\"btn btn-success\"><i class=\"fas fa-plus-circle\"></i> Create Module</button>\n        </div>\n    </div>\n    <div class=\"flexbox-container\" *ngFor=\"let module of modules; let index = index\">\n        <ng-container *ngIf=\"!moduleLocked[index] || isAdmin || isInstructor; else lockedBlock\">\n            <span *ngIf=\"!moduleLocked[index] && (isAdmin || isInstructor); else lockedBlock0\"style=\"color: blue;\">locked until: {{module.lockedUntil}}</span>\n            <ng-template #lockedBlock0>\n                <span *ngIf=\"isAdmin || isInstructor\" style=\"color: red\">locked until: {{module.lockedUntil}}</span>\n            </ng-template>\n            <div class=\"flexbox-options\">\n\n                <!--FORM CONTENT IN MODAL FOR VIDEO ADD-->\n                <ng-template #contentVideoAdd let-modal>\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Add Youtube Video</h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form [formGroup]=\"videoForm\" class=\"col-9\">\n\n                            <div class=\"alert alert-info\">\n                                <p>Valid youtube links are of the formats:<br> https://youtu.be/*********** <br>And <br>https://www.youtube.com/watch?v=***********</p>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label for=\"link\"><span style=\"color: red\">*</span>Link</label>\n                                <input type=\"text\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && v.link.errors, 'is-valid': validLink }\" required formControlName=\"link\" #link (keyup)=\"handleValidLink($event)\">\n                                <div *ngIf=\"submitted && v.link.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.link.errors.required\">Link is required</div>\n                                </div>\n                                <div *ngIf=\"validLink\" class=\"valid-feedback\">\n                                    Valid youtube link\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"invalidLink && !validLink\" class=\"alert alert-danger\">\n                                Invalid Youtube Link\n                            </div>\n                        \n\n\n                            <button *ngIf=\"isAdmin || isInstructor\" type=\"submit\" (click)=\"addVideo(link.value, module.module_id)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Add Video</button>\n                            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                    </div>\n                </ng-template>\n                <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success\" (click)=\"open(contentVideoAdd)\">Add Video</button>\n                <!--END OF FORM CONTENT IN MODAL FOR VIDEO ADD-->\n\n                <!--FORM CONTENT IN MODAL FOR PDF ADD-->\n                <ng-template #contentPdfAdd let-modal>\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Add PDF File</h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n\n                        <form [formGroup]=\"pdfForm\" (ngSubmit)=\"addPdf(module.module_id)\"class=\"col-9\" method=\"POST\" enctype=\"multipart/form-data\">\n\n                            <div class=\"form-group\">\n                                <label for=\"pdf\"><span style=\"color: red\">*</span>Select a PDF File</label>\n                                <input id=\"theFile\" type=\"file\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && p.pdf.errors }\" name=\"pdf\" #file (change)=\"handleFileInput($event)\" required>\n                                <div *ngIf=\"submitted && p.pdf.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"p.pdf.errors.required\">Pdf is required</div>\n                                </div>\n                            </div>\n\n                        \n                            <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Add PDF</button>\n                        </form>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                    </div>\n                </ng-template>\n                <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success\" (click)=\"open(contentPdfAdd)\">Add PDF</button>\n                <!--END OF FORM CONTENT IN MODAL FOR PDF ADD-->\n\n                <!--FORM CONTENT IN MODAL FOR SURVEY ADD-->\n                <ng-template #contentSurveyAdd let-modal>\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Add Qualtrics Quiz/Exam</h4>\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form [formGroup]=\"surveyForm\" class=\"col-9\">\n\n                            <div class=\"alert alert-info\">\n                                <p>Valid Qualtrics links are of the formats:<br> https://fiu.qualtrics.com/jfe/form/******************</p>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label for=\"name\"><span style=\"color: red\">*</span>Name</label>\n                                <input type=\"text\" class=\"form-control\"  formControlName=\"name\" #name [ngClass]=\"{ 'is-invalid': submitted && s.name.errors }\" required>\n                                <div *ngIf=\"submitted && s.name.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"s.name.errors.required\">Name is required</div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group\">\n                                <label for=\"link\"><span style=\"color: red\">*</span>Link</label>\n                                <input type=\"text\" class=\"form-control\"  formControlName=\"link\" #link [ngClass]=\"{ 'is-invalid': submitted && s.link.errors, 'is-valid': validQuiz }\" required (keyup)=\"handleValidQuiz($event)\">\n                                <div *ngIf=\"submitted && s.link.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"s.link.errors.required\">Link is required</div>\n                                </div>\n                                <div *ngIf=\"validQuiz\" class=\"valid-feedback\">\n                                    Valid Qualtrics link\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"invalidQuiz && !validQuiz\" class=\"alert alert-danger\">\n                                Invalid Qualtrics Link\n                            </div>\n                        \n                            <button *ngIf=\"isAdmin || isInstructor\" type=\"submit\" (click)=\"addSurvey(name.value, link.value, module.module_id)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Add Quiz/Exam</button>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                    </div>\n                </ng-template>\n                <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success\" (click)=\"open(contentSurveyAdd)\">Add Quiz/Exam</button>\n                <!--END OF FORM CONTENT IN MODAL FOR SURVEY ADD-->\n\n            </div>\n\n            <!--CONTENT IN EACH MODULE-->\n            <div class=\"flexbox-item\" *ngIf=\"!toggleContent[index]; else moduleBlock\" (click)=\"openModule(index)\" style=\"cursor:pointer\">\n                <i class=\"fas fa-caret-right\"></i> <strong>Module {{ module.module_number }} </strong>| {{ module.module_title }}\n            </div>\n            <ng-template #moduleBlock>\n                <div class=\"flexbox-item\" (click)=\"openModule(index)\" style=\"cursor:pointer\">\n                    <i class=\"fas fa-caret-down\"></i> <strong>Module {{ module.module_number }} </strong>| {{ module.module_title }}\n                </div>\n            </ng-template>\n            <div class=\"flexbox-subcontainer\" *ngIf=\"toggleContent[index]\">\n                <!--RESOURCES PDF CONTENT-->\n                <div class=\"flexbox-resources\" *ngFor=\"let pdf of safePdfs | keyvalue; let index = index\">\n                    <div *ngIf=\"pdf.key == module.module_id\">\n                        <div class=\"flexbox-resources-inner\" *ngFor=\"let innerpdf of pdf.value; let j = index\">\n                            <i class=\"fas fa-paperclip\"></i>\n\n                            <ng-template #contentPdf let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">{{module.module_title}} - Pdf {{j + 1}}</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <div class=\"embed-responsive embed-responsive-16by9\">\n                                        <iframe class=\"embed-responsive-item\" width=\"780\" height=\"480\" [src]=\"innerpdf.pdf\"></iframe>\n                                        <!--<a [href]=\"innerpdf.pdf\">Link</a>-->\n                                    </div>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button class=\"btn btn-primary\" (click)=\"open(contentPdf)\">View Pdf {{j + 1}}</button>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-danger flexbox-module-options\" (click)=\"deletePDF(innerpdf.pdf_id, j)\">Delete Pdf</button>\n\n                            <!--FORM CONTENT IN MODAL FOR PDF EDIT-->\n                            <ng-template #contentPdfUpdate let-modal>\n                            <div class=\"modal-header\">\n                                <h4 class=\"modal-title\">Edit PDF</h4>\n                                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <form [formGroup]=\"updatePdfForm\" (ngSubmit)=\"updatePDF(innerpdf.pdf_id, module.module_id)\"class=\"col-9\" method=\"POST\" enctype=\"multipart/form-data\">\n\n                                    <div class=\"form-group\">\n                                        <label for=\"pdf\"><span style=\"color: red\">*</span>Select a PDF File</label>\n                                        <input id=\"theFile\" type=\"file\" class=\"form-control\" name=\"pdf\" #file (change)=\"handleFileInputUpdate($event)\" [ngClass]=\"{ 'is-invalid': submitted && pu.pdf.errors }\" required>\n                                        <div *ngIf=\"submitted && pu.pdf.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"pu.pdf.errors.required\">Pdf is required</div>\n                                        </div>\n                                    </div>\n                                \n                                    <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update PDF</button>\n                                </form>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                            </div>\n                        </ng-template>\n                        <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success flexbox-module-options\" (click)=\"openUpdatePDF(contentPdfUpdate, innerpdf.rawPdf)\">Edit PDF</button>\n                        <!--END OF FORM CONTENT IN MODAL FOR PDF EDIT-->\n\n                        </div>\n                    </div>\n                </div>\n                <!--END OF RESOURCES PDF CONTENT-->\n\n                <!--YOUTUBE LINKS CONTENT-->\n                <div class=\"flexbox-links\" *ngFor=\"let link of safeLinks | keyvalue; let index = index\">\n                    <div *ngIf=\"link.key == module.module_id\">\n                        <div class=\"flexbox-links-inner\" *ngFor=\"let innerlink of link.value; let j = index\">\n                            <i class=\"fab fa-youtube\"></i>    \n\n                            <ng-template #contentVideo let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">{{module.module_title}} - Video {{j + 1}}</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <div class=\"embed-responsive embed-responsive-16by9\">\n                                        <iframe class=\"embed-responsive-item\" width=\"780\" height=\"480\" [src]=\"innerlink.videoUrl\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                    </div>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button class=\"btn btn-primary\" (click)=\"open(contentVideo)\">Watch Video {{j + 1}}</button>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-danger flexbox-module-options\" (click)=\"deleteVideo(innerlink.video_id, j)\">Delete Video</button>\n\n                            <!--FORM CONTENT IN MODAL FOR VIDEO EDIT-->\n                            <ng-template #contentVideoUpdate let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">Edit Youtube Video</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <form [formGroup]=\"updateVideoForm\" class=\"col-9\">\n            \n                                        <div class=\"alert alert-info\">\n                                            <p>Valid youtube links are of the formats:<br> https://youtu.be/*********** <br>And <br>https://www.youtube.com/watch?v=***********</p>\n                                        </div>\n\n                                        <div class=\"form-group\">\n                                            <label for=\"linkInput\"><span style=\"color: red\">*</span>New Link</label>\n                                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"linkInput\" #linkInput [ngClass]=\"{ 'is-invalid': submitted && vu.linkInput.errors, 'is-valid': validLink }\" required (keyup)=\"handleValidLink($event)\">\n                                            <div *ngIf=\"submitted && vu.linkInput.errors\" class=\"invalid-feedback\">\n                                                <div *ngIf=\"vu.linkInput.errors.required\">Link is required</div>\n                                            </div>\n                                            <div *ngIf=\"validLink\" class=\"valid-feedback\">\n                                                Valid youtube link\n                                            </div>\n                                        </div>\n\n                                        <div *ngIf=\"invalidLink && !validLink\" class=\"alert alert-danger\">\n                                            Invalid Youtube Link\n                                        </div>\n                                    \n                                        <button type=\"submit\" (click)=\"updateVideo(linkInput.value, innerlink.video_id)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Video</button>\n                                    </form>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success flexbox-module-options\" (click)=\"openUpdateVideo(contentVideoUpdate, innerlink.url)\">Edit Video</button>\n                            <!--END OF FORM CONTENT IN MODAL FOR VIDEO EDIT-->\n                        </div>\n                    </div>\n                </div>\n                <!--END OF YOUTUBE LINKS CONTENT-->\n\n                <!--QUIZZES LINKS CONTENT-->\n                <div class=\"flexbox-links\" *ngFor=\"let survey of safeSurveys | keyvalue; let index = index\">\n                    <div *ngIf=\"survey.key == module.module_id\">\n                        <div class=\"flexbox-links-inner\" *ngFor=\"let surveyObject of survey.value; let j = index\">\n                            <i class=\"fas fa-paper-plane\"></i>    \n\n                            <ng-template #contentSurvey let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">{{module.module_title}} - {{surveyObject.name}}</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <div class=\"embed-responsive embed-responsive-16by9\">\n                                        <iframe class=\"embed-responsive-item\" width=\"780\" height=\"480\" [src]=\"surveyObject.surveyUrl\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                    </div>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button class=\"btn btn-primary\" (click)=\"open(contentSurvey)\">Take Quiz {{j + 1}}</button>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-danger flexbox-module-options\" (click)=\"deleteSurvey(surveyObject.survey_id, j)\">Delete Quiz/Exam</button>\n\n                            <!--FORM CONTENT IN MODAL FOR QUIZ EDIT-->\n                            <ng-template #contentSurveyUpdate let-modal>\n                                <div class=\"modal-header\">\n                                    <h4 class=\"modal-title\">Edit Quiz/Exam</h4>\n                                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <form [formGroup]=\"updateSurveyForm\" class=\"col-9\">\n            \n                                        <div class=\"alert alert-info\">\n                                            <p>Valid Qualtrics links are of the formats:<br> https://fiu.qualtrics.com/jfe/form/******************</p>\n                                        </div>\n                                        \n                                        <div class=\"form-group\">\n                                            <label for=\"name\"><span style=\"color: red\">*</span>New Name</label>\n                                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"name\" #name [ngClass]=\"{ 'is-invalid': submitted && su.name.errors }\" required>\n                                            <div *ngIf=\"submitted && su.name.errors\" class=\"invalid-feedback\">\n                                                <div *ngIf=\"su.name.errors.required\">Name is required</div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"form-group\">\n                                            <label for=\"link\"><span style=\"color: red\">*</span>New Link</label>\n                                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"link\" #link [ngClass]=\"{ 'is-invalid': submitted && su.link.errors, 'is-valid': validQuiz }\" required (keyup)=\"handleValidQuiz($event)\">\n                                            <div *ngIf=\"submitted && su.link.errors\" class=\"invalid-feedback\">\n                                                <div *ngIf=\"su.link.errors.required\">Link is required</div>\n                                            </div>\n                                            <div *ngIf=\"validQuiz\" class=\"valid-feedback\">\n                                                Valid Qualtrics link\n                                            </div>\n                                        </div>\n\n                                        <div *ngIf=\"invalidQuiz && !validQuiz\" class=\"alert alert-danger\">\n                                            Invalid Qualtrics Link\n                                        </div>\n                                    \n                                        <button type=\"submit\" (click)=\"updateSurvey(name.value, link.value, surveyObject.survey_id)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Quiz/Exam</button>\n                                    </form>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                                </div>\n                            </ng-template>\n                            <button *ngIf=\"isAdmin || isInstructor\" class=\"btn btn-success flexbox-module-options\" (click)=\"openUpdateSurvey(contentSurveyUpdate, surveyObject.name, surveyObject.url)\">Edit Quiz/Exam</button>\n                            <!--END OF FORM CONTENT IN MODAL FOR QUIZ EDIT-->\n                        </div>\n                    </div>\n                </div>\n                <!--END OF QUIZZES LINKS CONTENT-->\n\n            </div>  \n            <div class=\"flexbox-item-module-actions\" *ngIf=\"currentUser\">\n                <button *ngIf=\"isAdmin || isInstructor\" type=\"button\" (click)=\"editModule(module.course_id, module.module_id)\" class=\"btn btn-primary\"><i class=\"fas fa-edit\"></i> Edit</button>\n                <button *ngIf=\"isAdmin || isInstructor\" type=\"button\" (click)=\"deleteModule(module.module_id, module.module_number)\" class=\"btn btn-danger\"><i class=\"fas fa-minus-circle\"></i> Delete</button>\n                <button type=\"button\" (click)=\"viewDiscussion(module.course_id, module.module_id)\" class=\"btn btn-primary\"><i class=\"fas fa-comments\"></i> View Discussion</button>\n            </div>\n            <!--END OF CONTENT IN EACH MODULE-->\n        </ng-container>\n\n            <ng-template #lockedBlock>\n                <span style=\"color: red;\">locked until: {{module.lockedUntil}}</span>\n                <div class=\"flexbox-item\" (click)=\"openModule(index)\" style=\"cursor: not-allowed; opacity: 0.5;\">\n                    <i class=\"fas fa-caret-right\"></i> <strong>Module {{ module.module_number }} </strong>| {{ module.module_title }}\n                </div>\n            </ng-template>\n    </div>\n</div>\n\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ModuleService } from '@app/core/services/module.service';\nimport { DiscussionService } from '@app/core/services/discussion.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.scss']\n})\nexport class CreatePostComponent implements OnInit {\n\n  postForm: FormGroup;\n  module: Promise<object>|null = null;\n  currentUser;\n  userPayload: User;\n  submitted = false;\n\n  @ViewChild('textArea', { read: ElementRef }) textArea: ElementRef;\n  \n  constructor(private fb: FormBuilder, private discussionService: DiscussionService, private moduleService: ModuleService, private authenticationService: AuthenticationService, private route: ActivatedRoute) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  get p() { return this.postForm.controls; };\n\n  ngOnInit(): void {\n    this.userPayload = decode(this.currentUser.token);\n\n    this.route.params.subscribe((params) => {\n      this.moduleService.getModuleById(params.moduleId).subscribe((moduleData) => {\n        this.module = new Promise((resolve, reject) => {\n          resolve(moduleData[0]);\n        });\n      });\n    });\n    this.createForm();\n  }\n\n  createForm(){\n    this.postForm = this.fb.group({\n      post: ['', Validators.required]\n    })\n  }\n\n  createPost(post){\n    this.submitted = true;\n\n    if(!this.postForm.valid){\n      return;\n    }\n\n    this.module.then((moduleVal: any) => {\n      let userName = this.userPayload.f_name + \" \" + this.userPayload.l_name;\n      let today = new Date();\n      this.discussionService.createDiscussion(userName, post, today, today, moduleVal.id, this.userPayload.id).subscribe(() => {\n        alert(\"Created post\");\n      })\n    })\n  }\n\n  public autoGrow() {\n    const textArea = this.textArea.nativeElement;\n    textArea.style.overflow = 'hidden';\n    textArea.style.height = '0px';\n    textArea.style.height = textArea.scrollHeight + 'px';\n   }\n   \n}\n","<div class=\"center-form announcement\">\n<form [formGroup]=\"postForm\">\n\n    <div class=\"form-group\">\n        <textarea class=\"form-control\" rows=\"2\" placeholder=\"Add a post...\" [ngClass]=\"{ 'is-invalid': submitted && p.post.errors }\" required formControlName=\"post\" #post style=\"width: 300px\"\n          matInput cdkTextareaAutosize cdkAutosizeMinRows=\"2\"></textarea>\n        <div *ngIf=\"submitted && p.post.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"p.post.errors.required\">Post cannot be empty</div>\n        </div>\n    </div>\n\n    <button type=\"submit\" (click)=\"createPost(post.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Create Post</button>\n</form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { DiscussionService } from '@app/core/services/discussion.service';\nimport { ModuleService } from '@app/core/services/module.service';\nimport { AuthenticationService } from '@app/core/services/authentication.service';\n\nimport { User } from '@app/core/models/user';\n\nimport decode from 'jwt-decode';\n@Component({\n  selector: 'app-discussion',\n  templateUrl: './discussion.component.html',\n  styleUrls: ['./discussion.component.scss']\n})\nexport class DiscussionComponent implements OnInit {\n\n  discussions = [];\n  moduleDetails = {};\n  currentUser;\n  userPayload: User;\n\n  constructor(private discussionService: DiscussionService, private moduleService: ModuleService, private authenticationService: AuthenticationService, private route: ActivatedRoute) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n   }\n\n  ngOnInit(): void {\n    this.userPayload = decode(this.currentUser.token);\n\n    this.route.params.subscribe((params) => {\n      this.discussionService.getDiscussionsInModule(params.moduleId).subscribe((discussionsData: any[]) => {\n        console.log(discussionsData);\n        this.discussions = discussionsData;\n      })   \n      this.moduleService.getModuleById(params.moduleId).subscribe((moduleData: any[]) => {\n        console.log(moduleData[0]);\n        this.moduleDetails = moduleData[0];\n      })\n    })\n  }\n\n  deletePost(discussionId){\n    let r = confirm(\"Delete post: Are you sure?\");\n    if(r){\n      this.discussionService.deleteDiscussion(discussionId).subscribe(() => {\n        alert(\"Deleted post successfully\");\n      })\n    }\n  }\n\n}\n","<div class=\"center-form\">\n    <div *ngIf=\"moduleDetails as md\">\n        <h1 style=\"text-align: center;\">Discussion</h1>\n        <h2 style=\"text-align: center;\">Module {{md.number}}</h2>\n        <h3>{{md.title}}</h3>\n    </div>\n    <app-create-post></app-create-post>\n        <div *ngFor=\"let post of discussions\" class=\"announcement\">\n            <p>\n                {{post.user}} | {{post.created >= post.changed ? (post.created | date:'short') : (post.changed | date:'short')}}<br>\n                {{post.post}}<br>\n                <app-edit-post *ngIf=\"post.user_id == userPayload.id\" [discussionData]=\"post\"></app-edit-post>\n                <button *ngIf=\"post.user_id == userPayload.id\" type=\"button\" (click)=\"deletePost(post.discussion_id)\" class=\"btn btn-danger\">Delete Post</button>\n            </p>\n        </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DiscussionService } from '@app/core/services/discussion.service';\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.scss']\n})\nexport class EditPostComponent implements OnInit {\n\n  editPostForm: FormGroup;\n  submitted = false;\n  discussions;\n\n  @Input() discussionData;\n\n  constructor(private modalService: NgbModal, private fb: FormBuilder, private discussionService: DiscussionService) { }\n\n\n  ngOnInit(): void {\n    this.makeForm();\n  }\n\n  get up() { return this.editPostForm.controls; }\n\n  makeForm(){\n    this.editPostForm = this.fb.group({\n      post: ['', Validators.required]\n    })\n  }\n\n  open(content) {\n    this.editPostForm.get('post').setValue(this.discussionData.post);\n    this.modalService.open(content, { size: 'lg', centered: true });\n  }\n\n  updatePost(post){\n    this.submitted = true;\n\n    if(!this.editPostForm.valid){\n      return;\n    }\n\n    let today = new Date();\n    this.discussionService.updateDiscussion(post, today, this.discussionData.discussion_id).subscribe(() => {\n      alert(\"Updated post\");\n    })\n  }\n\n}\n","<ng-template #contentPostEdit let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Edit Your Post</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <form [formGroup]=\"editPostForm\" class=\"col-9\">\n\n            <div class=\"form-group\">\n                <label for=\"post\">Post</label>\n                <textarea class=\"form-control\" rows=\"3\" [ngClass]=\"{ 'is-invalid': submitted && up.post.errors }\" required formControlName=\"post\" #post></textarea>\n                <div *ngIf=\"submitted && up.post.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"up.post.errors.required\">Post is required</div>\n                </div>\n            </div>\n        \n\n\n            <button type=\"submit\" (click)=\"updatePost(post.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Post</button>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n    </div>\n</ng-template>\n<button class=\"btn btn-success\" (click)=\"open(contentPostEdit)\">Edit Post</button>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ModuleService } from '@app/core/services/module.service';\n\n@Component({\n  selector: 'app-create-module',\n  templateUrl: './create-module.component.html',\n  styleUrls: ['./create-module.component.scss']\n})\nexport class CreateModuleComponent implements OnInit {\n  moduleForm: FormGroup;\n  labels = ['number', 'title', 'lockedUntil'];\n  courseId: number;\n  submitted = false;\n  todayDate: Promise<string>|null = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private moduleService: ModuleService, private fb: FormBuilder) {\n    this.moduleForm = this.fb.group({\n      number: ['', Validators.required],\n      title: ['', Validators.required],\n      lockedUntil: ['', Validators.required]\n    });\n   }\n\n\n  get m() { return this.moduleForm.controls; }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n      console.log(\"params id create: \" + params.id);\n    })\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    this.todayDate = new Promise((resolve, reject) => { resolve(mm + '/' + dd + '/' + yyyy)});\n  }\n\n  addModule(number, title, lockedUntil) {\n    this.submitted = true;\n\n    let today = new Date(lockedUntil);\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    lockedUntil = yyyy + '-' + mm + '-' + dd;\n\n    console.log(\"going to submit lockedUntil: \" + lockedUntil);\n    if(!this.moduleForm.valid){\n      return;\n    }\n\n    this.moduleService.addModule(this.courseId, number, title, lockedUntil).subscribe(() => {\n      //this.router.navigate(['/admin']);\n      alert(\"Added module successfully!\");\n    });\n  }\n\n  onDateSelect(event){\n    this.todayDate = new Promise((resolve, reject) => { resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year); });\n  }\n\n}\n","<div class=\"center-form\">\n    <h2>Create New Module</h2>\n    <form [formGroup]=\"moduleForm\" class=\"col-sm-4\">\n    \n        <div class=\"form-group\">\n            <label for=\"number\">Number</label>\n            <input type=\"text\" class=\"form-control\"  formControlName=\"number\" #number [ngClass]=\"{ 'is-invalid': submitted && m.number.errors }\" required>\n            <div *ngIf=\"submitted && m.number.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"m.number.errors.required\">Number is required</div>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <textarea class=\"form-control\"  formControlName=\"title\" #title [ngClass]=\"{ 'is-invalid': submitted && m.title.errors }\" required></textarea>\n            <div *ngIf=\"submitted && m.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"m.title.errors.required\">Title is required</div>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"lockedUntil\">Locked Until</label>\n            <div class=\"input-group\">\n                <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n                       name=\"dp\" ngbDatepicker (dateSelect)=\"onDateSelect($event)\" #d=\"ngbDatepicker\" formControlName=\"lockedUntil\" #lockedUntil readonly [value]=\"todayDate | async\" [ngClass]=\"{ 'is-invalid': submitted && m.lockedUntil.errors }\" required>\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d.toggle()\" type=\"button\"></button>\n                </div>\n                <div *ngIf=\"submitted && m.lockedUntil.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"m.lockedUntil.errors.required\">Locked Until is required</div>\n                </div>\n            </div>\n        </div>\n    \n        <button type=\"submit\" (click)=\"addModule(number.value, title.value, lockedUntil.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Create Module</button>\n        <!--<a routerLink=\"/admin\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>-->\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { Module } from '@app/core/models/module.model';\nimport { ModuleService } from '@app/core/services/module.service';\n\n@Component({\n  selector: 'app-edit-module',\n  templateUrl: './edit-module.component.html',\n  styleUrls: ['./edit-module.component.scss']\n})\nexport class EditModuleComponent implements OnInit {\n  id: number;\n  moduleNumber: number;\n  module: Module;\n  updateForm: FormGroup;\n  submitted = false;\n  startDate;\n  givenDate: Promise<string>|null = null;\n\n  constructor(private moduleService: ModuleService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\n    this.CreateForm();\n   }\n\n   CreateForm() {\n     this.updateForm = this.fb.group({\n       number: ['', Validators.required],\n       title: ['', Validators.required],\n       lockedUntil: ['', Validators.required]\n     })\n   }\n\n  get mu() { return this.updateForm.controls; }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params.moduleId;\n      this.moduleService.getModuleById(this.id).subscribe((res: Module) => {\n        this.module = res[0];\n\n        this.moduleNumber = this.module.number;\n        //console.log(this.module);\n        //console.log(this.module.id);\n\n        this.updateForm.get('number').setValue(this.module.number);\n        this.updateForm.get('title').setValue(this.module.title);\n        this.updateForm.get('lockedUntil').setValue(this.module.lockedUntil);\n        //this.givenDate = this.module.lockedUntil;\n        let newDate = new Date(this.module.lockedUntil.toString());\n        let dd = String(newDate.getDate() + 1).padStart(2, '0');\n        let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let yyyy = newDate.getFullYear();\n\n        this.givenDate = new Promise((resolve, reject) => { resolve(mm + '/' + dd + '/' + yyyy); });\n        this.startDate = (\"\"+this.module.lockedUntil).split(\"-\");\n        //console.log(this.startDate);\n      })\n    })\n  }\n\n  updateModule(number, title, lockedUntil) {\n    this.submitted = true;\n\n    let today = new Date(lockedUntil);\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    lockedUntil = yyyy + '-' + mm + '-' + dd;\n\n    //console.log(\"going to submit lockedUntil: \" + lockedUntil);\n    if(!this.updateForm.valid){\n      return;\n    }\n      this.moduleService.updateModule(this.id, number, title, lockedUntil).subscribe(res => {\n        alert('Module updated successfully');\n      });\n  }\n\n  onDateSelect(event){\n    this.givenDate = new Promise((resolve, reject) => { resolve(String(event.month).padStart(2, '0') + '/' + String(event.day).padStart(2, '0') + '/' + event.year); });\n  }\n\n}\n","<div class=\"center-form\">\n    <h2>Edit Module {{moduleNumber}}</h2>\n    <form [formGroup]=\"updateForm\" class=\"col-sm-4\">\n    \n        <div class=\"form-group\">\n            <label for=\"number\">Number</label>\n            <input type=\"text\" class=\"form-control\"  formControlName=\"number\" #number [ngClass]=\"{ 'is-invalid': submitted && mu.number.errors }\" required>\n            <div *ngIf=\"submitted && mu.number.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"mu.number.errors.required\">Number is required</div>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <textarea class=\"form-control\"  formControlName=\"title\" #title [ngClass]=\"{ 'is-invalid': submitted && mu.title.errors }\" required></textarea>\n            <div *ngIf=\"submitted && mu.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"mu.title.errors.required\">Title is required</div>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"lockedUntil\">Locked Until</label>\n            <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n                       name=\"dp\" ngbDatepicker (dateSelect)=\"onDateSelect($event)\" #d=\"ngbDatepicker\" readonly [value]=\"givenDate | async\" formControlName=\"lockedUntil\" #lockedUntil [ngClass]=\"{ 'is-invalid': submitted && mu.lockedUntil.errors }\" required>\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-outline-secondary far fa-calendar-alt\" (click)=\"d.toggle()\" type=\"button\"></button>\n                </div>\n                <div *ngIf=\"submitted && mu.lockedUntil.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"mu.lockedUntil.errors.required\">Locked Until is required</div>\n                </div>\n            </div>\n        </div>\n    \n        <button type=\"submit\" (click)=\"updateModule(number.value, title.value, lockedUntil.value)\" class=\"btn btn-primary\"><i class=\"fas fa-plus-circle\"></i> Update Module</button>\n        <!--<a routerLink=\"/admin\" class=\"btn btn-warning\"><i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>-->\n    </form>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar-button',\n  templateUrl: './sidebar-button.component.html',\n  styleUrls: ['./sidebar-button.component.scss']\n})\nexport class SidebarButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  sidebarIsOpen = false;\n  openNav(){\n    \n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    \n    document.getElementById(\"main\").style.marginLeft = \"250px\";\n    document.getElementById(\"mySidenav\").style.display = \"block\";\n    this.sidebarIsOpen = true;\n  }\n\n  closeNav(){\n    document.getElementById(\"mySidenav\").style.display = \"none\";\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n\n    document.getElementById(\"main\").style.marginLeft = \"0\";\n    this.sidebarIsOpen = false;\n  }\n}\n","<div *ngIf=\"sidebarIsOpen == false\" class=\"flexbox-row\">\n    <span (click)=\"openNav()\" class=\"flexbox-side\" style=\"cursor: pointer\"><i class=\"fas fa-angle-double-right fa-5x\"></i></span>\n</div>\n<div *ngIf=\"sidebarIsOpen == true\" class=\"flexbox-row\">\n    <span (click)=\"closeNav()\" class=\"flexbox-side\" style=\"cursor: pointer\"><i class=\"fas fa-angle-double-left fa-5x\"></i></span>\n</div>  \n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  courseId: number;\n\n  constructor(private route: ActivatedRoute) { }\n  sidebarIsOpen = true;\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.courseId = params.id;\n    })\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\n    document.getElementById(\"mySidenav\").style.display = \"block\";\n  }\n\n}\n","<div id=\"mySidenav\" class=\"sidenav\">\n    <a class=\"nav-link\" [routerLink]=\"['/courses', courseId]\" routerLinkActive=\"active\">Home</a>\n    <a class=\"nav-link\" routerLink=\"/courses/{{courseId}}/announcements\" routerLinkActive=\"active\">Announcements</a>\n    <a class=\"nav-link\" routerLink=\"/courses/{{courseId}}/leaderboard\" routerLinkActive=\"active\">Leaderboard</a>\n    <a class=\"nav-link\" routerLink=\"/courses/{{courseId}}/modules\" routerLinkActive=\"active\">Modules</a>\n</div>"]}